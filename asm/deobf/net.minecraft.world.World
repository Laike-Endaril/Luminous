package asm.net.minecraft.world;
import java.util.*;
import org.objectweb.asm.*;
public class WorldDump implements Opcodes {

public static byte[] dump () throws Exception {

ClassWriter cw = new ClassWriter(0);
FieldVisitor fv;
MethodVisitor mv;
AnnotationVisitor av0;

cw.visit(52, ACC_PUBLIC + ACC_SUPER + ACC_ABSTRACT, "net/minecraft/world/World", null, "java/lang/Object", new String[] { "net/minecraft/world/IBlockAccess", "net/minecraftforge/common/capabilities/ICapabilityProvider" });

cw.visitInnerClass("net/minecraft/world/World$4", null, null, 0);

cw.visitInnerClass("net/minecraft/world/World$3", null, null, 0);

cw.visitInnerClass("net/minecraft/world/World$2", null, null, 0);

cw.visitInnerClass("net/minecraft/world/World$1", null, null, 0);

cw.visitInnerClass("net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "net/minecraft/util/math/BlockPos", "PooledMutableBlockPos", ACC_PUBLIC + ACC_FINAL + ACC_STATIC);

cw.visitInnerClass("net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos", "MutableBlockPos", ACC_PUBLIC + ACC_STATIC);

cw.visitInnerClass("net/minecraftforge/common/ForgeChunkManager$Ticket", "net/minecraftforge/common/ForgeChunkManager", "Ticket", ACC_PUBLIC + ACC_STATIC);

cw.visitInnerClass("net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "net/minecraftforge/event/world/BlockEvent", "NeighborNotifyEvent", ACC_PUBLIC + ACC_STATIC);

cw.visitInnerClass("net/minecraft/util/math/RayTraceResult$Type", "net/minecraft/util/math/RayTraceResult", "Type", ACC_PUBLIC + ACC_FINAL + ACC_STATIC + ACC_ENUM);

cw.visitInnerClass("net/minecraft/world/chunk/Chunk$EnumCreateEntityType", "net/minecraft/world/chunk/Chunk", "EnumCreateEntityType", ACC_PUBLIC + ACC_FINAL + ACC_STATIC + ACC_ENUM);

cw.visitInnerClass("java/lang/invoke/MethodHandles$Lookup", "java/lang/invoke/MethodHandles", "Lookup", ACC_PUBLIC + ACC_FINAL + ACC_STATIC);

{
fv = cw.visitField(ACC_PUBLIC + ACC_STATIC, "MAX_ENTITY_RADIUS", "D", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "seaLevel", "I", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "scheduledUpdatesAreImmediate", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "loadedEntityList", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "unloadedEntityList", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "loadedTileEntityList", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/tileentity/TileEntity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "tickableTileEntities", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/tileentity/TileEntity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "addedTileEntityList", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/tileentity/TileEntity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "tileEntitiesToBeRemoved", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/tileentity/TileEntity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "playerEntities", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/entity/player/EntityPlayer;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "weatherEffects", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "entitiesById", "Lnet/minecraft/util/IntHashMap;", "Lnet/minecraft/util/IntHashMap<Lnet/minecraft/entity/Entity;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "cloudColour", "J", null, new Long(16777215L));
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "skylightSubtracted", "I", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "updateLCG", "I", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "DIST_HASH_MAGIC", "I", null, new Integer(1013904223));
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "prevRainingStrength", "F", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "rainingStrength", "F", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "prevThunderingStrength", "F", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "thunderingStrength", "F", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "lastLightningBolt", "I", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "rand", "Ljava/util/Random;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "provider", "Lnet/minecraft/world/WorldProvider;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "pathListener", "Lnet/minecraft/pathfinding/PathWorldListener;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "eventListeners", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/world/IWorldEventListener;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "saveHandler", "Lnet/minecraft/world/storage/ISaveHandler;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "findingSpawnPoint", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "mapStorage", "Lnet/minecraft/world/storage/MapStorage;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "villageCollection", "Lnet/minecraft/village/VillageCollection;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "lootTable", "Lnet/minecraft/world/storage/loot/LootTableManager;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "advancementManager", "Lnet/minecraft/advancements/AdvancementManager;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "functionManager", "Lnet/minecraft/advancements/FunctionManager;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "profiler", "Lnet/minecraft/profiler/Profiler;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "calendar", "Ljava/util/Calendar;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "worldScoreboard", "Lnet/minecraft/scoreboard/Scoreboard;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "isRemote", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "spawnHostileMobs", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "spawnPeacefulMobs", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "processingLoadedTiles", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "worldBorder", "Lnet/minecraft/world/border/WorldBorder;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "lightUpdateBlockList", "[I", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "restoringBlockSnapshots", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "captureBlockSnapshots", "Z", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PUBLIC, "capturedBlockSnapshots", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Lnet/minecraftforge/common/util/BlockSnapshot;>;", null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PRIVATE, "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;", null, null);
fv.visitEnd();
}
{
fv = cw.visitField(ACC_PROTECTED, "perWorldStorage", "Lnet/minecraft/world/storage/MapStorage;", null, null);
fv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "<init>", "(Lnet/minecraft/world/storage/ISaveHandler;Lnet/minecraft/world/storage/WorldInfo;Lnet/minecraft/world/WorldProvider;Lnet/minecraft/profiler/Profiler;Z)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitIntInsn(BIPUSH, 63);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "seaLevel", "I");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "tickableTileEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "weatherEffects", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/util/IntHashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/IntHashMap", "<init>", "()V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "entitiesById", "Lnet/minecraft/util/IntHashMap;");
mv.visitVarInsn(ALOAD, 0);
mv.visitLdcInsn(new Long(16777215L));
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "cloudColour", "J");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "java/util/Random");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "()I", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "updateLCG", "I");
mv.visitVarInsn(ALOAD, 0);
mv.visitLdcInsn(new Integer(1013904223));
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "DIST_HASH_MAGIC", "I");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "java/util/Random");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/pathfinding/PathWorldListener");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/pathfinding/PathWorldListener", "<init>", "()V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "pathListener", "Lnet/minecraft/pathfinding/PathWorldListener;");
mv.visitVarInsn(ALOAD, 0);
mv.visitLdcInsn(new Integer(32768));
mv.visitIntInsn(NEWARRAY, T_INT);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "restoringBlockSnapshots", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "captureBlockSnapshots", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "java/util/ArrayList");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitTypeInsn(ANEWARRAY, "net/minecraft/world/IWorldEventListener");
mv.visitInsn(DUP);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "pathListener", "Lnet/minecraft/pathfinding/PathWorldListener;");
mv.visitInsn(AASTORE);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "([Ljava/lang/Object;)Ljava/util/ArrayList;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "java/util/Calendar", "getInstance", "()Ljava/util/Calendar;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "calendar", "Ljava/util/Calendar;");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/scoreboard/Scoreboard");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/scoreboard/Scoreboard", "<init>", "()V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "worldScoreboard", "Lnet/minecraft/scoreboard/Scoreboard;");
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "spawnHostileMobs", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "spawnPeacefulMobs", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "saveHandler", "Lnet/minecraft/world/storage/ISaveHandler;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 4);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 5);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "isRemote", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "createWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/world/storage/MapStorage");
mv.visitInsn(DUP);
mv.visitInsn(ACONST_NULL);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/storage/MapStorage", "<init>", "(Lnet/minecraft/world/storage/ISaveHandler;)V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "perWorldStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitInsn(RETURN);
mv.visitMaxs(5, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "init", "()Lnet/minecraft/world/World;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBiome", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getBiomeForCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBiomeForCoordsBody", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l3 = new Label();
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getBiomeProvider", "()Lnet/minecraft/world/biome/BiomeProvider;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getBiome", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/biome/BiomeProvider;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitLabel(l1);
mv.visitInsn(ARETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", "net/minecraft/world/chunk/Chunk"}, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("Getting biome");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("Coordinates of biome request");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Location");
mv.visitVarInsn(ALOAD, 1);
mv.visitInvokeDynamicInsn("call", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/crash/ICrashReportDetail;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"), new Object[]{Type.getType("()Ljava/lang/Object;"), new Handle(Opcodes.H_INVOKESTATIC, "net/minecraft/world/World", "lambda$getBiomeForCoordsBody$0", "(Lnet/minecraft/util/math/BlockPos;)Ljava/lang/String;"), Type.getType("()Ljava/lang/String;")});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addDetail", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getBiomeProvider", "()Lnet/minecraft/world/biome/BiomeProvider;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Biomes", "PLAINS", "Lnet/minecraft/world/biome/Biome;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/biome/BiomeProvider", "getBiome", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/biome/Biome;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBiomeProvider", "()Lnet/minecraft/world/biome/BiomeProvider;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getBiomeProvider", "()Lnet/minecraft/world/biome/BiomeProvider;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED + ACC_ABSTRACT, "createChunkProvider", "()Lnet/minecraft/world/chunk/IChunkProvider;", null, null);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "initialize", "(Lnet/minecraft/world/WorldSettings;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setServerInitialized", "(Z)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getMinecraftServer", "()Lnet/minecraft/server/MinecraftServer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setInitialSpawnLocation", "()V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitIntInsn(BIPUSH, 8);
mv.visitIntInsn(BIPUSH, 64);
mv.visitIntInsn(BIPUSH, 8);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setSpawnPoint", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(6, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getGroundAboveSeaLevel", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", null, null);
mv.visitCode();
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSeaLevel", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAirBlock", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(5, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isValid", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitIntInsn(SIPUSH, 256);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAirBlock", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isAir", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;I)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;IZ)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;IZ)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ISUB);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ISUB);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ISUB);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IADD);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IADD);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(8, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(8, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/world/gen/structure/StructureBoundingBox;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAreaLoaded", "(Lnet/minecraft/world/gen/structure/StructureBoundingBox;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAreaLoaded", "(Lnet/minecraft/world/gen/structure/StructureBoundingBox;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "minX", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "minY", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "minZ", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "maxX", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "maxY", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/gen/structure/StructureBoundingBox", "maxZ", "I");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(8, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE, "isAreaLoaded", "(IIIIIIZ)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ILOAD, 5);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(SIPUSH, 256);
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ISTORE, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ISTORE, 8);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 4);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l2);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ISTORE, 9);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 6);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l5 = new Label();
mv.visitJumpInsn(IFNE, l5);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(8, 1);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 10);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED + ACC_ABSTRACT, "isChunkLoaded", "(IIZ)Z", null, null);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(4, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/chunk/IChunkProvider", "provideChunk", "(II)Lnet/minecraft/world/chunk/Chunk;", true);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isChunkGeneratedAt", "(II)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/chunk/IChunkProvider", "isChunkGeneratedAt", "(II)Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getTerrainType", "()Lnet/minecraft/world/WorldType;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/WorldType", "DEBUG_ALL_BLOCK_STATES", "Lnet/minecraft/world/WorldType;");
mv.visitJumpInsn(IF_ACMPNE, l1);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "toImmutable", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "captureBlockSnapshots", "Z");
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/util/BlockSnapshot", "getBlockSnapshot", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;I)Lnet/minecraftforge/common/util/BlockSnapshot;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", false);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/world/chunk/Chunk", "net/minecraftforge/common/util/BlockSnapshot"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getLightValue", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", true);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getLightOpacity", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", true);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 9);
mv.visitVarInsn(ALOAD, 9);
Label l3 = new Label();
mv.visitJumpInsn(IFNONNULL, l3);
mv.visitVarInsn(ALOAD, 5);
Label l4 = new Label();
mv.visitJumpInsn(IFNULL, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "remove", "(Ljava/lang/Object;)Z", false);
mv.visitInsn(POP);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", Opcodes.INTEGER, "net/minecraft/world/chunk/Chunk", "net/minecraftforge/common/util/BlockSnapshot", "net/minecraft/block/state/IBlockState", Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/block/state/IBlockState"}, 0, new Object[] {});
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getLightOpacity", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", true);
mv.visitVarInsn(ILOAD, 8);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l5);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getLightValue", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", true);
mv.visitVarInsn(ILOAD, 7);
Label l6 = new Label();
mv.visitJumpInsn(IF_ICMPEQ, l6);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("checkLight");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkLight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 5);
Label l7 = new Label();
mv.visitJumpInsn(IFNONNULL, l7);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "markAndNotifyBlock", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/chunk/Chunk;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", false);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(6, 10);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markAndNotifyBlock", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/chunk/Chunk;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", null, null);
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_2);
mv.visitInsn(IAND);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_4);
mv.visitInsn(IAND);
mv.visitJumpInsn(IFNE, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/Block"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
Label l2 = new Label();
mv.visitJumpInsn(IFNULL, l2);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "isPopulated", "()Z", false);
mv.visitJumpInsn(IFEQ, l0);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyBlockUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_1);
mv.visitInsn(IAND);
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyNeighborsRespectDebug", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Z)V", false);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "hasComparatorInputOverride", "()Z", true);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateComparatorOutputLevel", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", false);
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
mv.visitJumpInsn(IFNE, l4);
mv.visitVarInsn(ILOAD, 5);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(IAND);
mv.visitJumpInsn(IFNE, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateObservingBlocksAt", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 7);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setBlockToAir", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "AIR", "Lnet/minecraft/block/Block;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getDefaultState", "()Lnet/minecraft/block/state/IBlockState;", false);
mv.visitInsn(ICONST_3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "destroyBlock", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isAir", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/block/state/IBlockState", "net/minecraft/block/Block"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitIntInsn(SIPUSH, 2001);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/block/Block", "getStateId", "(Lnet/minecraft/block/state/IBlockState;)I", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "playEvent", "(ILnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitVarInsn(ILOAD, 2);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "dropBlockAsItem", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "AIR", "Lnet/minecraft/block/Block;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getDefaultState", "()Lnet/minecraft/block/state/IBlockState;", false);
mv.visitInsn(ICONST_3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setBlockState", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;I)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "notifyBlockUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "notifyBlockUpdate", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", true);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(6, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "notifyNeighborsRespectDebug", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Z)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getTerrainType", "()Lnet/minecraft/world/WorldType;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/WorldType", "DEBUG_ALL_BLOCK_STATES", "Lnet/minecraft/world/WorldType;");
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyNeighborsOfStateChange", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Z)V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markBlocksDirtyVertical", "(IIII)V", null, null);
mv.visitCode();
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "hasSkyLight", "()Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ISTORE, 5);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 4);
mv.visitJumpInsn(IF_ICMPGT, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(POP);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "markBlockRangeForRenderUpdate", "(IIIIII)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(7, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markBlockRangeForRenderUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "markBlockRangeForRenderUpdate", "(IIIIII)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(7, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markBlockRangeForRenderUpdate", "(IIIIII)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 7);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "markBlockRangeForRenderUpdate", "(IIIIII)V", true);
mv.visitIincInsn(7, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(7, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateObservingBlocksAt", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "notifyNeighborsOfStateChange", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Z)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitLdcInsn(Type.getType("Lnet/minecraft/util/EnumFacing;"));
mv.visitMethodInsn(INVOKESTATIC, "java/util/EnumSet", "allOf", "(Ljava/lang/Class;)Ljava/util/EnumSet;", false);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onNeighborNotify", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/EnumSet;Z)Lnet/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "isCanceled", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(RETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ILOAD, 3);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateObservingBlocksAt", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "notifyNeighborsOfStateExcept", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/EnumFacing;)V", null, null);
mv.visitCode();
mv.visitLdcInsn(Type.getType("Lnet/minecraft/util/EnumFacing;"));
mv.visitMethodInsn(INVOKESTATIC, "java/util/EnumSet", "allOf", "(Ljava/lang/Class;)Ljava/util/EnumSet;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/EnumSet", "remove", "(Ljava/lang/Object;)Z", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 4);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onNeighborNotify", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/EnumSet;Z)Lnet/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "isCanceled", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(RETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/EnumSet"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "WEST", "Lnet/minecraft/util/EnumFacing;");
Label l1 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "EAST", "Lnet/minecraft/util/EnumFacing;");
Label l2 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "DOWN", "Lnet/minecraft/util/EnumFacing;");
Label l3 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "UP", "Lnet/minecraft/util/EnumFacing;");
Label l4 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "NORTH", "Lnet/minecraft/util/EnumFacing;");
Label l5 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "SOUTH", "Lnet/minecraft/util/EnumFacing;");
Label l6 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "neighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitLabel(l0);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "neighborChanged", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", true);
mv.visitLabel(l1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", "net/minecraft/block/Block", "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState"}, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Exception while updating neighbours");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitLdcInsn("Block being updated");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Source block type");
mv.visitTypeInsn(NEW, "net/minecraft/world/World$1");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World$1", "<init>", "(Lnet/minecraft/world/World;Lnet/minecraft/block/Block;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addDetail", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReportCategory", "addBlockInfo", "(Lnet/minecraft/crash/CrashReportCategory;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)V", false);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(6, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "observedNeighborChanged", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitLabel(l0);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "observedNeighborChange", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", "net/minecraft/block/Block", "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState"}, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Exception while updating neighbours");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitLdcInsn("Block being updated");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Source block type");
mv.visitTypeInsn(NEW, "net/minecraft/world/World$2");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World$2", "<init>", "(Lnet/minecraft/world/World;Lnet/minecraft/block/Block;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addDetail", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReportCategory", "addBlockInfo", "(Lnet/minecraft/crash/CrashReportCategory;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;)V", false);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(6, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockTickPending", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canBlockSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSeaLevel", "()I", false);
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSeaLevel", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 3);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getLightOpacity", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", false);
Label l4 = new Label();
mv.visitJumpInsn(IFLE, l4);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/material/Material", "isLiquid", "()Z", false);
mv.visitJumpInsn(IFNE, l4);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLight", "(Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l0 = new Label();
mv.visitJumpInsn(IFGE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitIntInsn(SIPUSH, 256);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l1);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitIntInsn(SIPUSH, 255);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getLightSubtracted", "(Lnet/minecraft/util/math/BlockPos;I)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLightFromNeighbors", "(Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitLdcInsn(new Integer(-30000000));
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ILOAD, 2);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "useNeighborBrightness", "()Z", true);
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLight", "(Lnet/minecraft/util/math/BlockPos;Z)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 3);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l2);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 3);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l3);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 3);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l4);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 3);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l5);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l6 = new Label();
mv.visitJumpInsn(IFGE, l6);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitIntInsn(SIPUSH, 256);
Label l7 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l7);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitIntInsn(SIPUSH, 255);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "skylightSubtracted", "I");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getLightSubtracted", "(Lnet/minecraft/util/math/BlockPos;I)I", false);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getHeight", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", null, null);
mv.visitCode();
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getHeight", "(II)I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(6, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getHeight", "(II)I", null, null);
mv.visitCode();
mv.visitVarInsn(ILOAD, 1);
mv.visitLdcInsn(new Integer(-30000000));
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 1);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ILOAD, 1);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IAND);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IAND);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getHeightValue", "(II)I", false);
mv.visitVarInsn(ISTORE, 3);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 3);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSeaLevel", "()I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_DEPRECATED, "getChunksLowestHorizon", "(II)I", null, null);
{
av0 = mv.visitAnnotation("Ljava/lang/Deprecated;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ILOAD, 1);
mv.visitLdcInsn(new Integer(-30000000));
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 1);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getLowestHeight", "()I", false);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSeaLevel", "()I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLightFromNeighborsFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "hasSkyLight", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitJumpInsn(IF_ACMPNE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l1 = new Label();
mv.visitJumpInsn(IFGE, l1);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isValid", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/EnumSkyBlock", "defaultLightValue", "I");
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/EnumSkyBlock", "defaultLightValue", "I");
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "useNeighborBrightness", "()Z", true);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 3);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l5);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 3);
Label l6 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l6);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 3);
Label l7 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l7);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 3);
Label l8 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l8);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 3);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ILOAD, 3);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitVarInsn(ILOAD, 3);
mv.visitIntInsn(SIPUSH, 256);
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/EnumSkyBlock", "defaultLightValue", "I");
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isValid", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "setLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyLightSet", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "notifyLightSet", "(Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "notifyLightSet", "(Lnet/minecraft/util/math/BlockPos;)V", true);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCombinedLight", "(Lnet/minecraft/util/math/BlockPos;I)I", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFromNeighborsFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "BLOCK", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFromNeighborsFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 2);
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ISTORE, 4);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitIntInsn(BIPUSH, 20);
mv.visitInsn(ISHL);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLightBrightness", "(Lnet/minecraft/util/math/BlockPos;)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getLightBrightnessTable", "()[F", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFromNeighbors", "(Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitInsn(FALOAD);
mv.visitInsn(FRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "AIR", "Lnet/minecraft/block/Block;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getDefaultState", "()Lnet/minecraft/block/state/IBlockState;", false);
mv.visitInsn(ARETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isDaytime", "()Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "isDaytime", "()Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/RayTraceResult;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitInsn(ICONST_0);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;ZZZ)Lnet/minecraft/util/math/RayTraceResult;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(6, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;Z)Lnet/minecraft/util/math/RayTraceResult;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(ICONST_0);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;ZZZ)Lnet/minecraft/util/math/RayTraceResult;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(6, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;ZZZ)Lnet/minecraft/util/math/RayTraceResult;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 10);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 11);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 13);
mv.visitVarInsn(ALOAD, 13);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 14);
mv.visitVarInsn(ILOAD, 4);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 13);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getCollisionBoundingBox", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/Block", "NULL_AABB", "Lnet/minecraft/util/math/AxisAlignedBB;");
Label l3 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 15, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 14);
mv.visitVarInsn(ALOAD, 13);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "canCollideCheck", "(Lnet/minecraft/block/state/IBlockState;Z)Z", false);
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 13);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "collisionRayTrace", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/RayTraceResult;", true);
mv.visitVarInsn(ASTORE, 15);
mv.visitVarInsn(ALOAD, 15);
mv.visitJumpInsn(IFNULL, l3);
mv.visitVarInsn(ALOAD, 15);
mv.visitInsn(ARETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 15);
mv.visitIntInsn(SIPUSH, 200);
mv.visitVarInsn(ISTORE, 16);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 16);
mv.visitIincInsn(16, -1);
Label l5 = new Label();
mv.visitJumpInsn(IFLT, l5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l6 = new Label();
mv.visitJumpInsn(IFNE, l6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
mv.visitJumpInsn(IFNE, l6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l7 = new Label();
mv.visitJumpInsn(IFEQ, l7);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 6);
Label l8 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l8);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 7);
mv.visitJumpInsn(IF_ICMPNE, l8);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 8);
mv.visitJumpInsn(IF_ICMPNE, l8);
mv.visitVarInsn(ILOAD, 5);
Label l9 = new Label();
mv.visitJumpInsn(IFEQ, l9);
mv.visitVarInsn(ALOAD, 15);
Label l10 = new Label();
mv.visitJumpInsn(GOTO, l10);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/math/RayTraceResult"});
mv.visitInsn(ARETURN);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 17);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 18);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 19);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 20);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 22);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 24);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 9);
Label l11 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l11);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 20);
Label l12 = new Label();
mv.visitJumpInsn(GOTO, l12);
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_FULL, 23, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 9);
Label l13 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l13);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_0);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 20);
mv.visitJumpInsn(GOTO, l12);
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 17);
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 10);
Label l14 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l14);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 22);
Label l15 = new Label();
mv.visitJumpInsn(GOTO, l15);
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 10);
Label l16 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l16);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_0);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 22);
mv.visitJumpInsn(GOTO, l15);
mv.visitLabel(l16);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 18);
mv.visitLabel(l15);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 11);
Label l17 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l17);
mv.visitVarInsn(ILOAD, 11);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 24);
Label l18 = new Label();
mv.visitJumpInsn(GOTO, l18);
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 11);
Label l19 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l19);
mv.visitVarInsn(ILOAD, 11);
mv.visitInsn(I2D);
mv.visitInsn(DCONST_0);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 24);
mv.visitJumpInsn(GOTO, l18);
mv.visitLabel(l19);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 19);
mv.visitLabel(l18);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 26);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 28);
mv.visitLdcInsn(new Double("999.0"));
mv.visitVarInsn(DSTORE, 30);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 32);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 34);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 36);
mv.visitVarInsn(ILOAD, 17);
Label l20 = new Label();
mv.visitJumpInsn(IFEQ, l20);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DLOAD, 32);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 26);
mv.visitLabel(l20);
mv.visitFrame(Opcodes.F_FULL, 29, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 18);
Label l21 = new Label();
mv.visitJumpInsn(IFEQ, l21);
mv.visitVarInsn(DLOAD, 22);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DLOAD, 34);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 28);
mv.visitLabel(l21);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 19);
Label l22 = new Label();
mv.visitJumpInsn(IFEQ, l22);
mv.visitVarInsn(DLOAD, 24);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(DLOAD, 36);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 30);
mv.visitLabel(l22);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 26);
mv.visitLdcInsn(new Double("-0.0"));
mv.visitInsn(DCMPL);
Label l23 = new Label();
mv.visitJumpInsn(IFNE, l23);
mv.visitLdcInsn(new Double("-1.0E-4"));
mv.visitVarInsn(DSTORE, 26);
mv.visitLabel(l23);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 28);
mv.visitLdcInsn(new Double("-0.0"));
mv.visitInsn(DCMPL);
Label l24 = new Label();
mv.visitJumpInsn(IFNE, l24);
mv.visitLdcInsn(new Double("-1.0E-4"));
mv.visitVarInsn(DSTORE, 28);
mv.visitLabel(l24);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 30);
mv.visitLdcInsn(new Double("-0.0"));
mv.visitInsn(DCMPL);
Label l25 = new Label();
mv.visitJumpInsn(IFNE, l25);
mv.visitLdcInsn(new Double("-1.0E-4"));
mv.visitVarInsn(DSTORE, 30);
mv.visitLabel(l25);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 26);
mv.visitVarInsn(DLOAD, 28);
mv.visitInsn(DCMPG);
Label l26 = new Label();
mv.visitJumpInsn(IFGE, l26);
mv.visitVarInsn(DLOAD, 26);
mv.visitVarInsn(DLOAD, 30);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l26);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 9);
Label l27 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l27);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "WEST", "Lnet/minecraft/util/EnumFacing;");
Label l28 = new Label();
mv.visitJumpInsn(GOTO, l28);
mv.visitLabel(l27);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "EAST", "Lnet/minecraft/util/EnumFacing;");
mv.visitLabel(l28);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/EnumFacing"});
mv.visitVarInsn(ASTORE, 38);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitVarInsn(DLOAD, 34);
mv.visitVarInsn(DLOAD, 26);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitVarInsn(DLOAD, 36);
mv.visitVarInsn(DLOAD, 26);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitVarInsn(ASTORE, 1);
Label l29 = new Label();
mv.visitJumpInsn(GOTO, l29);
mv.visitLabel(l26);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 28);
mv.visitVarInsn(DLOAD, 30);
mv.visitInsn(DCMPG);
Label l30 = new Label();
mv.visitJumpInsn(IFGE, l30);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 10);
Label l31 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l31);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "DOWN", "Lnet/minecraft/util/EnumFacing;");
Label l32 = new Label();
mv.visitJumpInsn(GOTO, l32);
mv.visitLabel(l31);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "UP", "Lnet/minecraft/util/EnumFacing;");
mv.visitLabel(l32);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/EnumFacing"});
mv.visitVarInsn(ASTORE, 38);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitVarInsn(DLOAD, 32);
mv.visitVarInsn(DLOAD, 28);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(DLOAD, 22);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitVarInsn(DLOAD, 36);
mv.visitVarInsn(DLOAD, 28);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitJumpInsn(GOTO, l29);
mv.visitLabel(l30);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 11);
Label l33 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l33);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "NORTH", "Lnet/minecraft/util/EnumFacing;");
Label l34 = new Label();
mv.visitJumpInsn(GOTO, l34);
mv.visitLabel(l33);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "SOUTH", "Lnet/minecraft/util/EnumFacing;");
mv.visitLabel(l34);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/EnumFacing"});
mv.visitVarInsn(ASTORE, 38);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitVarInsn(DLOAD, 32);
mv.visitVarInsn(DLOAD, 30);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitVarInsn(DLOAD, 34);
mv.visitVarInsn(DLOAD, 30);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(DLOAD, 24);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitLabel(l29);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/EnumFacing"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ALOAD, 38);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "EAST", "Lnet/minecraft/util/EnumFacing;");
Label l35 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l35);
mv.visitInsn(ICONST_1);
Label l36 = new Label();
mv.visitJumpInsn(GOTO, l36);
mv.visitLabel(l35);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(ICONST_0);
mv.visitLabel(l36);
mv.visitFrame(Opcodes.F_FULL, 30, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "net/minecraft/util/EnumFacing"}, 2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER});
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ALOAD, 38);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "UP", "Lnet/minecraft/util/EnumFacing;");
Label l37 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l37);
mv.visitInsn(ICONST_1);
Label l38 = new Label();
mv.visitJumpInsn(GOTO, l38);
mv.visitLabel(l37);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(ICONST_0);
mv.visitLabel(l38);
mv.visitFrame(Opcodes.F_FULL, 30, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "net/minecraft/util/EnumFacing"}, 2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER});
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 10);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ALOAD, 38);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "SOUTH", "Lnet/minecraft/util/EnumFacing;");
Label l39 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l39);
mv.visitInsn(ICONST_1);
Label l40 = new Label();
mv.visitJumpInsn(GOTO, l40);
mv.visitLabel(l39);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(ICONST_0);
mv.visitLabel(l40);
mv.visitFrame(Opcodes.F_FULL, 30, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "net/minecraft/util/EnumFacing"}, 2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER});
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 11);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 39);
mv.visitVarInsn(ALOAD, 39);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 40);
mv.visitVarInsn(ILOAD, 4);
Label l41 = new Label();
mv.visitJumpInsn(IFEQ, l41);
mv.visitVarInsn(ALOAD, 39);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/material/Material", "PORTAL", "Lnet/minecraft/block/material/Material;");
mv.visitJumpInsn(IF_ACMPEQ, l41);
mv.visitVarInsn(ALOAD, 39);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getCollisionBoundingBox", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/Block", "NULL_AABB", "Lnet/minecraft/util/math/AxisAlignedBB;");
Label l42 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l42);
mv.visitLabel(l41);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/block/state/IBlockState", "net/minecraft/block/Block"}, 0, null);
mv.visitVarInsn(ALOAD, 40);
mv.visitVarInsn(ALOAD, 39);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "canCollideCheck", "(Lnet/minecraft/block/state/IBlockState;Z)Z", false);
Label l43 = new Label();
mv.visitJumpInsn(IFEQ, l43);
mv.visitVarInsn(ALOAD, 39);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "collisionRayTrace", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/RayTraceResult;", true);
mv.visitVarInsn(ASTORE, 41);
mv.visitVarInsn(ALOAD, 41);
Label l44 = new Label();
mv.visitJumpInsn(IFNULL, l44);
mv.visitVarInsn(ALOAD, 41);
mv.visitInsn(ARETURN);
mv.visitLabel(l44);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l42);
mv.visitLabel(l43);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/RayTraceResult");
mv.visitInsn(DUP);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/math/RayTraceResult$Type", "MISS", "Lnet/minecraft/util/math/RayTraceResult$Type;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 38);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/RayTraceResult", "<init>", "(Lnet/minecraft/util/math/RayTraceResult$Type;Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/EnumFacing;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ASTORE, 15);
mv.visitLabel(l42);
mv.visitFrame(Opcodes.F_FULL, 17, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", "net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "net/minecraft/util/math/RayTraceResult", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 5);
Label l45 = new Label();
mv.visitJumpInsn(IFEQ, l45);
mv.visitVarInsn(ALOAD, 15);
Label l46 = new Label();
mv.visitJumpInsn(GOTO, l46);
mv.visitLabel(l45);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitLabel(l46);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/math/RayTraceResult"});
mv.visitInsn(ARETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/Vec3d", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(12, 42);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playSound", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;FF)V", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(I2D);
mv.visitLdcInsn(new Double("0.5"));
mv.visitInsn(DADD);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitInsn(I2D);
mv.visitLdcInsn(new Double("0.5"));
mv.visitInsn(DADD);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(I2D);
mv.visitLdcInsn(new Double("0.5"));
mv.visitInsn(DADD);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(FLOAD, 5);
mv.visitVarInsn(FLOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "playSound", "(Lnet/minecraft/entity/player/EntityPlayer;DDDLnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;FF)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(12, 7);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playSound", "(Lnet/minecraft/entity/player/EntityPlayer;DDDLnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;FF)V", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(FLOAD, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onPlaySoundAtEntity", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;FF)Lnet/minecraftforge/event/entity/PlaySoundAtEntityEvent;", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "isCanceled", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getSound", "()Lnet/minecraft/util/SoundEvent;", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNONNULL, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraftforge/event/entity/PlaySoundAtEntityEvent"}, 0, null);
mv.visitInsn(RETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getSound", "()Lnet/minecraft/util/SoundEvent;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getCategory", "()Lnet/minecraft/util/SoundCategory;", false);
mv.visitVarInsn(ASTORE, 9);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getVolume", "()F", false);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getPitch", "()F", false);
mv.visitVarInsn(FSTORE, 11);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 13);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 13);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitVarInsn(FLOAD, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "playSoundToAllNearExcept", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;DDDFF)V", true);
mv.visitIincInsn(13, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(12, 14);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playSound", "(DDDLnet/minecraft/util/SoundEvent;Lnet/minecraft/util/SoundCategory;FFZ)V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playRecord", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/SoundEvent;)V", null, null);
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 3);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "playRecord", "(Lnet/minecraft/util/SoundEvent;Lnet/minecraft/util/math/BlockPos;)V", true);
mv.visitIincInsn(3, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "spawnParticle", "(Lnet/minecraft/util/EnumParticleTypes;DDDDDD[I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumParticleTypes", "getParticleID", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumParticleTypes", "getShouldIgnoreRange", "()Z", false);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitVarInsn(DLOAD, 8);
mv.visitVarInsn(DLOAD, 10);
mv.visitVarInsn(DLOAD, 12);
mv.visitVarInsn(ALOAD, 14);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "spawnParticle", "(IZDDDDDD[I)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(16, 15);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "spawnAlwaysVisibleParticle", "(IDDDDDD[I)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 15);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 15);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 15);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitVarInsn(DLOAD, 8);
mv.visitVarInsn(DLOAD, 10);
mv.visitVarInsn(DLOAD, 12);
mv.visitVarInsn(ALOAD, 14);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "spawnParticle", "(IZZDDDDDD[I)V", true);
mv.visitIincInsn(15, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(17, 16);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "spawnParticle", "(Lnet/minecraft/util/EnumParticleTypes;ZDDDDDD[I)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumParticleTypes", "getParticleID", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumParticleTypes", "getShouldIgnoreRange", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ILOAD, 2);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/EnumParticleTypes", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 2, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER});
mv.visitInsn(ICONST_1);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/EnumParticleTypes", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 2, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER});
mv.visitInsn(ICONST_0);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/EnumParticleTypes", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 3, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER});
mv.visitVarInsn(DLOAD, 3);
mv.visitVarInsn(DLOAD, 5);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(DLOAD, 9);
mv.visitVarInsn(DLOAD, 11);
mv.visitVarInsn(DLOAD, 13);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "spawnParticle", "(IZDDDDDD[I)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(16, 16);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE + ACC_VARARGS, "spawnParticle", "(IZDDDDDD[I)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 16);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 16);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(DLOAD, 3);
mv.visitVarInsn(DLOAD, 5);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(DLOAD, 9);
mv.visitVarInsn(DLOAD, 11);
mv.visitVarInsn(DLOAD, 13);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "spawnParticle", "(IZDDDDDD[I)V", true);
mv.visitIincInsn(16, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(16, 17);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addWeatherEffect", "(Lnet/minecraft/entity/Entity;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "weatherEffects", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "spawnEntity", "(Lnet/minecraft/entity/Entity;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
Label l1 = new Label();
mv.visitJumpInsn(IFNULL, l1);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/item/EntityItem");
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "restoringBlockSnapshots", "Z");
mv.visitJumpInsn(IFEQ, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "forceSpawn", "Z");
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayer");
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 4);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFNE, l3);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayer");
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateAllPlayersSleepingFlag", "()V", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/world/World;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
Label l5 = new Label();
mv.visitJumpInsn(IFEQ, l5);
mv.visitVarInsn(ILOAD, 4);
mv.visitJumpInsn(IFNE, l5);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "addEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityAdded", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "onEntityAdded", "(Lnet/minecraft/entity/Entity;)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "onEntityAdded", "(Lnet/minecraft/entity/Entity;)V", true);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "onAddedToWorld", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", true);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "onRemovedFromWorld", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "removeEntity", "(Lnet/minecraft/entity/Entity;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isBeingRidden", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "removePassengers", "()V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isRiding", "()Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "dismountRidingEntity", "()V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "setDead", "()V", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayer");
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateAllPlayersSleepingFlag", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "removeEntityDangerously", "(Lnet/minecraft/entity/Entity;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "setDropItemsWhenDead", "(Z)V", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "setDead", "()V", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayer");
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateAllPlayersSleepingFlag", "()V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addEventListener", "(Lnet/minecraft/world/IWorldEventListener;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE, "getCollisionBoxes", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;ZLjava/util/List;)Z", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;ZLjava/util/List<Lnet/minecraft/util/math/AxisAlignedBB;>;)Z", null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(3, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, null);
Label l3 = new Label();
Label l4 = new Label();
mv.visitTryCatchBlock(l3, l4, l2, null);
Label l5 = new Label();
Label l6 = new Label();
mv.visitTryCatchBlock(l5, l6, l2, null);
Label l7 = new Label();
mv.visitTryCatchBlock(l2, l7, l2, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 10);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", false);
mv.visitVarInsn(ASTORE, 11);
mv.visitVarInsn(ALOAD, 1);
Label l8 = new Label();
mv.visitJumpInsn(IFNULL, l8);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isOutsideBorder", "()Z", false);
mv.visitJumpInsn(IFEQ, l8);
mv.visitInsn(ICONST_1);
Label l9 = new Label();
mv.visitJumpInsn(GOTO, l9);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", "net/minecraft/util/math/AxisAlignedBB", Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/world/border/WorldBorder"}, 0, new Object[] {});
mv.visitInsn(ICONST_0);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 12);
mv.visitVarInsn(ALOAD, 1);
Label l10 = new Label();
mv.visitJumpInsn(IFNULL, l10);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isInsideWorldBorder", "(Lnet/minecraft/entity/Entity;)Z", false);
mv.visitJumpInsn(IFEQ, l10);
mv.visitInsn(ICONST_1);
Label l11 = new Label();
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 13);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "STONE", "Lnet/minecraft/block/Block;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getDefaultState", "()Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 14);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 15);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCollisionBoxes", "(Lnet/minecraft/world/World;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;)Z", false);
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.INTEGER, "net/minecraft/block/state/IBlockState", "net/minecraft/util/math/BlockPos$PooledMutableBlockPos"}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 16);
Label l12 = new Label();
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ILOAD, 6);
mv.visitJumpInsn(IF_ICMPGE, l6);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ISTORE, 17);
Label l13 = new Label();
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 17);
mv.visitVarInsn(ILOAD, 10);
Label l14 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l14);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ILOAD, 5);
Label l15 = new Label();
mv.visitJumpInsn(IF_ICMPEQ, l15);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
Label l16 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l16);
mv.visitLabel(l15);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
Label l17 = new Label();
mv.visitJumpInsn(GOTO, l17);
mv.visitLabel(l16);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 18);
mv.visitVarInsn(ILOAD, 17);
mv.visitVarInsn(ILOAD, 9);
Label l18 = new Label();
mv.visitJumpInsn(IF_ICMPEQ, l18);
mv.visitVarInsn(ILOAD, 17);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
Label l19 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l19);
mv.visitLabel(l18);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitInsn(ICONST_1);
Label l20 = new Label();
mv.visitJumpInsn(GOTO, l20);
mv.visitLabel(l19);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l20);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 19);
mv.visitVarInsn(ILOAD, 18);
Label l21 = new Label();
mv.visitJumpInsn(IFEQ, l21);
mv.visitVarInsn(ILOAD, 19);
Label l22 = new Label();
mv.visitJumpInsn(IFNE, l22);
mv.visitLabel(l21);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 15);
mv.visitVarInsn(ILOAD, 16);
mv.visitIntInsn(BIPUSH, 64);
mv.visitVarInsn(ILOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l22);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 20);
Label l23 = new Label();
mv.visitLabel(l23);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 20);
mv.visitVarInsn(ILOAD, 8);
mv.visitJumpInsn(IF_ICMPGE, l22);
mv.visitVarInsn(ILOAD, 18);
Label l24 = new Label();
mv.visitJumpInsn(IFNE, l24);
mv.visitVarInsn(ILOAD, 19);
Label l25 = new Label();
mv.visitJumpInsn(IFEQ, l25);
mv.visitLabel(l24);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 20);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(ICONST_1);
mv.visitInsn(ISUB);
mv.visitJumpInsn(IF_ICMPEQ, l5);
mv.visitLabel(l25);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ILOAD, 16);
mv.visitLdcInsn(new Integer(-30000000));
Label l26 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l26);
mv.visitVarInsn(ILOAD, 16);
mv.visitLdcInsn(new Integer(30000000));
mv.visitJumpInsn(IF_ICMPGE, l26);
mv.visitVarInsn(ILOAD, 17);
mv.visitLdcInsn(new Integer(-30000000));
mv.visitJumpInsn(IF_ICMPLT, l26);
mv.visitVarInsn(ILOAD, 17);
mv.visitLdcInsn(new Integer(30000000));
Label l27 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l27);
mv.visitLabel(l26);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 21);
mv.visitVarInsn(ILOAD, 21);
mv.visitVarInsn(ISTORE, 22);
mv.visitLabel(l1);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitVarInsn(ILOAD, 22);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitJumpInsn(IFNULL, l27);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 13);
mv.visitJumpInsn(IF_ICMPNE, l27);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 13);
Label l28 = new Label();
mv.visitJumpInsn(IFNE, l28);
mv.visitInsn(ICONST_1);
Label l29 = new Label();
mv.visitJumpInsn(GOTO, l29);
mv.visitLabel(l28);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/entity/Entity"});
mv.visitInsn(ICONST_0);
mv.visitLabel(l29);
mv.visitFrame(Opcodes.F_FULL, 21, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", "net/minecraft/util/math/AxisAlignedBB", Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/world/border/WorldBorder", Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/block/state/IBlockState", "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"net/minecraft/entity/Entity", Opcodes.INTEGER});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "setOutsideBorder", "(Z)V", false);
mv.visitLabel(l27);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 15);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ILOAD, 20);
mv.visitVarInsn(ILOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ILOAD, 3);
Label l30 = new Label();
mv.visitJumpInsn(IFNE, l30);
mv.visitVarInsn(ALOAD, 11);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "contains", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFNE, l30);
mv.visitVarInsn(ILOAD, 13);
mv.visitJumpInsn(IFEQ, l30);
mv.visitVarInsn(ALOAD, 14);
mv.visitVarInsn(ASTORE, 21);
Label l31 = new Label();
mv.visitJumpInsn(GOTO, l31);
mv.visitLabel(l30);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 21);
mv.visitLabel(l31);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/state/IBlockState"}, 0, null);
mv.visitVarInsn(ALOAD, 21);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 15);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "addCollisionBoxToList", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;Lnet/minecraft/entity/Entity;Z)V", true);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IFEQ, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCollisionBoxes", "(Lnet/minecraft/world/World;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;)Z", false);
mv.visitJumpInsn(IFNE, l5);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 22);
mv.visitVarInsn(ILOAD, 22);
mv.visitVarInsn(ISTORE, 23);
mv.visitLabel(l4);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitVarInsn(ILOAD, 23);
mv.visitInsn(IRETURN);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(20, 1);
mv.visitJumpInsn(GOTO, l23);
mv.visitLabel(l22);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitIincInsn(17, 1);
mv.visitJumpInsn(GOTO, l13);
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(16, 1);
mv.visitJumpInsn(GOTO, l12);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
Label l32 = new Label();
mv.visitJumpInsn(GOTO, l32);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 24);
mv.visitLabel(l7);
mv.visitVarInsn(ALOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitVarInsn(ALOAD, 24);
mv.visitInsn(ATHROW);
mv.visitLabel(l32);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
Label l33 = new Label();
mv.visitJumpInsn(IFNE, l33);
mv.visitInsn(ICONST_1);
Label l34 = new Label();
mv.visitJumpInsn(GOTO, l34);
mv.visitLabel(l33);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l34);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(7, 25);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCollisionBoxes", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List<Lnet/minecraft/util/math/AxisAlignedBB;>;", null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getCollisionBoxes", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;ZLjava/util/List;)Z", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 1);
Label l0 = new Label();
mv.visitJumpInsn(IFNULL, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitLdcInsn(new Double("0.25"));
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/AxisAlignedBB", "grow", "(D)Lnet/minecraft/util/math/AxisAlignedBB;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getEntitiesWithinAABBExcludingEntity", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/util/List", "java/util/List", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
mv.visitJumpInsn(IF_ICMPGE, l0);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isRidingSameEntity", "(Lnet/minecraft/entity/Entity;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getCollisionBoundingBox", "()Lnet/minecraft/util/math/AxisAlignedBB;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
Label l3 = new Label();
mv.visitJumpInsn(IFNULL, l3);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/AxisAlignedBB", "intersects", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", false);
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/entity/Entity", "net/minecraft/util/math/AxisAlignedBB"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getCollisionBox", "(Lnet/minecraft/entity/Entity;)Lnet/minecraft/util/math/AxisAlignedBB;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitJumpInsn(IFNULL, l2);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/AxisAlignedBB", "intersects", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
mv.visitTypeInsn(NEW, "net/minecraftforge/event/world/GetCollisionBoxesEvent");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/world/GetCollisionBoxesEvent", "<init>", "(Lnet/minecraft/world/World;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitMaxs(7, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "removeEventListener", "(Lnet/minecraft/world/IWorldEventListener;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isInsideWorldBorder", "(Lnet/minecraft/entity/Entity;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "minX", "()D", false);
mv.visitVarInsn(DSTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "minZ", "()D", false);
mv.visitVarInsn(DSTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "maxX", "()D", false);
mv.visitVarInsn(DSTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "maxZ", "()D", false);
mv.visitVarInsn(DSTORE, 8);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isOutsideBorder", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(DLOAD, 2);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitInsn(DCONST_1);
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 6);
mv.visitVarInsn(DLOAD, 8);
mv.visitInsn(DCONST_1);
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 8);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[] {});
mv.visitVarInsn(DLOAD, 2);
mv.visitInsn(DCONST_1);
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitInsn(DCONST_1);
mv.visitInsn(DSUB);
mv.visitVarInsn(DSTORE, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 6);
mv.visitVarInsn(DLOAD, 8);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 8);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitVarInsn(DLOAD, 2);
mv.visitInsn(DCMPL);
Label l2 = new Label();
mv.visitJumpInsn(IFLE, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitVarInsn(DLOAD, 6);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitVarInsn(DLOAD, 4);
mv.visitInsn(DCMPL);
mv.visitJumpInsn(IFLE, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitVarInsn(DLOAD, 8);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitInsn(ICONST_1);
Label l3 = new Label();
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 10);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "collidesWithAnyBlock", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getCollisionBoxes", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;ZLjava/util/List;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "calculateSkylightSubtracted", "(F)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getSunBrightnessFactor", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 2);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 2);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("11.0"));
mv.visitInsn(FMUL);
mv.visitInsn(F2I);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSunBrightnessFactor", "(F)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "cos", "(F)F", false);
mv.visitInsn(FCONST_2);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitVarInsn(FSTORE, 3);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(F2D);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitLdcInsn(new Float("5.0"));
mv.visitInsn(FMUL);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitInsn(DSUB);
mv.visitInsn(DMUL);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(F2D);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getThunderStrength", "(F)F", false);
mv.visitLdcInsn(new Float("5.0"));
mv.visitInsn(FMUL);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitInsn(DSUB);
mv.visitInsn(DMUL);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FRETURN);
mv.visitMaxs(8, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSunBrightness", "(F)F", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getSunBrightness", "(F)F", false);
mv.visitInsn(FRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSunBrightnessBody", "(F)F", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "cos", "(F)F", false);
mv.visitInsn(FCONST_2);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.2"));
mv.visitInsn(FADD);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitVarInsn(FSTORE, 3);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(F2D);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitLdcInsn(new Float("5.0"));
mv.visitInsn(FMUL);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitInsn(DSUB);
mv.visitInsn(DMUL);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(F2D);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getThunderStrength", "(F)F", false);
mv.visitLdcInsn(new Float("5.0"));
mv.visitInsn(FMUL);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitInsn(DSUB);
mv.visitInsn(DMUL);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitLdcInsn(new Float("0.8"));
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.2"));
mv.visitInsn(FADD);
mv.visitInsn(FRETURN);
mv.visitMaxs(8, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSkyColor", "(Lnet/minecraft/entity/Entity;F)Lnet/minecraft/util/math/Vec3d;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(FLOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getSkyColor", "(Lnet/minecraft/entity/Entity;F)Lnet/minecraft/util/math/Vec3d;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSkyColorBody", "(Lnet/minecraft/entity/Entity;F)Lnet/minecraft/util/math/Vec3d;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "cos", "(F)F", false);
mv.visitInsn(FCONST_2);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 4);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 7);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/client/ForgeHooksClient", "getSkyBlendColour", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ILOAD, 9);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(ISHR);
mv.visitIntInsn(SIPUSH, 255);
mv.visitInsn(IAND);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("255.0"));
mv.visitInsn(FDIV);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(ILOAD, 9);
mv.visitIntInsn(BIPUSH, 8);
mv.visitInsn(ISHR);
mv.visitIntInsn(SIPUSH, 255);
mv.visitInsn(IAND);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("255.0"));
mv.visitInsn(FDIV);
mv.visitVarInsn(FSTORE, 11);
mv.visitVarInsn(ILOAD, 9);
mv.visitIntInsn(SIPUSH, 255);
mv.visitInsn(IAND);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("255.0"));
mv.visitInsn(FDIV);
mv.visitVarInsn(FSTORE, 12);
mv.visitVarInsn(FLOAD, 10);
mv.visitVarInsn(FLOAD, 4);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitVarInsn(FLOAD, 4);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 11);
mv.visitVarInsn(FLOAD, 12);
mv.visitVarInsn(FLOAD, 4);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 12);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitVarInsn(FSTORE, 13);
mv.visitVarInsn(FLOAD, 13);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitVarInsn(FLOAD, 10);
mv.visitLdcInsn(new Float("0.3"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 11);
mv.visitLdcInsn(new Float("0.59"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FLOAD, 12);
mv.visitLdcInsn(new Float("0.11"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitLdcInsn(new Float("0.6"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 14);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 13);
mv.visitLdcInsn(new Float("0.75"));
mv.visitInsn(FMUL);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 15);
mv.visitVarInsn(FLOAD, 10);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 14);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 14);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 11);
mv.visitVarInsn(FLOAD, 12);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 14);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 12);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 14, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getThunderStrength", "(F)F", false);
mv.visitVarInsn(FSTORE, 14);
mv.visitVarInsn(FLOAD, 14);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCMPL);
Label l1 = new Label();
mv.visitJumpInsn(IFLE, l1);
mv.visitVarInsn(FLOAD, 10);
mv.visitLdcInsn(new Float("0.3"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 11);
mv.visitLdcInsn(new Float("0.59"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FLOAD, 12);
mv.visitLdcInsn(new Float("0.11"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitLdcInsn(new Float("0.2"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 15);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 14);
mv.visitLdcInsn(new Float("0.75"));
mv.visitInsn(FMUL);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 16);
mv.visitVarInsn(FLOAD, 10);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 11);
mv.visitVarInsn(FLOAD, 12);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 12);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lastLightningBolt", "I");
Label l2 = new Label();
mv.visitJumpInsn(IFLE, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lastLightningBolt", "I");
mv.visitInsn(I2F);
mv.visitVarInsn(FLOAD, 2);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 15);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FCONST_1);
mv.visitInsn(FCMPL);
Label l3 = new Label();
mv.visitJumpInsn(IFLE, l3);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FSTORE, 15);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(FLOAD, 15);
mv.visitLdcInsn(new Float("0.45"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 15);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.8"));
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(FLOAD, 11);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.8"));
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 11);
mv.visitVarInsn(FLOAD, 12);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 12);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(F2D);
mv.visitVarInsn(FLOAD, 11);
mv.visitInsn(F2D);
mv.visitVarInsn(FLOAD, 12);
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(8, 17);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCelestialAngle", "(F)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldTime", "()J", false);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "calculateCelestialAngle", "(JF)F", false);
mv.visitInsn(FRETURN);
mv.visitMaxs(4, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getMoonPhase", "()I", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldTime", "()J", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getMoonPhase", "(J)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCurrentMoonPhaseFactor", "()F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getCurrentMoonPhaseFactor", "()F", false);
mv.visitInsn(FRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCurrentMoonPhaseFactorBody", "()F", null, null);
mv.visitCode();
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/WorldProvider", "MOON_PHASE_FACTORS", "[F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldTime", "()J", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getMoonPhase", "(J)I", false);
mv.visitInsn(FALOAD);
mv.visitInsn(FRETURN);
mv.visitMaxs(4, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCelestialAngleRadians", "(F)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitInsn(FRETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCloudColour", "(F)Lnet/minecraft/util/math/Vec3d;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getCloudColor", "(F)Lnet/minecraft/util/math/Vec3d;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCloudColorBody", "(F)Lnet/minecraft/util/math/Vec3d;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "cos", "(F)F", false);
mv.visitInsn(FCONST_2);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitVarInsn(FSTORE, 3);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FSTORE, 4);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FSTORE, 5);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FSTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitVarInsn(FSTORE, 7);
mv.visitVarInsn(FLOAD, 7);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitVarInsn(FLOAD, 4);
mv.visitLdcInsn(new Float("0.3"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 5);
mv.visitLdcInsn(new Float("0.59"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FLOAD, 6);
mv.visitLdcInsn(new Float("0.11"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitLdcInsn(new Float("0.6"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 8);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 7);
mv.visitLdcInsn(new Float("0.95"));
mv.visitInsn(FMUL);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 9);
mv.visitVarInsn(FLOAD, 4);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 8);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 5);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 8);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 5);
mv.visitVarInsn(FLOAD, 6);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 8);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 6);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"net/minecraft/world/World", Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[] {});
mv.visitVarInsn(FLOAD, 4);
mv.visitVarInsn(FLOAD, 3);
mv.visitLdcInsn(new Float("0.9"));
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.1"));
mv.visitInsn(FADD);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 5);
mv.visitVarInsn(FLOAD, 3);
mv.visitLdcInsn(new Float("0.9"));
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.1"));
mv.visitInsn(FADD);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 5);
mv.visitVarInsn(FLOAD, 6);
mv.visitVarInsn(FLOAD, 3);
mv.visitLdcInsn(new Float("0.85"));
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.15"));
mv.visitInsn(FADD);
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getThunderStrength", "(F)F", false);
mv.visitVarInsn(FSTORE, 8);
mv.visitVarInsn(FLOAD, 8);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCMPL);
Label l1 = new Label();
mv.visitJumpInsn(IFLE, l1);
mv.visitVarInsn(FLOAD, 4);
mv.visitLdcInsn(new Float("0.3"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 5);
mv.visitLdcInsn(new Float("0.59"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FLOAD, 6);
mv.visitLdcInsn(new Float("0.11"));
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitLdcInsn(new Float("0.2"));
mv.visitInsn(FMUL);
mv.visitVarInsn(FSTORE, 9);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 8);
mv.visitLdcInsn(new Float("0.95"));
mv.visitInsn(FMUL);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 10);
mv.visitVarInsn(FLOAD, 4);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 5);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 5);
mv.visitVarInsn(FLOAD, 6);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FMUL);
mv.visitVarInsn(FLOAD, 9);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 10);
mv.visitInsn(FSUB);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(FSTORE, 6);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(FLOAD, 4);
mv.visitInsn(F2D);
mv.visitVarInsn(FLOAD, 5);
mv.visitInsn(F2D);
mv.visitVarInsn(FLOAD, 6);
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(8, 11);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getFogColor", "(F)Lnet/minecraft/util/math/Vec3d;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(FLOAD, 2);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getFogColor", "(FF)Lnet/minecraft/util/math/Vec3d;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPrecipitationHeight", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getPrecipitationHeight", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getTopSolidOrLiquidBlock", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getTopFilledSegment", "()I", false);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(IADD);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitVarInsn(ASTORE, 3);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/world/chunk/Chunk", "net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l1 = new Label();
mv.visitJumpInsn(IFLT, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/material/Material", "blocksMovement", "()Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isLeaves", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isFoliage", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFNE, l2);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ASTORE, 3);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitMaxs(5, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getStarBrightness", "(F)F", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getStarBrightness", "(F)F", false);
mv.visitInsn(FRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getStarBrightnessBody", "(F)F", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCelestialAngle", "(F)F", false);
mv.visitVarInsn(FSTORE, 2);
mv.visitInsn(FCONST_1);
mv.visitVarInsn(FLOAD, 2);
mv.visitLdcInsn(new Float("6.2831855"));
mv.visitInsn(FMUL);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "cos", "(F)F", false);
mv.visitInsn(FCONST_2);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.25"));
mv.visitInsn(FADD);
mv.visitInsn(FSUB);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitVarInsn(FSTORE, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitVarInsn(FLOAD, 3);
mv.visitInsn(FMUL);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FMUL);
mv.visitInsn(FRETURN);
mv.visitMaxs(3, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isUpdateScheduled", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "scheduleUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;I)V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateBlockTick", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;II)V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "scheduleBlockUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;II)V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateEntities", "()V", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
Label l3 = new Label();
Label l4 = new Label();
mv.visitTryCatchBlock(l3, l4, l2, "java/lang/Throwable");
Label l5 = new Label();
Label l6 = new Label();
Label l7 = new Label();
mv.visitTryCatchBlock(l5, l6, l7, "java/lang/Throwable");
Label l8 = new Label();
Label l9 = new Label();
Label l10 = new Label();
mv.visitTryCatchBlock(l8, l9, l10, "java/lang/Throwable");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("entities");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("global");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 1);
Label l11 = new Label();
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "weatherEffects", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l12 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l12);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "weatherEffects", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "updateBlocked", "Z");
mv.visitJumpInsn(IFEQ, l3);
mv.visitLabel(l1);
Label l13 = new Label();
mv.visitJumpInsn(GOTO, l13);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/entity/Entity"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(DUP);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "ticksExisted", "I");
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "ticksExisted", "I");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "onUpdate", "()V", false);
mv.visitLabel(l4);
Label l14 = new Label();
mv.visitJumpInsn(GOTO, l14);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitLdcInsn("Ticking entity");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("Entity being ticked");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 2);
Label l15 = new Label();
mv.visitJumpInsn(IFNONNULL, l15);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Entity");
mv.visitLdcInsn("~~NULL~~");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
Label l16 = new Label();
mv.visitJumpInsn(GOTO, l16);
mv.visitLabel(l15);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/Throwable", "net/minecraft/crash/CrashReport", "net/minecraft/crash/CrashReportCategory"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "addEntityCrashInfo", "(Lnet/minecraft/crash/CrashReportCategory;)V", false);
mv.visitLabel(l16);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringEntities", "Z");
Label l17 = new Label();
mv.visitJumpInsn(IFEQ, l17);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
mv.visitLdcInsn("{}");
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "getCompleteReport", "()Ljava/lang/String;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "removeEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitJumpInsn(GOTO, l14);
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
mv.visitJumpInsn(IFEQ, l13);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "weatherEffects", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitIincInsn(1, -1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(I)Ljava/lang/Object;", true);
mv.visitInsn(POP);
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(1, 1);
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("remove");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endStartSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 1);
Label l18 = new Label();
mv.visitLabel(l18);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l19 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l19);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
Label l20 = new Label();
mv.visitJumpInsn(IFEQ, l20);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFEQ, l20);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l20);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(1, 1);
mv.visitJumpInsn(GOTO, l18);
mv.visitLabel(l19);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 1);
Label l21 = new Label();
mv.visitLabel(l21);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l22 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l22);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitIincInsn(1, 1);
mv.visitJumpInsn(GOTO, l21);
mv.visitLabel(l22);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "tickPlayers", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("regular");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endStartSection", "(Ljava/lang/String;)V", false);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 1);
Label l23 = new Label();
mv.visitLabel(l23);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l24 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l24);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getRidingEntity", "()Lnet/minecraft/entity/Entity;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
Label l25 = new Label();
mv.visitJumpInsn(IFNULL, l25);
mv.visitVarInsn(ALOAD, 3);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
Label l26 = new Label();
mv.visitJumpInsn(IFNE, l26);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isPassenger", "(Lnet/minecraft/entity/Entity;)Z", false);
mv.visitJumpInsn(IFEQ, l26);
Label l27 = new Label();
mv.visitJumpInsn(GOTO, l27);
mv.visitLabel(l26);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/entity/Entity", "net/minecraft/entity/Entity"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "dismountRidingEntity", "()V", false);
mv.visitLabel(l25);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("tick");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
Label l28 = new Label();
mv.visitJumpInsn(IFNE, l28);
mv.visitVarInsn(ALOAD, 2);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayerMP");
mv.visitJumpInsn(IFNE, l28);
mv.visitLabel(l5);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackStart", "(Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackEnd", "(Ljava/lang/Object;)V", false);
mv.visitLabel(l6);
mv.visitJumpInsn(GOTO, l28);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("Ticking entity");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Entity being ticked");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "addEntityCrashInfo", "(Lnet/minecraft/crash/CrashReportCategory;)V", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringEntities", "Z");
Label l29 = new Label();
mv.visitJumpInsn(IFEQ, l29);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
mv.visitLdcInsn("{}");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "getCompleteReport", "()Ljava/lang/String;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "removeEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitJumpInsn(GOTO, l28);
mv.visitLabel(l29);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/Throwable", "net/minecraft/crash/CrashReport", "net/minecraft/crash/CrashReportCategory"}, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l28);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("remove");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
Label l30 = new Label();
mv.visitJumpInsn(IFEQ, l30);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
Label l31 = new Label();
mv.visitJumpInsn(IFEQ, l31);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFEQ, l31);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l31);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 1);
mv.visitIincInsn(1, -1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(I)Ljava/lang/Object;", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityRemoved", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l30);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitLabel(l27);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(1, 1);
mv.visitJumpInsn(GOTO, l23);
mv.visitLabel(l24);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("blockEntities");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endStartSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
Label l32 = new Label();
mv.visitJumpInsn(IFNE, l32);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 1);
Label l33 = new Label();
mv.visitLabel(l33);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l34 = new Label();
mv.visitJumpInsn(IFEQ, l34);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "onChunkUnload", "()V", false);
mv.visitJumpInsn(GOTO, l33);
mv.visitLabel(l34);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitTypeInsn(NEW, "java/util/IdentityHashMap");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/util/IdentityHashMap", "<init>", "()V", false);
mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "newSetFromMap", "(Ljava/util/Map;)Ljava/util/Set;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "addAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tickableTileEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
mv.visitLabel(l32);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tickableTileEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 1);
Label l35 = new Label();
mv.visitLabel(l35);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l36 = new Label();
mv.visitJumpInsn(IFEQ, l36);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "isInvalid", "()Z", false);
Label l37 = new Label();
mv.visitJumpInsn(IFNE, l37);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "hasWorld", "()Z", false);
mv.visitJumpInsn(IFEQ, l37);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitJumpInsn(IFEQ, l37);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "contains", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l37);
mv.visitLabel(l8);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitVarInsn(ALOAD, 2);
mv.visitInvokeDynamicInsn("get", "(Lnet/minecraft/tileentity/TileEntity;)Ljava/util/function/Supplier;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"), new Object[]{Type.getType("()Ljava/lang/Object;"), new Handle(Opcodes.H_INVOKESTATIC, "net/minecraft/world/World", "lambda$updateEntities$1", "(Lnet/minecraft/tileentity/TileEntity;)Ljava/lang/String;"), Type.getType("()Ljava/lang/String;")});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "func_194340_a", "(Ljava/util/function/Supplier;)V", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "TILE_ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackStart", "(Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/util/ITickable");
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/util/ITickable", "update", "()V", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "TILE_ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackEnd", "(Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitLabel(l9);
mv.visitJumpInsn(GOTO, l37);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_FULL, 4, new Object[] {"net/minecraft/world/World", "java/util/Iterator", "net/minecraft/tileentity/TileEntity", "net/minecraft/util/math/BlockPos"}, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitLdcInsn("Ticking block entity");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Block entity being ticked");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "addInfoToCrashReport", "(Lnet/minecraft/crash/CrashReportCategory;)V", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringTileEntities", "Z");
Label l38 = new Label();
mv.visitJumpInsn(IFEQ, l38);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
mv.visitLdcInsn("{}");
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "getCompleteReport", "()Ljava/lang/String;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "invalidate", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "removeTileEntity", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitJumpInsn(GOTO, l37);
mv.visitLabel(l38);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"java/lang/Throwable", "net/minecraft/crash/CrashReport", "net/minecraft/crash/CrashReportCategory"}, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l37);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "java/util/Iterator", "net/minecraft/tileentity/TileEntity"}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "isInvalid", "()Z", false);
Label l39 = new Label();
mv.visitJumpInsn(IFEQ, l39);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l39);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/chunk/Chunk$EnumCreateEntityType", "CHECK", "Lnet/minecraft/world/chunk/Chunk$EnumCreateEntityType;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getTileEntity", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/chunk/Chunk$EnumCreateEntityType;)Lnet/minecraft/tileentity/TileEntity;", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitJumpInsn(IF_ACMPNE, l39);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeTileEntity", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l39);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitJumpInsn(GOTO, l35);
mv.visitLabel(l36);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("pendingBlockEntities");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endStartSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
Label l40 = new Label();
mv.visitJumpInsn(IFNE, l40);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l41 = new Label();
mv.visitLabel(l41);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l42 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l42);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "isInvalid", "()Z", false);
Label l43 = new Label();
mv.visitJumpInsn(IFNE, l43);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "contains", "(Ljava/lang/Object;)Z", true);
Label l44 = new Label();
mv.visitJumpInsn(IFNE, l44);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "addTileEntity", "(Lnet/minecraft/tileentity/TileEntity;)Z", false);
mv.visitInsn(POP);
mv.visitLabel(l44);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/tileentity/TileEntity"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l43);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "addTileEntity", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/tileentity/TileEntity;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitInsn(ICONST_3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyBlockUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", false);
mv.visitLabel(l43);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l41);
mv.visitLabel(l42);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
mv.visitLabel(l40);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 7);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "tickPlayers", "()V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addTileEntity", "(Lnet/minecraft/tileentity/TileEntity;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getWorld", "()Lnet/minecraft/world/World;", false);
mv.visitVarInsn(ALOAD, 0);
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "setWorld", "(Lnet/minecraft/world/World;)V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/util/ITickable");
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tickableTileEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "onLoad", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
Label l3 = new Label();
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitInsn(ICONST_2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "notifyBlockUpdate", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/block/state/IBlockState;I)V", false);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addTileEntities", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lnet/minecraft/tileentity/TileEntity;>;)V", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 2);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getWorld", "()Lnet/minecraft/world/World;", false);
mv.visitVarInsn(ALOAD, 0);
Label l3 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "setWorld", "(Lnet/minecraft/world/World;)V", false);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "addAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 2);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "addTileEntity", "(Lnet/minecraft/tileentity/TileEntity;)Z", false);
mv.visitInsn(POP);
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateEntity", "(Lnet/minecraft/entity/Entity;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateEntityWithOptionalForce", "(Lnet/minecraft/entity/Entity;Z)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateEntityWithOptionalForce", "(Lnet/minecraft/entity/Entity;Z)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/player/EntityPlayer");
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getPersistentChunks", "()Lcom/google/common/collect/ImmutableSetMultimap;", false);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/ChunkPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/ChunkPos", "<init>", "(II)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSetMultimap", "containsKey", "(Ljava/lang/Object;)Z", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ILOAD, 5);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitInsn(ICONST_0);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitIntInsn(BIPUSH, 32);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ILOAD, 2);
Label l3 = new Label();
mv.visitJumpInsn(IFEQ, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(ISUB);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(IADD);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(IADD);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitInsn(ICONST_1);
Label l5 = new Label();
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ILOAD, 7);
Label l6 = new Label();
mv.visitJumpInsn(IFNE, l6);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "canEntityUpdate", "(Lnet/minecraft/entity/Entity;)Z", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(RETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "lastTickPosX", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "lastTickPosY", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "lastTickPosZ", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationYaw", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "prevRotationYaw", "F");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationPitch", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "prevRotationPitch", "F");
mv.visitVarInsn(ILOAD, 2);
Label l7 = new Label();
mv.visitJumpInsn(IFEQ, l7);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
mv.visitJumpInsn(IFEQ, l7);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(DUP);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "ticksExisted", "I");
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "ticksExisted", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isRiding", "()Z", false);
Label l8 = new Label();
mv.visitJumpInsn(IFEQ, l8);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "updateRidden", "()V", false);
mv.visitJumpInsn(GOTO, l7);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "updateBlocked", "Z");
mv.visitJumpInsn(IFNE, l7);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "onUpdate", "()V", false);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitLdcInsn("chunkCheck");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "startSection", "(Ljava/lang/String;)V", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l9 = new Label();
mv.visitJumpInsn(IFNE, l9);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
Label l10 = new Label();
mv.visitJumpInsn(IFEQ, l10);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "lastTickPosX", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l11 = new Label();
mv.visitJumpInsn(IFNE, l11);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
Label l12 = new Label();
mv.visitJumpInsn(IFEQ, l12);
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "lastTickPosY", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l13 = new Label();
mv.visitJumpInsn(IFNE, l13);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
Label l14 = new Label();
mv.visitJumpInsn(IFEQ, l14);
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "lastTickPosZ", "D");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationPitch", "F");
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l15 = new Label();
mv.visitJumpInsn(IFNE, l15);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationPitch", "F");
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
Label l16 = new Label();
mv.visitJumpInsn(IFEQ, l16);
mv.visitLabel(l15);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "prevRotationPitch", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "rotationPitch", "F");
mv.visitLabel(l16);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationYaw", "F");
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
Label l17 = new Label();
mv.visitJumpInsn(IFNE, l17);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "rotationYaw", "F");
mv.visitInsn(F2D);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
Label l18 = new Label();
mv.visitJumpInsn(IFEQ, l18);
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "prevRotationYaw", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "rotationYaw", "F");
mv.visitLabel(l18);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
Label l19 = new Label();
mv.visitJumpInsn(IFEQ, l19);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IF_ICMPNE, l19);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordY", "I");
mv.visitVarInsn(ILOAD, 4);
mv.visitJumpInsn(IF_ICMPNE, l19);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitVarInsn(ILOAD, 5);
Label l20 = new Label();
mv.visitJumpInsn(IF_ICMPEQ, l20);
mv.visitLabel(l19);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
Label l21 = new Label();
mv.visitJumpInsn(IFEQ, l21);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFEQ, l21);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordX", "I");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordZ", "I");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "chunkCoordY", "I");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeEntityAtIndex", "(Lnet/minecraft/entity/Entity;I)V", false);
mv.visitLabel(l21);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "setPositionNonDirty", "()Z", false);
Label l22 = new Label();
mv.visitJumpInsn(IFNE, l22);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
mv.visitJumpInsn(IFNE, l22);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
mv.visitJumpInsn(GOTO, l20);
mv.visitLabel(l22);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "addEntity", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l20);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "profiler", "Lnet/minecraft/profiler/Profiler;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/profiler/Profiler", "endSection", "()V", false);
mv.visitVarInsn(ILOAD, 2);
Label l23 = new Label();
mv.visitJumpInsn(IFEQ, l23);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "addedToChunk", "Z");
mv.visitJumpInsn(IFEQ, l23);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getPassengers", "()Ljava/util/List;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 6);
Label l24 = new Label();
mv.visitLabel(l24);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
mv.visitJumpInsn(IFEQ, l23);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
Label l25 = new Label();
mv.visitJumpInsn(IFNE, l25);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getRidingEntity", "()Lnet/minecraft/entity/Entity;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitJumpInsn(IF_ACMPNE, l25);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateEntity", "(Lnet/minecraft/entity/Entity;)V", false);
Label l26 = new Label();
mv.visitJumpInsn(GOTO, l26);
mv.visitLabel(l25);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/entity/Entity"}, 0, null);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "dismountRidingEntity", "()V", false);
mv.visitLabel(l26);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitJumpInsn(GOTO, l24);
mv.visitLabel(l23);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(8, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkNoEntityCollision", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkNoEntityCollision", "(Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/entity/Entity;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkNoEntityCollision", "(Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/entity/Entity;)Z", null, null);
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getEntitiesWithinAABBExcludingEntity", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/List", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "isDead", "Z");
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 5);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "preventEntitySpawning", "Z");
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitVarInsn(ALOAD, 2);
Label l3 = new Label();
mv.visitJumpInsn(IFNULL, l3);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isRidingSameEntity", "(Lnet/minecraft/entity/Entity;)Z", false);
mv.visitJumpInsn(IFNE, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/entity/Entity"}, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(4, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkBlockCollision", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ISTORE, 9);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 3);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 10);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 5);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 11);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 7);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/material/Material", "AIR", "Lnet/minecraft/block/material/Material;");
Label l6 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l6);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(11, 1);
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 13);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "containsAnyLiquid", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ISTORE, 9);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 3);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 10);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 5);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 11);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 7);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isAABBInsideLiquid", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/lang/Boolean;", false);
mv.visitVarInsn(ASTORE, 13);
mv.visitVarInsn(ALOAD, 13);
Label l6 = new Label();
mv.visitJumpInsn(IFNULL, l6);
mv.visitVarInsn(ALOAD, 13);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
Label l7 = new Label();
mv.visitJumpInsn(IFNE, l7);
Label l8 = new Label();
mv.visitJumpInsn(GOTO, l8);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/block/state/IBlockState", "java/lang/Boolean"}, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/material/Material", "isLiquid", "()Z", false);
mv.visitJumpInsn(IFEQ, l8);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(11, 1);
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 14);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isFlammableWithin", "(Lnet/minecraft/util/math/AxisAlignedBB;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 7);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ISTORE, 9);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 3);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l2);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 10);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 5);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 11);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 7);
Label l6 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ALOAD, 12);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "FIRE", "Lnet/minecraft/block/BlockFire;");
Label l7 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l7);
mv.visitVarInsn(ALOAD, 12);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "FLOWING_LAVA", "Lnet/minecraft/block/BlockDynamicLiquid;");
mv.visitJumpInsn(IF_ACMPEQ, l7);
mv.visitVarInsn(ALOAD, 12);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "LAVA", "Lnet/minecraft/block/BlockStaticLiquid;");
Label l8 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l8);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/Block"}, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(III)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isBurning", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l9 = new Label();
mv.visitJumpInsn(IFEQ, l9);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(11, 1);
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(8, 13);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "handleMaterialAcceleration", "(Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/block/material/Material;Lnet/minecraft/entity/Entity;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isAreaLoaded", "(IIIIIIZ)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", "net/minecraft/block/material/Material", "net/minecraft/entity/Entity", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 10);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/math/Vec3d", "ZERO", "Lnet/minecraft/util/math/Vec3d;");
mv.visitVarInsn(ASTORE, 11);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 12);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 13);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 14, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", "net/minecraft/block/material/Material", "net/minecraft/entity/Entity", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 5);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l2);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 14);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ILOAD, 7);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ISTORE, 15);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 15);
mv.visitVarInsn(ILOAD, 9);
Label l6 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l6);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ILOAD, 15);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 16);
mv.visitVarInsn(ALOAD, 16);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 17);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 16);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 7);
mv.visitInsn(I2D);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isEntityInsideMaterial", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/entity/Entity;DLnet/minecraft/block/material/Material;Z)Ljava/lang/Boolean;", false);
mv.visitVarInsn(ASTORE, 18);
mv.visitVarInsn(ALOAD, 18);
Label l7 = new Label();
mv.visitJumpInsn(IFNULL, l7);
mv.visitVarInsn(ALOAD, 18);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
mv.visitInsn(ICONST_1);
mv.visitJumpInsn(IF_ICMPNE, l7);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 10);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "modifyAcceleration", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/Vec3d;", false);
mv.visitVarInsn(ASTORE, 11);
Label l8 = new Label();
mv.visitJumpInsn(GOTO, l8);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"net/minecraft/block/state/IBlockState", "net/minecraft/block/Block", "java/lang/Boolean"}, 0, null);
mv.visitVarInsn(ALOAD, 18);
Label l9 = new Label();
mv.visitJumpInsn(IFNULL, l9);
mv.visitVarInsn(ALOAD, 18);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
mv.visitJumpInsn(IFNE, l9);
mv.visitJumpInsn(GOTO, l8);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 16);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitVarInsn(ALOAD, 2);
mv.visitJumpInsn(IF_ACMPNE, l8);
mv.visitVarInsn(ILOAD, 14);
mv.visitInsn(ICONST_1);
mv.visitInsn(IADD);
mv.visitInsn(I2F);
mv.visitVarInsn(ALOAD, 16);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/BlockLiquid", "LEVEL", "Lnet/minecraft/block/properties/PropertyInteger;");
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getValue", "(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;", true);
mv.visitTypeInsn(CHECKCAST, "java/lang/Integer");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/block/BlockLiquid", "getLiquidHeightPercent", "(I)F", false);
mv.visitInsn(FSUB);
mv.visitInsn(F2D);
mv.visitVarInsn(DSTORE, 19);
mv.visitVarInsn(ILOAD, 7);
mv.visitInsn(I2D);
mv.visitVarInsn(DLOAD, 19);
mv.visitInsn(DCMPL);
mv.visitJumpInsn(IFLT, l8);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 10);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "modifyAcceleration", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/Vec3d;", false);
mv.visitVarInsn(ASTORE, 11);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitIincInsn(15, 1);
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(14, 1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(13, 1);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/Vec3d", "lengthVector", "()D", false);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPL);
Label l10 = new Label();
mv.visitJumpInsn(IFLE, l10);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isPushedByWater", "()Z", false);
mv.visitJumpInsn(IFEQ, l10);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/Vec3d", "normalize", "()Lnet/minecraft/util/math/Vec3d;", false);
mv.visitVarInsn(ASTORE, 11);
mv.visitLdcInsn(new Double("0.014"));
mv.visitVarInsn(DSTORE, 13);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(DUP);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "motionX", "D");
mv.visitVarInsn(ALOAD, 11);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "x", "D");
mv.visitLdcInsn(new Double("0.014"));
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "motionX", "D");
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(DUP);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "motionY", "D");
mv.visitVarInsn(ALOAD, 11);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "y", "D");
mv.visitLdcInsn(new Double("0.014"));
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "motionY", "D");
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(DUP);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "motionZ", "D");
mv.visitVarInsn(ALOAD, 11);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/Vec3d", "z", "D");
mv.visitLdcInsn(new Double("0.014"));
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/entity/Entity", "motionZ", "D");
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(IRETURN);
mv.visitMaxs(9, 21);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isMaterialInBB", "(Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/block/material/Material;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 8);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "retain", "()Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitVarInsn(ASTORE, 9);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ISTORE, 10);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/AxisAlignedBB", "net/minecraft/block/material/Material", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 4);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 11);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 6);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 12);
Label l4 = new Label();
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 8);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 12);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$PooledMutableBlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 13);
mv.visitVarInsn(ALOAD, 13);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isAABBInsideMaterial", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/block/material/Material;)Ljava/lang/Boolean;", false);
mv.visitVarInsn(ASTORE, 14);
mv.visitVarInsn(ALOAD, 14);
Label l6 = new Label();
mv.visitJumpInsn(IFNULL, l6);
mv.visitVarInsn(ALOAD, 14);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
Label l7 = new Label();
mv.visitJumpInsn(IFNE, l7);
Label l8 = new Label();
mv.visitJumpInsn(GOTO, l8);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/block/state/IBlockState", "java/lang/Boolean"}, 0, null);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 13);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitVarInsn(ALOAD, 2);
mv.visitJumpInsn(IF_ACMPNE, l8);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(12, 1);
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(11, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$PooledMutableBlockPos", "release", "()V", false);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 15);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "createExplosion", "(Lnet/minecraft/entity/Entity;DDDFZ)Lnet/minecraft/world/Explosion;", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitVarInsn(FLOAD, 8);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ILOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "newExplosion", "(Lnet/minecraft/entity/Entity;DDDFZZ)Lnet/minecraft/world/Explosion;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(11, 10);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "newExplosion", "(Lnet/minecraft/entity/Entity;DDDFZZ)Lnet/minecraft/world/Explosion;", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitTypeInsn(NEW, "net/minecraft/world/Explosion");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitVarInsn(DLOAD, 6);
mv.visitVarInsn(FLOAD, 8);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/Explosion", "<init>", "(Lnet/minecraft/world/World;Lnet/minecraft/entity/Entity;DDDFZZ)V", false);
mv.visitVarInsn(ASTORE, 11);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onExplosionStart", "(Lnet/minecraft/world/World;Lnet/minecraft/world/Explosion;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 11);
mv.visitInsn(ARETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/world/Explosion"}, 0, null);
mv.visitVarInsn(ALOAD, 11);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/Explosion", "doExplosionA", "()V", false);
mv.visitVarInsn(ALOAD, 11);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/Explosion", "doExplosionB", "(Z)V", false);
mv.visitVarInsn(ALOAD, 11);
mv.visitInsn(ARETURN);
mv.visitMaxs(13, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBlockDensity", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/AxisAlignedBB;)F", null, null);
mv.visitCode();
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("2.0"));
mv.visitInsn(DMUL);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 3);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("2.0"));
mv.visitInsn(DMUL);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 5);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("2.0"));
mv.visitInsn(DMUL);
mv.visitInsn(DCONST_1);
mv.visitInsn(DADD);
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 7);
mv.visitInsn(DCONST_1);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(DLOAD, 3);
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "floor", "(D)D", false);
mv.visitVarInsn(DLOAD, 3);
mv.visitInsn(DMUL);
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("2.0"));
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 9);
mv.visitInsn(DCONST_1);
mv.visitInsn(DCONST_1);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "floor", "(D)D", false);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DMUL);
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("2.0"));
mv.visitInsn(DDIV);
mv.visitVarInsn(DSTORE, 11);
mv.visitVarInsn(DLOAD, 3);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitVarInsn(DLOAD, 5);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPL);
mv.visitJumpInsn(IFLT, l0);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPL);
mv.visitJumpInsn(IFLT, l0);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 13);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 14);
mv.visitInsn(FCONST_0);
mv.visitVarInsn(FSTORE, 15);
Label l1 = new Label();
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_FULL, 11, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/AxisAlignedBB", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.FLOAT}, 0, new Object[] {});
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(FCONST_1);
mv.visitInsn(FCMPG);
Label l2 = new Label();
mv.visitJumpInsn(IFGT, l2);
mv.visitInsn(FCONST_0);
mv.visitVarInsn(FSTORE, 16);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(FCONST_1);
mv.visitInsn(FCMPG);
Label l4 = new Label();
mv.visitJumpInsn(IFGT, l4);
mv.visitInsn(FCONST_0);
mv.visitVarInsn(FSTORE, 17);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(FLOAD, 17);
mv.visitInsn(FCONST_1);
mv.visitInsn(FCMPG);
Label l6 = new Label();
mv.visitJumpInsn(IFGT, l6);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(F2D);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 18);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxY", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minY", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(F2D);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 20);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitInsn(DSUB);
mv.visitVarInsn(FLOAD, 17);
mv.visitInsn(F2D);
mv.visitInsn(DMUL);
mv.visitInsn(DADD);
mv.visitVarInsn(DSTORE, 22);
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/Vec3d");
mv.visitInsn(DUP);
mv.visitVarInsn(DLOAD, 18);
mv.visitVarInsn(DLOAD, 9);
mv.visitInsn(DADD);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(DLOAD, 22);
mv.visitVarInsn(DLOAD, 11);
mv.visitInsn(DADD);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/Vec3d", "<init>", "(DDD)V", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "rayTraceBlocks", "(Lnet/minecraft/util/math/Vec3d;Lnet/minecraft/util/math/Vec3d;)Lnet/minecraft/util/math/RayTraceResult;", false);
Label l7 = new Label();
mv.visitJumpInsn(IFNONNULL, l7);
mv.visitIincInsn(13, 1);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, null);
mv.visitIincInsn(14, 1);
mv.visitVarInsn(FLOAD, 17);
mv.visitInsn(F2D);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DADD);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 17);
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/Vec3d", "net/minecraft/util/math/AxisAlignedBB", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[] {});
mv.visitVarInsn(FLOAD, 16);
mv.visitInsn(F2D);
mv.visitVarInsn(DLOAD, 5);
mv.visitInsn(DADD);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 16);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(FLOAD, 15);
mv.visitInsn(F2D);
mv.visitVarInsn(DLOAD, 3);
mv.visitInsn(DADD);
mv.visitInsn(D2F);
mv.visitVarInsn(FSTORE, 15);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ILOAD, 13);
mv.visitInsn(I2F);
mv.visitVarInsn(ILOAD, 14);
mv.visitInsn(I2F);
mv.visitInsn(FDIV);
mv.visitInsn(FRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitInsn(FCONST_0);
mv.visitInsn(FRETURN);
mv.visitMaxs(11, 24);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "extinguishFire", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "offset", "(Lnet/minecraft/util/EnumFacing;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "FIRE", "Lnet/minecraft/block/BlockFire;");
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitIntInsn(SIPUSH, 1009);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "playEvent", "(Lnet/minecraft/entity/player/EntityPlayer;ILnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setBlockToAir", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(POP);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getDebugLoadedEntities", "()Ljava/lang/String;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
mv.visitLdcInsn("All: ");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getProviderName", "()Ljava/lang/String;", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;");
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/chunk/IChunkProvider", "makeString", "()Ljava/lang/String;", true);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getTileEntity", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/tileentity/TileEntity;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getPendingTileEntityAt", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/tileentity/TileEntity;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/tileentity/TileEntity"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
Label l2 = new Label();
mv.visitJumpInsn(IFNONNULL, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/chunk/Chunk$EnumCreateEntityType", "IMMEDIATE", "Lnet/minecraft/world/chunk/Chunk$EnumCreateEntityType;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getTileEntity", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/chunk/Chunk$EnumCreateEntityType;)Lnet/minecraft/tileentity/TileEntity;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
Label l3 = new Label();
mv.visitJumpInsn(IFNONNULL, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getPendingTileEntityAt", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/tileentity/TileEntity;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE, "getPendingTileEntityAt", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/tileentity/TileEntity;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "isInvalid", "()Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "equals", "(Ljava/lang/Object;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setTileEntity", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/tileentity/TileEntity;)V", null, null);
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "toImmutable", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitJumpInsn(IFNULL, l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "isInvalid", "()Z", false);
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "setPos", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getWorld", "()Lnet/minecraft/world/World;", false);
mv.visitVarInsn(ALOAD, 0);
Label l2 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "setWorld", "(Lnet/minecraft/world/World;)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 3);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "getPos", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "equals", "(Ljava/lang/Object;)Z", false);
Label l5 = new Label();
mv.visitJumpInsn(IFEQ, l5);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "invalidate", "()V", false);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
Label l6 = new Label();
mv.visitJumpInsn(IFNULL, l6);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "addTileEntity", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/tileentity/TileEntity;)V", false);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/world/chunk/Chunk"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "addTileEntity", "(Lnet/minecraft/tileentity/TileEntity;)Z", false);
mv.visitInsn(POP);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "removeTileEntity", "(Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getTileEntity", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/tileentity/TileEntity;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
Label l0 = new Label();
mv.visitJumpInsn(IFNULL, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "processingLoadedTiles", "Z");
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/tileentity/TileEntity", "invalidate", "()V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 2);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/util/ITickable");
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/tileentity/TileEntity"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
Label l2 = new Label();
mv.visitJumpInsn(IFNULL, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "addedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedTileEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tickableTileEntities", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "removeTileEntity", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateComparatorOutputLevel", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markTileEntityForRemoval", "(Lnet/minecraft/tileentity/TileEntity;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "tileEntitiesToBeRemoved", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockFullCube", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getCollisionBoundingBox", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;", true);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/Block", "NULL_AABB", "Lnet/minecraft/util/math/AxisAlignedBB;");
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/AxisAlignedBB", "getAverageEdgeLength", "()D", false);
mv.visitInsn(DCONST_1);
mv.visitInsn(DCMPL);
mv.visitJumpInsn(IFLT, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/AxisAlignedBB"}, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockNormalCube", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isOutsideBuildHeight", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(ICONST_4);
mv.visitInsn(ISHR);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/chunk/IChunkProvider", "getLoadedChunk", "(II)Lnet/minecraft/world/chunk/Chunk;", true);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
Label l1 = new Label();
mv.visitJumpInsn(IFNULL, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "isEmpty", "()Z", false);
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isNormalCube", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/world/chunk/Chunk"}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "calculateInitialSkylight", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "calculateSkylightSubtracted", "(F)I", false);
mv.visitVarInsn(ISTORE, 1);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "skylightSubtracted", "I");
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "skylightSubtracted", "I");
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setAllowedSpawnTypes", "(ZZ)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "spawnHostileMobs", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "spawnPeacefulMobs", "Z");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "setAllowedSpawnTypes", "(ZZ)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "tick", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "updateWeather", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "calculateInitialWeather", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "calculateInitialWeather", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "calculateInitialWeatherBody", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isRaining", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(FCONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isThundering", "()Z", false);
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(FCONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "updateWeather", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "updateWeather", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateWeatherBody", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "hasSkyLight", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "isRemote", "Z");
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getGameRules", "()Lnet/minecraft/world/GameRules;", false);
mv.visitLdcInsn("doWeatherCycle");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/GameRules", "getBoolean", "(Ljava/lang/String;)Z", false);
mv.visitVarInsn(ISTORE, 1);
mv.visitVarInsn(ILOAD, 1);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getCleanWeatherTime", "()I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
Label l2 = new Label();
mv.visitJumpInsn(IFLE, l2);
mv.visitIincInsn(2, -1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setCleanWeatherTime", "(I)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isThundering", "()Z", false);
Label l3 = new Label();
mv.visitJumpInsn(IFEQ, l3);
mv.visitInsn(ICONST_1);
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER}, 1, new Object[] {"net/minecraft/world/storage/WorldInfo"});
mv.visitInsn(ICONST_2);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"net/minecraft/world/storage/WorldInfo", Opcodes.INTEGER});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setThunderTime", "(I)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isRaining", "()Z", false);
Label l5 = new Label();
mv.visitJumpInsn(IFEQ, l5);
mv.visitInsn(ICONST_1);
Label l6 = new Label();
mv.visitJumpInsn(GOTO, l6);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/world/storage/WorldInfo"});
mv.visitInsn(ICONST_2);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"net/minecraft/world/storage/WorldInfo", Opcodes.INTEGER});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setRainTime", "(I)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getThunderTime", "()I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitVarInsn(ILOAD, 3);
Label l7 = new Label();
mv.visitJumpInsn(IFGT, l7);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isThundering", "()Z", false);
Label l8 = new Label();
mv.visitJumpInsn(IFEQ, l8);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitIntInsn(SIPUSH, 12000);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
mv.visitIntInsn(SIPUSH, 3600);
mv.visitInsn(IADD);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setThunderTime", "(I)V", false);
Label l9 = new Label();
mv.visitJumpInsn(GOTO, l9);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitLdcInsn(new Integer(168000));
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
mv.visitIntInsn(SIPUSH, 12000);
mv.visitInsn(IADD);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setThunderTime", "(I)V", false);
mv.visitJumpInsn(GOTO, l9);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(3, -1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setThunderTime", "(I)V", false);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IFGT, l9);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isThundering", "()Z", false);
Label l10 = new Label();
mv.visitJumpInsn(IFNE, l10);
mv.visitInsn(ICONST_1);
Label l11 = new Label();
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/world/storage/WorldInfo"});
mv.visitInsn(ICONST_0);
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_FULL, 4, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"net/minecraft/world/storage/WorldInfo", Opcodes.INTEGER});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setThundering", "(Z)V", false);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getRainTime", "()I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ILOAD, 4);
Label l12 = new Label();
mv.visitJumpInsn(IFGT, l12);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isRaining", "()Z", false);
Label l13 = new Label();
mv.visitJumpInsn(IFEQ, l13);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitIntInsn(SIPUSH, 12000);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
mv.visitIntInsn(SIPUSH, 12000);
mv.visitInsn(IADD);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setRainTime", "(I)V", false);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitLdcInsn(new Integer(168000));
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
mv.visitIntInsn(SIPUSH, 12000);
mv.visitInsn(IADD);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setRainTime", "(I)V", false);
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(4, -1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setRainTime", "(I)V", false);
mv.visitVarInsn(ILOAD, 4);
mv.visitJumpInsn(IFGT, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isRaining", "()Z", false);
Label l14 = new Label();
mv.visitJumpInsn(IFNE, l14);
mv.visitInsn(ICONST_1);
Label l15 = new Label();
mv.visitJumpInsn(GOTO, l15);
mv.visitLabel(l14);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/world/storage/WorldInfo"});
mv.visitInsn(ICONST_0);
mv.visitLabel(l15);
mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[] {"net/minecraft/world/storage/WorldInfo", Opcodes.INTEGER});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setRaining", "(Z)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "prevThunderingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isThundering", "()Z", false);
Label l16 = new Label();
mv.visitJumpInsn(IFEQ, l16);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.01"));
mv.visitInsn(DADD);
mv.visitInsn(D2F);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
Label l17 = new Label();
mv.visitJumpInsn(GOTO, l17);
mv.visitLabel(l16);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.01"));
mv.visitInsn(DSUB);
mv.visitInsn(D2F);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitLabel(l17);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "prevRainingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "isRaining", "()Z", false);
Label l18 = new Label();
mv.visitJumpInsn(IFEQ, l18);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.01"));
mv.visitInsn(DADD);
mv.visitInsn(D2F);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rainingStrength", "F");
Label l19 = new Label();
mv.visitJumpInsn(GOTO, l19);
mv.visitLabel(l18);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.01"));
mv.visitInsn(DSUB);
mv.visitInsn(D2F);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitLabel(l19);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitInsn(FCONST_0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "clamp", "(FFF)F", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "playMoodSoundAndCheckLight", "(IILnet/minecraft/world/chunk/Chunk;)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "enqueueRelightChecks", "()V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(1, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "updateBlocks", "()V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "immediateBlockTick", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "scheduledUpdatesAreImmediate", "Z");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "updateTick", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/state/IBlockState;Ljava/util/Random;)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ICONST_0);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "scheduledUpdatesAreImmediate", "Z");
mv.visitInsn(RETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canBlockFreezeWater", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canBlockFreeze", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canBlockFreezeNoWater", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canBlockFreeze", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canBlockFreeze", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "canBlockFreeze", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canBlockFreezeBody", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBiome", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/biome/Biome", "getTemperature", "(Lnet/minecraft/util/math/BlockPos;)F", false);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 4);
mv.visitLdcInsn(new Float("0.15"));
mv.visitInsn(FCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/world/biome/Biome", Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l1 = new Label();
mv.visitJumpInsn(IFLT, l1);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitIntInsn(SIPUSH, 256);
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "BLOCK", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitIntInsn(BIPUSH, 10);
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "WATER", "Lnet/minecraft/block/BlockStaticLiquid;");
Label l2 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitVarInsn(ALOAD, 6);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "FLOWING_WATER", "Lnet/minecraft/block/BlockDynamicLiquid;");
mv.visitJumpInsn(IF_ACMPNE, l1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/block/state/IBlockState", "net/minecraft/block/Block"}, 0, null);
mv.visitVarInsn(ALOAD, 5);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/BlockLiquid", "LEVEL", "Lnet/minecraft/block/properties/PropertyInteger;");
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getValue", "(Lnet/minecraft/block/properties/IProperty;)Ljava/lang/Comparable;", true);
mv.visitTypeInsn(CHECKCAST, "java/lang/Integer");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
mv.visitJumpInsn(IFNE, l1);
mv.visitVarInsn(ILOAD, 2);
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isWater", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isWater", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isWater", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "isWater", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l4);
mv.visitInsn(ICONST_1);
Label l5 = new Label();
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ILOAD, 7);
mv.visitJumpInsn(IFNE, l1);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE, "isWater", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/material/Material", "WATER", "Lnet/minecraft/block/material/Material;");
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canSnowAt", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "canSnowAt", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canSnowAtBody", "(Lnet/minecraft/util/math/BlockPos;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBiome", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/biome/Biome", "getTemperature", "(Lnet/minecraft/util/math/BlockPos;)F", false);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(FLOAD, 4);
mv.visitLdcInsn(new Float("0.15"));
mv.visitInsn(FCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLT, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/world/biome/Biome", Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(ILOAD, 2);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l2 = new Label();
mv.visitJumpInsn(IFLT, l2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitIntInsn(SIPUSH, 256);
mv.visitJumpInsn(IF_ICMPGE, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "BLOCK", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitIntInsn(BIPUSH, 10);
mv.visitJumpInsn(IF_ICMPGE, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isAir", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "SNOW_LAYER", "Lnet/minecraft/block/Block;");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "canPlaceBlockAt", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkLight", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "hasSkyLight", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "BLOCK", "Lnet/minecraft/world/EnumSkyBlock;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IOR);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE, "getRawLight", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/EnumSkyBlock;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
Label l0 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l0);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/EnumSkyBlock", "SKY", "Lnet/minecraft/world/EnumSkyBlock;");
Label l1 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l1);
mv.visitInsn(ICONST_0);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/state/IBlockState"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getLightValue", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getLightOpacity", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_1);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ISTORE, 5);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitIntInsn(BIPUSH, 15);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitVarInsn(ILOAD, 4);
mv.visitIntInsn(BIPUSH, 14);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(IRETURN);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/EnumFacing", "values", "()[Lnet/minecraft/util/EnumFacing;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ISTORE, 7);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 8);
Label l6 = new Label();
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ILOAD, 7);
Label l7 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l7);
mv.visitVarInsn(ALOAD, 6);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(AALOAD);
mv.visitVarInsn(ASTORE, 9);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "offset", "(Lnet/minecraft/util/EnumFacing;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 10);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 11);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 11);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ILOAD, 4);
Label l8 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l8);
mv.visitVarInsn(ILOAD, 11);
mv.visitVarInsn(ISTORE, 4);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"net/minecraft/util/EnumFacing", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitIntInsn(BIPUSH, 14);
Label l9 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l9);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(IRETURN);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitIincInsn(8, 1);
mv.visitJumpInsn(GOTO, l6);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;IZ)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitIntInsn(BIPUSH, 18);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isAreaLoaded", "(Lnet/minecraft/util/math/BlockPos;IZ)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitIntInsn(BIPUSH, 17);
Label l2 = new Label();
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIntInsn(BIPUSH, 15);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitVarInsn(ISTORE, 3);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getRawLight", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/EnumSkyBlock;)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ISTORE, 9);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitVarInsn(ISTORE, 10);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos$MutableBlockPos");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "<init>", "()V", false);
mv.visitVarInsn(ASTORE, 21);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos$MutableBlockPos");
mv.visitInsn(DUP);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "<init>", "()V", false);
mv.visitVarInsn(ASTORE, 22);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 6);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 5);
mv.visitIincInsn(5, 1);
mv.visitLdcInsn(new Integer(133152));
mv.visitInsn(IASTORE);
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_FULL, 23, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos"}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 6);
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 5);
mv.visitIincInsn(5, 1);
mv.visitLdcInsn(new Integer(133152));
mv.visitVarInsn(ILOAD, 6);
mv.visitIntInsn(BIPUSH, 18);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitInsn(IASTORE);
Label l5 = new Label();
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 5);
Label l6 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l6);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 4);
mv.visitIincInsn(4, 1);
mv.visitInsn(IALOAD);
mv.visitVarInsn(ISTORE, 11);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 12);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 6);
mv.visitInsn(ISHR);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 13);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 12);
mv.visitInsn(ISHR);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 14);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 18);
mv.visitInsn(ISHR);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IAND);
mv.visitVarInsn(ISTORE, 23);
mv.visitVarInsn(ALOAD, 21);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 14);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$MutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 21);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 24);
mv.visitVarInsn(ILOAD, 24);
mv.visitVarInsn(ILOAD, 23);
mv.visitJumpInsn(IF_ICMPNE, l5);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 21);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitVarInsn(ILOAD, 23);
mv.visitJumpInsn(IFLE, l5);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 15);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 16);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 17);
mv.visitVarInsn(ILOAD, 15);
mv.visitVarInsn(ILOAD, 16);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 17);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IF_ICMPGE, l5);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/EnumFacing", "values", "()[Lnet/minecraft/util/EnumFacing;", false);
mv.visitVarInsn(ASTORE, 26);
mv.visitVarInsn(ALOAD, 26);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ISTORE, 27);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 28);
Label l7 = new Label();
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_FULL, 29, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, "[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 28);
mv.visitVarInsn(ILOAD, 27);
Label l8 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l8);
mv.visitVarInsn(ALOAD, 26);
mv.visitVarInsn(ILOAD, 28);
mv.visitInsn(AALOAD);
mv.visitVarInsn(ASTORE, 29);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ALOAD, 29);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetX", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 18);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ALOAD, 29);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetY", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 19);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ALOAD, 29);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetZ", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 20);
mv.visitVarInsn(ALOAD, 22);
mv.visitVarInsn(ILOAD, 18);
mv.visitVarInsn(ILOAD, 19);
mv.visitVarInsn(ILOAD, 20);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$MutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 22);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 30);
mv.visitInsn(ICONST_1);
mv.visitVarInsn(ALOAD, 30);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 30);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 22);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getLightOpacity", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 25);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 22);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 24);
mv.visitVarInsn(ILOAD, 24);
mv.visitVarInsn(ILOAD, 23);
mv.visitVarInsn(ILOAD, 25);
mv.visitInsn(ISUB);
Label l9 = new Label();
mv.visitJumpInsn(IF_ICMPNE, l9);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitInsn(ARRAYLENGTH);
mv.visitJumpInsn(IF_ICMPGE, l9);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 5);
mv.visitIincInsn(5, 1);
mv.visitVarInsn(ILOAD, 18);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 19);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitIntInsn(BIPUSH, 6);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitVarInsn(ILOAD, 20);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitIntInsn(BIPUSH, 12);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitVarInsn(ILOAD, 23);
mv.visitVarInsn(ILOAD, 25);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 18);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitInsn(IASTORE);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_FULL, 29, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitIincInsn(28, 1);
mv.visitJumpInsn(GOTO, l7);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_FULL, 25, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_FULL, 23, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos"}, 0, new Object[] {});
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ILOAD, 5);
Label l10 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l10);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 4);
mv.visitIincInsn(4, 1);
mv.visitInsn(IALOAD);
mv.visitVarInsn(ISTORE, 11);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 12);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 6);
mv.visitInsn(ISHR);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 13);
mv.visitVarInsn(ILOAD, 11);
mv.visitIntInsn(BIPUSH, 12);
mv.visitInsn(ISHR);
mv.visitIntInsn(BIPUSH, 63);
mv.visitInsn(IAND);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(ISUB);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 14);
mv.visitVarInsn(ALOAD, 21);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 14);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$MutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 21);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ISTORE, 23);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 21);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World", "getRawLight", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/world/EnumSkyBlock;)I", false);
mv.visitVarInsn(ISTORE, 24);
mv.visitVarInsn(ILOAD, 24);
mv.visitVarInsn(ILOAD, 23);
mv.visitJumpInsn(IF_ICMPEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 21);
mv.visitVarInsn(ILOAD, 24);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "setLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitVarInsn(ILOAD, 24);
mv.visitVarInsn(ILOAD, 23);
mv.visitJumpInsn(IF_ICMPLE, l4);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 15);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 16);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ISUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
mv.visitVarInsn(ISTORE, 17);
mv.visitVarInsn(ILOAD, 15);
mv.visitVarInsn(ILOAD, 16);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 17);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 3);
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitInsn(ARRAYLENGTH);
mv.visitIntInsn(BIPUSH, 6);
mv.visitInsn(ISUB);
mv.visitJumpInsn(IF_ICMPGE, l4);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/EnumFacing", "values", "()[Lnet/minecraft/util/EnumFacing;", false);
mv.visitVarInsn(ASTORE, 25);
mv.visitVarInsn(ALOAD, 25);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ISTORE, 26);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 27);
Label l11 = new Label();
mv.visitLabel(l11);
mv.visitFrame(Opcodes.F_FULL, 28, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER, "[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 27);
mv.visitVarInsn(ILOAD, 26);
Label l12 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l12);
mv.visitVarInsn(ALOAD, 25);
mv.visitVarInsn(ILOAD, 27);
mv.visitInsn(AALOAD);
mv.visitVarInsn(ASTORE, 28);
mv.visitVarInsn(ILOAD, 12);
mv.visitVarInsn(ALOAD, 28);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetX", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 18);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ALOAD, 28);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetY", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 19);
mv.visitVarInsn(ILOAD, 14);
mv.visitVarInsn(ALOAD, 28);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/EnumFacing", "getFrontOffsetZ", "()I", false);
mv.visitInsn(IADD);
mv.visitVarInsn(ISTORE, 20);
mv.visitVarInsn(ALOAD, 22);
mv.visitVarInsn(ILOAD, 18);
mv.visitVarInsn(ILOAD, 19);
mv.visitVarInsn(ILOAD, 20);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos$MutableBlockPos", "setPos", "(III)Lnet/minecraft/util/math/BlockPos$MutableBlockPos;", false);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 22);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getLightFor", "(Lnet/minecraft/world/EnumSkyBlock;Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitVarInsn(ILOAD, 24);
Label l13 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l13);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lightUpdateBlockList", "[I");
mv.visitVarInsn(ILOAD, 5);
mv.visitIincInsn(5, 1);
mv.visitVarInsn(ILOAD, 18);
mv.visitVarInsn(ILOAD, 8);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 19);
mv.visitVarInsn(ILOAD, 9);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitIntInsn(BIPUSH, 6);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitVarInsn(ILOAD, 20);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ISUB);
mv.visitIntInsn(BIPUSH, 32);
mv.visitInsn(IADD);
mv.visitIntInsn(BIPUSH, 12);
mv.visitInsn(ISHL);
mv.visitInsn(IOR);
mv.visitInsn(IASTORE);
mv.visitLabel(l13);
mv.visitFrame(Opcodes.F_FULL, 28, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER, "[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitIincInsn(27, 1);
mv.visitJumpInsn(GOTO, l11);
mv.visitLabel(l12);
mv.visitFrame(Opcodes.F_FULL, 25, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_FULL, 23, new Object[] {"net/minecraft/world/World", "net/minecraft/world/EnumSkyBlock", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "net/minecraft/util/math/BlockPos$MutableBlockPos", "net/minecraft/util/math/BlockPos$MutableBlockPos"}, 0, new Object[] {});
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 31);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "tickUpdates", "(Z)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPendingBlockUpdates", "(Lnet/minecraft/world/chunk/Chunk;Z)Ljava/util/List;", "(Lnet/minecraft/world/chunk/Chunk;Z)Ljava/util/List<Lnet/minecraft/world/NextTickListEntry;>;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPendingBlockUpdates", "(Lnet/minecraft/world/gen/structure/StructureBoundingBox;Z)Ljava/util/List;", "(Lnet/minecraft/world/gen/structure/StructureBoundingBox;Z)Ljava/util/List<Lnet/minecraft/world/NextTickListEntry;>;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntitiesWithinAABBExcludingEntity", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "NOT_SPECTATING", "Lcom/google/common/base/Predicate;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getEntitiesInAABBexcluding", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate;)Ljava/util/List;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntitiesInAABBexcluding", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate;)Ljava/util/List;", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate<-Lnet/minecraft/entity/Entity;>;)Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(2, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DADD);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DADD);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 8);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ISTORE, 9);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", "net/minecraft/util/math/AxisAlignedBB", "com/google/common/base/Predicate", "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 6);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l1);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 10);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 8);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getEntitiesWithinAABBForEntity", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;Lcom/google/common/base/Predicate;)V", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitInsn(ARETURN);
mv.visitMaxs(5, 11);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntities", "(Ljava/lang/Class;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lnet/minecraft/entity/Entity;>(Ljava/lang/Class<+TT;>;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
mv.visitCode();
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/List", "java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPlayers", "(Ljava/lang/Class;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lnet/minecraft/entity/Entity;>(Ljava/lang/Class<+TT;>;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
mv.visitCode();
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"java/util/List", "java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntitiesWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", "<T:Lnet/minecraft/entity/Entity;>(Ljava/lang/Class<+TT;>;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List<TT;>;", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "NOT_SPECTATING", "Lcom/google/common/base/Predicate;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getEntitiesWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate;)Ljava/util/List;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntitiesWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lnet/minecraft/entity/Entity;>(Ljava/lang/Class<+TT;>;Lnet/minecraft/util/math/AxisAlignedBB;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
{
av0 = mv.visitParameterAnnotation(2, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minX", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxX", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DADD);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 5);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "minZ", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DSUB);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(GETFIELD, "net/minecraft/util/math/AxisAlignedBB", "maxZ", "D");
mv.visitFieldInsn(GETSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(DADD);
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "ceil", "(D)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ISTORE, 9);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 10, new Object[] {"net/minecraft/world/World", "java/lang/Class", "net/minecraft/util/math/AxisAlignedBB", "com/google/common/base/Predicate", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 5);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ILOAD, 6);
mv.visitVarInsn(ISTORE, 10);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 10);
mv.visitVarInsn(ILOAD, 7);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isChunkLoaded", "(IIZ)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ILOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getEntitiesOfTypeWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;Ljava/util/List;Lcom/google/common/base/Predicate;)V", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(10, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 8);
mv.visitInsn(ARETURN);
mv.visitMaxs(5, 11);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "findNearestEntityWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/entity/Entity;)Lnet/minecraft/entity/Entity;", "<T:Lnet/minecraft/entity/Entity;>(Ljava/lang/Class<+TT;>;Lnet/minecraft/util/math/AxisAlignedBB;TT;)TT;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getEntitiesWithinAABB", "(Ljava/lang/Class;Lnet/minecraft/util/math/AxisAlignedBB;)Ljava/util/List;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 5);
mv.visitLdcInsn(new Double("1.7976931348623157E308"));
mv.visitVarInsn(DSTORE, 6);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 8);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {"net/minecraft/world/World", "java/lang/Class", "net/minecraft/util/math/AxisAlignedBB", "net/minecraft/entity/Entity", "java/util/List", "net/minecraft/entity/Entity", Opcodes.DOUBLE, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 8);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 4);
mv.visitVarInsn(ILOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 9);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ALOAD, 3);
Label l2 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "NOT_SPECTATING", "Lcom/google/common/base/Predicate;");
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 9);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "getDistanceSq", "(Lnet/minecraft/entity/Entity;)D", false);
mv.visitVarInsn(DSTORE, 10);
mv.visitVarInsn(DLOAD, 10);
mv.visitVarInsn(DLOAD, 6);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGT, l2);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(DLOAD, 10);
mv.visitVarInsn(DSTORE, 6);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(8, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 5);
mv.visitInsn(ARETURN);
mv.visitMaxs(4, 12);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getEntityByID", "(I)Lnet/minecraft/entity/Entity;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "entitiesById", "Lnet/minecraft/util/IntHashMap;");
mv.visitVarInsn(ILOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/IntHashMap", "lookup", "(I)Ljava/lang/Object;", false);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLoadedEntityList", "()Ljava/util/List;", "()Ljava/util/List<Lnet/minecraft/entity/Entity;>;", null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "markChunkDirty", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/tileentity/TileEntity;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "markDirty", "()V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "countEntities", "(Ljava/lang/Class;)I", "(Ljava/lang/Class<*>;)I", null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 3);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, "java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
mv.visitTypeInsn(INSTANCEOF, "net/minecraft/entity/EntityLiving");
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 4);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/EntityLiving");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/EntityLiving", "isNoDespawnRequired", "()Z", false);
Label l3 = new Label();
mv.visitJumpInsn(IFNE, l3);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/entity/Entity"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
mv.visitJumpInsn(IFEQ, l3);
mv.visitIincInsn(2, 1);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "loadEntities", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lnet/minecraft/entity/Entity;>;)V", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ASTORE, 3);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/world/World;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "onEntityAdded", "(Lnet/minecraft/entity/Entity;)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "unloadEntities", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lnet/minecraft/entity/Entity;>;)V", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "unloadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "addAll", "(Ljava/util/Collection;)Z", true);
mv.visitInsn(POP);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "mayPlace", "(Lnet/minecraft/block/Block;Lnet/minecraft/util/math/BlockPos;ZLnet/minecraft/util/EnumFacing;Lnet/minecraft/entity/Entity;)Z", null, null);
{
av0 = mv.visitParameterAnnotation(4, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ILOAD, 3);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitInsn(ACONST_NULL);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/state/IBlockState"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getDefaultState", "()Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getCollisionBoundingBox", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;", true);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"net/minecraft/util/math/AxisAlignedBB"});
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/Block", "NULL_AABB", "Lnet/minecraft/util/math/AxisAlignedBB;");
Label l2 = new Label();
mv.visitJumpInsn(IF_ACMPEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/AxisAlignedBB", "offset", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/AxisAlignedBB;", false);
mv.visitVarInsn(ALOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "checkNoEntityCollision", "(Lnet/minecraft/util/math/AxisAlignedBB;Lnet/minecraft/entity/Entity;)Z", false);
mv.visitJumpInsn(IFNE, l2);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/AxisAlignedBB"}, 0, null);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getMaterial", "()Lnet/minecraft/block/material/Material;", true);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/material/Material", "CIRCUITS", "Lnet/minecraft/block/material/Material;");
Label l3 = new Label();
mv.visitJumpInsn(IF_ACMPNE, l3);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/init/Blocks", "ANVIL", "Lnet/minecraft/block/Block;");
mv.visitJumpInsn(IF_ACMPNE, l3);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isReplaceable", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "canPlaceBlockOnSide", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", false);
mv.visitJumpInsn(IFEQ, l4);
mv.visitInsn(ICONST_1);
Label l5 = new Label();
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSeaLevel", "()I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "seaLevel", "I");
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setSeaLevel", "(I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "seaLevel", "I");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getStrongPower", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", true);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getWorldType", "()Lnet/minecraft/world/WorldType;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getTerrainType", "()Lnet/minecraft/world/WorldType;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "DOWN", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "UP", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l1);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "NORTH", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l2);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "SOUTH", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l3);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "WEST", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l4 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l4);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "EAST", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 15);
Label l5 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l5);
mv.visitVarInsn(ILOAD, 2);
Label l6 = new Label();
mv.visitJumpInsn(GOTO, l6);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isSidePowered", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "shouldCheckWeakPower", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getStrongPower", "(Lnet/minecraft/util/math/BlockPos;)I", false);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/block/state/IBlockState"}, 0, null);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getWeakPower", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", true);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockPowered", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "down", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "DOWN", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "up", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "UP", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l1 = new Label();
mv.visitJumpInsn(IFLE, l1);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "north", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "NORTH", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l2 = new Label();
mv.visitJumpInsn(IFLE, l2);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "south", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "SOUTH", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l3 = new Label();
mv.visitJumpInsn(IFLE, l3);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "west", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "WEST", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l4 = new Label();
mv.visitJumpInsn(IFLE, l4);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "east", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "EAST", "Lnet/minecraft/util/EnumFacing;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
Label l5 = new Label();
mv.visitJumpInsn(IFLE, l5);
mv.visitInsn(ICONST_1);
Label l6 = new Label();
mv.visitJumpInsn(GOTO, l6);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockIndirectlyGettingPowered", "(Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/EnumFacing", "values", "()[Lnet/minecraft/util/EnumFacing;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ISTORE, 4);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"net/minecraft/world/World", "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, "[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 4);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(AALOAD);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "offset", "(Lnet/minecraft/util/EnumFacing;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRedstonePower", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)I", false);
mv.visitVarInsn(ISTORE, 7);
mv.visitVarInsn(ILOAD, 7);
mv.visitIntInsn(BIPUSH, 15);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l2);
mv.visitIntInsn(BIPUSH, 15);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/util/EnumFacing", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ILOAD, 2);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l3);
mv.visitVarInsn(ILOAD, 7);
mv.visitVarInsn(ISTORE, 2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getClosestPlayerToEntity", "(Lnet/minecraft/entity/Entity;D)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitVarInsn(DLOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getClosestPlayer", "(DDDDZ)Lnet/minecraft/entity/player/EntityPlayer;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(10, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getNearestPlayerNotCreative", "(Lnet/minecraft/entity/Entity;D)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitVarInsn(DLOAD, 2);
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getClosestPlayer", "(DDDDZ)Lnet/minecraft/entity/player/EntityPlayer;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(10, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getClosestPlayer", "(DDDDZ)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ILOAD, 9);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "CAN_AI_TARGET", "Lcom/google/common/base/Predicate;");
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "NOT_SPECTATING", "Lcom/google/common/base/Predicate;");
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"com/google/common/base/Predicate"});
mv.visitVarInsn(ASTORE, 10);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(DLOAD, 1);
mv.visitVarInsn(DLOAD, 3);
mv.visitVarInsn(DLOAD, 5);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getClosestPlayer", "(DDDDLcom/google/common/base/Predicate;)Lnet/minecraft/entity/player/EntityPlayer;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(10, 11);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getClosestPlayer", "(DDDDLcom/google/common/base/Predicate;)Lnet/minecraft/entity/player/EntityPlayer;", "(DDDDLcom/google/common/base/Predicate<Lnet/minecraft/entity/Entity;>;)Lnet/minecraft/entity/player/EntityPlayer;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitLdcInsn(new Double("-1.0"));
mv.visitVarInsn(DSTORE, 10);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 12);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 13);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.DOUBLE, "net/minecraft/entity/player/EntityPlayer", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 13);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 13);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 14);
mv.visitVarInsn(ALOAD, 9);
mv.visitVarInsn(ALOAD, 14);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 14);
mv.visitVarInsn(DLOAD, 1);
mv.visitVarInsn(DLOAD, 3);
mv.visitVarInsn(DLOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getDistanceSq", "(DDD)D", false);
mv.visitVarInsn(DSTORE, 15);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPG);
Label l3 = new Label();
mv.visitJumpInsn(IFLT, l3);
mv.visitVarInsn(DLOAD, 15);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DMUL);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/entity/player/EntityPlayer", Opcodes.DOUBLE}, 0, null);
mv.visitVarInsn(DLOAD, 10);
mv.visitLdcInsn(new Double("-1.0"));
mv.visitInsn(DCMPL);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(DLOAD, 15);
mv.visitVarInsn(DLOAD, 10);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 15);
mv.visitVarInsn(DSTORE, 10);
mv.visitVarInsn(ALOAD, 14);
mv.visitVarInsn(ASTORE, 12);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(13, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 12);
mv.visitInsn(ARETURN);
mv.visitMaxs(7, 17);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isAnyPlayerWithinRangeAt", "(DDDD)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 9);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 9);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 9);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 10);
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EntitySelectors", "NOT_SPECTATING", "Lcom/google/common/base/Predicate;");
mv.visitVarInsn(ALOAD, 10);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 10);
mv.visitVarInsn(DLOAD, 1);
mv.visitVarInsn(DLOAD, 3);
mv.visitVarInsn(DLOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getDistanceSq", "(DDD)D", false);
mv.visitVarInsn(DSTORE, 11);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPG);
Label l3 = new Label();
mv.visitJumpInsn(IFLT, l3);
mv.visitVarInsn(DLOAD, 11);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DMUL);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraft/entity/player/EntityPlayer", Opcodes.DOUBLE}, 0, null);
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,2, null, 0, null);
mv.visitIincInsn(9, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitMaxs(7, 13);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getNearestAttackablePlayer", "(Lnet/minecraft/entity/Entity;DD)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posY", "D");
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Function");
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Predicate");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getNearestAttackablePlayer", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Lnet/minecraft/entity/player/EntityPlayer;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(13, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getNearestAttackablePlayer", "(Lnet/minecraft/util/math/BlockPos;DD)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitInsn(F2D);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitInsn(F2D);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(I2F);
mv.visitLdcInsn(new Float("0.5"));
mv.visitInsn(FADD);
mv.visitInsn(F2D);
mv.visitVarInsn(DLOAD, 2);
mv.visitVarInsn(DLOAD, 4);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Function");
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Predicate");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getNearestAttackablePlayer", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Lnet/minecraft/entity/player/EntityPlayer;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(13, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getNearestAttackablePlayer", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Lnet/minecraft/entity/player/EntityPlayer;", "(DDDDDLcom/google/common/base/Function<Lnet/minecraft/entity/player/EntityPlayer;Ljava/lang/Double;>;Lcom/google/common/base/Predicate<Lnet/minecraft/entity/player/EntityPlayer;>;)Lnet/minecraft/entity/player/EntityPlayer;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(5, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(6, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitLdcInsn(new Double("-1.0"));
mv.visitVarInsn(DSTORE, 13);
mv.visitInsn(ACONST_NULL);
mv.visitVarInsn(ASTORE, 15);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 16);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {Opcodes.DOUBLE, "net/minecraft/entity/player/EntityPlayer", Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 16);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 16);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 17);
mv.visitVarInsn(ALOAD, 17);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/player/EntityPlayer", "capabilities", "Lnet/minecraft/entity/player/PlayerCapabilities;");
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/player/PlayerCapabilities", "disableDamage", "Z");
Label l2 = new Label();
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "isEntityAlive", "()Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "isSpectator", "()Z", false);
mv.visitJumpInsn(IFNE, l2);
mv.visitVarInsn(ALOAD, 12);
Label l3 = new Label();
mv.visitJumpInsn(IFNULL, l3);
mv.visitVarInsn(ALOAD, 12);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
mv.visitJumpInsn(IFEQ, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/entity/player/EntityPlayer"}, 0, null);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(DLOAD, 1);
mv.visitVarInsn(ALOAD, 17);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/player/EntityPlayer", "posY", "D");
mv.visitVarInsn(DLOAD, 5);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getDistanceSq", "(DDD)D", false);
mv.visitVarInsn(DSTORE, 18);
mv.visitVarInsn(DLOAD, 7);
mv.visitVarInsn(DSTORE, 20);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "isSneaking", "()Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitVarInsn(DLOAD, 7);
mv.visitLdcInsn(new Double("0.800000011920929"));
mv.visitInsn(DMUL);
mv.visitVarInsn(DSTORE, 20);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, null);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "isInvisible", "()Z", false);
Label l5 = new Label();
mv.visitJumpInsn(IFEQ, l5);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getArmorVisibility", "()F", false);
mv.visitVarInsn(FSTORE, 22);
mv.visitVarInsn(FLOAD, 22);
mv.visitLdcInsn(new Float("0.1"));
mv.visitInsn(FCMPG);
Label l6 = new Label();
mv.visitJumpInsn(IFGE, l6);
mv.visitLdcInsn(new Float("0.1"));
mv.visitVarInsn(FSTORE, 22);
mv.visitLabel(l6);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.FLOAT}, 0, null);
mv.visitVarInsn(DLOAD, 20);
mv.visitLdcInsn(new Float("0.7"));
mv.visitVarInsn(FLOAD, 22);
mv.visitInsn(FMUL);
mv.visitInsn(F2D);
mv.visitInsn(DMUL);
mv.visitVarInsn(DSTORE, 20);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 11);
Label l7 = new Label();
mv.visitJumpInsn(IFNULL, l7);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(ALOAD, 11);
mv.visitVarInsn(ALOAD, 17);
mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Function", "apply", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
mv.visitInsn(DCONST_1);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "valueOf", "(D)Ljava/lang/Double;", false);
mv.visitMethodInsn(INVOKESTATIC, "com/google/common/base/MoreObjects", "firstNonNull", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
mv.visitTypeInsn(CHECKCAST, "java/lang/Double");
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Double", "doubleValue", "()D", false);
mv.visitInsn(DMUL);
mv.visitVarInsn(DSTORE, 20);
mv.visitLabel(l7);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(DLOAD, 9);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeHooks", "getPlayerVisibilityDistance", "(Lnet/minecraft/entity/player/EntityPlayer;DD)D", false);
mv.visitVarInsn(DSTORE, 20);
mv.visitVarInsn(DLOAD, 9);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPG);
Label l8 = new Label();
mv.visitJumpInsn(IFLT, l8);
mv.visitVarInsn(ALOAD, 17);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/player/EntityPlayer", "posY", "D");
mv.visitVarInsn(DLOAD, 3);
mv.visitInsn(DSUB);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(D)D", false);
mv.visitVarInsn(DLOAD, 9);
mv.visitVarInsn(DLOAD, 9);
mv.visitInsn(DMUL);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l8);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 7);
mv.visitInsn(DCONST_0);
mv.visitInsn(DCMPG);
Label l9 = new Label();
mv.visitJumpInsn(IFLT, l9);
mv.visitVarInsn(DLOAD, 18);
mv.visitVarInsn(DLOAD, 20);
mv.visitVarInsn(DLOAD, 20);
mv.visitInsn(DMUL);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l9);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 13);
mv.visitLdcInsn(new Double("-1.0"));
mv.visitInsn(DCMPL);
Label l10 = new Label();
mv.visitJumpInsn(IFEQ, l10);
mv.visitVarInsn(DLOAD, 18);
mv.visitVarInsn(DLOAD, 13);
mv.visitInsn(DCMPG);
mv.visitJumpInsn(IFGE, l2);
mv.visitLabel(l10);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(DLOAD, 18);
mv.visitVarInsn(DSTORE, 13);
mv.visitVarInsn(ALOAD, 17);
mv.visitVarInsn(ASTORE, 15);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitIincInsn(16, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 15);
mv.visitInsn(ARETURN);
mv.visitMaxs(7, 23);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPlayerEntityByName", "(Ljava/lang/String;)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getName", "()Ljava/lang/String;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPlayerEntityByUUID", "(Ljava/util/UUID;)Lnet/minecraft/entity/player/EntityPlayer;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "playerEntities", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/player/EntityPlayer", "getUniqueID", "()Ljava/util/UUID;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/UUID", "equals", "(Ljava/lang/Object;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(2, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "sendQuittingDisconnectingPacket", "()V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "checkSessionLock", "()V", null, new String[] { "net/minecraft/world/MinecraftException" });
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "saveHandler", "Lnet/minecraft/world/storage/ISaveHandler;");
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/storage/ISaveHandler", "checkSessionLock", "()V", true);
mv.visitInsn(RETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setTotalWorldTime", "(J)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(LLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "setWorldTotalTime", "(J)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSeed", "()J", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getSeed", "()J", false);
mv.visitInsn(LRETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getTotalWorldTime", "()J", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getWorldTotalTime", "()J", false);
mv.visitInsn(LRETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getWorldTime", "()J", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getWorldTime", "()J", false);
mv.visitInsn(LRETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setWorldTime", "(J)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(LLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "setWorldTime", "(J)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSpawnPoint", "()Lnet/minecraft/util/math/BlockPos;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getSpawnPoint", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "contains", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraft/util/math/BlockPos");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "getCenterX", "()D", false);
mv.visitInsn(DCONST_0);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/border/WorldBorder", "getCenterZ", "()D", false);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/math/BlockPos", "<init>", "(DDD)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getHeight", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/util/math/BlockPos"}, 0, null);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ARETURN);
mv.visitMaxs(9, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setSpawnPoint", "(Lnet/minecraft/util/math/BlockPos;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "setSpawnPoint", "(Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "joinEntityInSurroundings", "(Lnet/minecraft/entity/Entity;)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posX", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 2);
mv.visitVarInsn(ALOAD, 1);
mv.visitFieldInsn(GETFIELD, "net/minecraft/entity/Entity", "posZ", "D");
mv.visitLdcInsn(new Double("16.0"));
mv.visitInsn(DDIV);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/MathHelper", "floor", "(D)I", false);
mv.visitVarInsn(ISTORE, 3);
mv.visitInsn(ICONST_2);
mv.visitVarInsn(ISTORE, 4);
mv.visitIntInsn(BIPUSH, -2);
mv.visitVarInsn(ISTORE, 5);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {"net/minecraft/world/World", "net/minecraft/entity/Entity", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(ICONST_2);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l1);
mv.visitIntInsn(BIPUSH, -2);
mv.visitVarInsn(ISTORE, 6);
Label l2 = new Label();
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(ICONST_2);
Label l3 = new Label();
mv.visitJumpInsn(IF_ICMPGT, l3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(IADD);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 6);
mv.visitInsn(IADD);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromChunkCoords", "(II)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitInsn(POP);
mv.visitIincInsn(6, 1);
mv.visitJumpInsn(GOTO, l2);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "contains", "(Ljava/lang/Object;)Z", true);
Label l4 = new Label();
mv.visitJumpInsn(IFNE, l4);
mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lnet/minecraft/entity/Entity;Lnet/minecraft/world/World;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
mv.visitJumpInsn(IFNE, l4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
mv.visitInsn(POP);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 7);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockModifiable", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "canMineBlock", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "canMineBlockBody", "(Lnet/minecraft/entity/player/EntityPlayer;Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitInsn(ICONST_1);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setEntityState", "(Lnet/minecraft/entity/Entity;B)V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getChunkProvider", "()Lnet/minecraft/world/chunk/IChunkProvider;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "chunkProvider", "Lnet/minecraft/world/chunk/IChunkProvider;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addBlockEvent", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;II)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "onBlockEventReceived", "(Lnet/minecraft/world/World;Lnet/minecraft/util/math/BlockPos;II)Z", true);
mv.visitInsn(POP);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSaveHandler", "()Lnet/minecraft/world/storage/ISaveHandler;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "saveHandler", "Lnet/minecraft/world/storage/ISaveHandler;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getWorldInfo", "()Lnet/minecraft/world/storage/WorldInfo;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getGameRules", "()Lnet/minecraft/world/GameRules;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getGameRulesInstance", "()Lnet/minecraft/world/GameRules;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateAllPlayersSleepingFlag", "()V", null, null);
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getThunderStrength", "(F)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "prevThunderingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "prevThunderingStrength", "F");
mv.visitInsn(FSUB);
mv.visitVarInsn(FLOAD, 1);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitInsn(FMUL);
mv.visitInsn(FRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setThunderStrength", "(F)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "prevThunderingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "thunderingStrength", "F");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getRainStrength", "(F)F", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "prevRainingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "prevRainingStrength", "F");
mv.visitInsn(FSUB);
mv.visitVarInsn(FLOAD, 1);
mv.visitInsn(FMUL);
mv.visitInsn(FADD);
mv.visitInsn(FRETURN);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setRainStrength", "(F)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "prevRainingStrength", "F");
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(FLOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "rainingStrength", "F");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isThundering", "()Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getThunderStrength", "(F)F", false);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.9"));
mv.visitInsn(DCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isRaining", "()Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(FCONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getRainStrength", "(F)F", false);
mv.visitInsn(F2D);
mv.visitLdcInsn(new Double("0.2"));
mv.visitInsn(DCMPL);
Label l0 = new Label();
mv.visitJumpInsn(IFLE, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isRainingAt", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isRaining", "()Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canSeeSky", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l1 = new Label();
mv.visitJumpInsn(IFNE, l1);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getPrecipitationHeight", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getY", "()I", false);
Label l2 = new Label();
mv.visitJumpInsn(IF_ICMPLE, l2);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBiome", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/biome/Biome;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/biome/Biome", "getEnableSnow", "()Z", false);
Label l3 = new Label();
mv.visitJumpInsn(IFEQ, l3);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/world/biome/Biome"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "canSnowAt", "(Lnet/minecraft/util/math/BlockPos;Z)Z", false);
Label l4 = new Label();
mv.visitJumpInsn(IFEQ, l4);
mv.visitInsn(ICONST_0);
Label l5 = new Label();
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/biome/Biome", "canRain", "()Z", false);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isBlockinHighHumidity", "(Lnet/minecraft/util/math/BlockPos;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "isBlockHighHumidity", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getMapStorage", "()Lnet/minecraft/world/storage/MapStorage;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "mapStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setData", "(Ljava/lang/String;Lnet/minecraft/world/storage/WorldSavedData;)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "mapStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/MapStorage", "setData", "(Ljava/lang/String;Lnet/minecraft/world/storage/WorldSavedData;)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "loadData", "(Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/storage/WorldSavedData;", "(Ljava/lang/Class<+Lnet/minecraft/world/storage/WorldSavedData;>;Ljava/lang/String;)Lnet/minecraft/world/storage/WorldSavedData;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "mapStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/MapStorage", "getOrLoadData", "(Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/storage/WorldSavedData;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getUniqueDataId", "(Ljava/lang/String;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "mapStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/MapStorage", "getUniqueDataId", "(Ljava/lang/String;)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playBroadcastSound", "(ILnet/minecraft/util/math/BlockPos;I)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "broadcastSound", "(ILnet/minecraft/util/math/BlockPos;I)V", true);
mv.visitIincInsn(4, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playEvent", "(ILnet/minecraft/util/math/BlockPos;I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitInsn(ACONST_NULL);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/player/EntityPlayer");
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "playEvent", "(Lnet/minecraft/entity/player/EntityPlayer;ILnet/minecraft/util/math/BlockPos;I)V", false);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "playEvent", "(Lnet/minecraft/entity/player/EntityPlayer;ILnet/minecraft/util/math/BlockPos;I)V", null, null);
{
av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
mv.visitLabel(l0);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
Label l3 = new Label();
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 5);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "playEvent", "(Lnet/minecraft/entity/player/EntityPlayer;ILnet/minecraft/util/math/BlockPos;I)V", true);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l3);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitLdcInsn("Playing level event");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReport", "makeCrashReport", "(Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/crash/CrashReport;", false);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 6);
mv.visitLdcInsn("Level event being played");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategory", "(Ljava/lang/String;)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Block coordinates");
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReportCategory", "getCoordinateInfo", "(Lnet/minecraft/util/math/BlockPos;)Ljava/lang/String;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Event source");
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Event type");
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 7);
mv.visitLdcInsn("Event data");
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
mv.visitTypeInsn(NEW, "net/minecraft/util/ReportedException");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/util/ReportedException", "<init>", "(Lnet/minecraft/crash/CrashReport;)V", false);
mv.visitInsn(ATHROW);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(5, 8);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getHeight", "()I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getHeight", "()I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getActualHeight", "()I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getActualHeight", "()I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setRandomSeed", "(III)Ljava/util/Random;", null, null);
mv.visitCode();
mv.visitVarInsn(ILOAD, 1);
mv.visitInsn(I2L);
mv.visitLdcInsn(new Long(341873128712L));
mv.visitInsn(LMUL);
mv.visitVarInsn(ILOAD, 2);
mv.visitInsn(I2L);
mv.visitLdcInsn(new Long(132897987541L));
mv.visitInsn(LMUL);
mv.visitInsn(LADD);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldInfo", "()Lnet/minecraft/world/storage/WorldInfo;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getSeed", "()J", false);
mv.visitInsn(LADD);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(I2L);
mv.visitInsn(LADD);
mv.visitVarInsn(LSTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitVarInsn(LLOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "setSeed", "(J)V", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "rand", "Ljava/util/Random;");
mv.visitInsn(ARETURN);
mv.visitMaxs(6, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "addWorldInfoToCrashReport", "(Lnet/minecraft/crash/CrashReport;)Lnet/minecraft/crash/CrashReportCategory;", null, null);
mv.visitCode();
Label l0 = new Label();
Label l1 = new Label();
Label l2 = new Label();
mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
mv.visitVarInsn(ALOAD, 1);
mv.visitLdcInsn("Affected level");
mv.visitInsn(ICONST_1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReport", "makeCategoryDepth", "(Ljava/lang/String;I)Lnet/minecraft/crash/CrashReportCategory;", false);
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
mv.visitLdcInsn("Level name");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
Label l3 = new Label();
mv.visitJumpInsn(IFNONNULL, l3);
mv.visitLdcInsn("????");
Label l4 = new Label();
mv.visitJumpInsn(GOTO, l4);
mv.visitLabel(l3);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/crash/CrashReport", "net/minecraft/crash/CrashReportCategory"}, 2, new Object[] {"net/minecraft/crash/CrashReportCategory", "java/lang/String"});
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getWorldName", "()Ljava/lang/String;", false);
mv.visitLabel(l4);
mv.visitFrame(Opcodes.F_FULL, 3, new Object[] {"net/minecraft/world/World", "net/minecraft/crash/CrashReport", "net/minecraft/crash/CrashReportCategory"}, 3, new Object[] {"net/minecraft/crash/CrashReportCategory", "java/lang/String", "java/lang/Object"});
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSection", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitLdcInsn("All players");
mv.visitTypeInsn(NEW, "net/minecraft/world/World$3");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World$3", "<init>", "(Lnet/minecraft/world/World;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addDetail", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
mv.visitVarInsn(ALOAD, 2);
mv.visitLdcInsn("Chunk stats");
mv.visitTypeInsn(NEW, "net/minecraft/world/World$4");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/World$4", "<init>", "(Lnet/minecraft/world/World;)V", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addDetail", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
mv.visitLabel(l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldInfo", "Lnet/minecraft/world/storage/WorldInfo;");
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "addToCrashReport", "(Lnet/minecraft/crash/CrashReportCategory;)V", false);
mv.visitLabel(l1);
Label l5 = new Label();
mv.visitJumpInsn(GOTO, l5);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Throwable"});
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 2);
mv.visitLdcInsn("Level Data Unobtainable");
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/crash/CrashReportCategory", "addCrashSectionThrowable", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
mv.visitLabel(l5);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ARETURN);
mv.visitMaxs(5, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getHorizon", "()D", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "getHorizon", "()D", false);
mv.visitInsn(DRETURN);
mv.visitMaxs(2, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "sendBlockBreakProgress", "(ILnet/minecraft/util/math/BlockPos;I)V", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "eventListeners", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/world/IWorldEventListener");
mv.visitVarInsn(ASTORE, 5);
mv.visitVarInsn(ALOAD, 5);
mv.visitVarInsn(ILOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitVarInsn(ILOAD, 3);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/world/IWorldEventListener", "sendBlockBreakProgress", "(ILnet/minecraft/util/math/BlockPos;I)V", true);
mv.visitIincInsn(4, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 6);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCurrentDate", "()Ljava/util/Calendar;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getTotalWorldTime", "()J", false);
mv.visitLdcInsn(new Long(600L));
mv.visitInsn(LREM);
mv.visitInsn(LCONST_0);
mv.visitInsn(LCMP);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "calendar", "Ljava/util/Calendar;");
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/server/MinecraftServer", "getCurrentTimeMillis", "()J", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Calendar", "setTimeInMillis", "(J)V", false);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "calendar", "Ljava/util/Calendar;");
mv.visitInsn(ARETURN);
mv.visitMaxs(4, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "makeFireworks", "(DDDDDDLnet/minecraft/nbt/NBTTagCompound;)V", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(6, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(RETURN);
mv.visitMaxs(0, 14);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getScoreboard", "()Lnet/minecraft/scoreboard/Scoreboard;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldScoreboard", "Lnet/minecraft/scoreboard/Scoreboard;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "updateComparatorOutputLevel", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/block/Block;)V", null, null);
mv.visitCode();
mv.visitFieldInsn(GETSTATIC, "net/minecraft/util/EnumFacing", "VALUES", "[Lnet/minecraft/util/EnumFacing;");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 3);
mv.visitInsn(ARRAYLENGTH);
mv.visitVarInsn(ISTORE, 4);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 5);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,3, new Object[] {"[Lnet/minecraft/util/EnumFacing;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 5);
mv.visitVarInsn(ILOAD, 4);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 3);
mv.visitVarInsn(ILOAD, 5);
mv.visitInsn(AALOAD);
mv.visitVarInsn(ASTORE, 6);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "offset", "(Lnet/minecraft/util/EnumFacing;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "onNeighborChange", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 8);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "isNormalCube", "(Lnet/minecraft/block/state/IBlockState;Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 6);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "offset", "(Lnet/minecraft/util/EnumFacing;)Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 7);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ASTORE, 8);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "getWeakChanges", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;)Z", false);
mv.visitJumpInsn(IFEQ, l2);
mv.visitVarInsn(ALOAD, 8);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "getBlock", "()Lnet/minecraft/block/Block;", true);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 7);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/Block", "onNeighborChange", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/math/BlockPos;)V", false);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(5, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,3, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 9);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getDifficultyForLocation", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/DifficultyInstance;", null, null);
mv.visitCode();
mv.visitInsn(LCONST_0);
mv.visitVarInsn(LSTORE, 2);
mv.visitInsn(FCONST_0);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isBlockLoaded", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFEQ, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getCurrentMoonPhaseFactor", "()F", false);
mv.visitVarInsn(FSTORE, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getInhabitedTime", "()J", false);
mv.visitVarInsn(LSTORE, 2);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.LONG, Opcodes.FLOAT}, 0, null);
mv.visitTypeInsn(NEW, "net/minecraft/world/DifficultyInstance");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getDifficulty", "()Lnet/minecraft/world/EnumDifficulty;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldTime", "()J", false);
mv.visitVarInsn(LLOAD, 2);
mv.visitVarInsn(FLOAD, 4);
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/DifficultyInstance", "<init>", "(Lnet/minecraft/world/EnumDifficulty;JJF)V", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(8, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getDifficulty", "()Lnet/minecraft/world/EnumDifficulty;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getWorldInfo", "()Lnet/minecraft/world/storage/WorldInfo;", false);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/WorldInfo", "getDifficulty", "()Lnet/minecraft/world/EnumDifficulty;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getSkylightSubtracted", "()I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "skylightSubtracted", "I");
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setSkylightSubtracted", "(I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "skylightSubtracted", "I");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLastLightningBolt", "()I", null, null);
{
av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lastLightningBolt", "I");
mv.visitInsn(IRETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "setLastLightningBolt", "(I)V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ILOAD, 1);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "lastLightningBolt", "I");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getVillageCollection", "()Lnet/minecraft/village/VillageCollection;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "villageCollection", "Lnet/minecraft/village/VillageCollection;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getWorldBorder", "()Lnet/minecraft/world/border/WorldBorder;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "worldBorder", "Lnet/minecraft/world/border/WorldBorder;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isSpawnChunk", "(II)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getSpawnPoint", "()Lnet/minecraft/util/math/BlockPos;", false);
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ILOAD, 1);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(IMUL);
mv.visitIntInsn(BIPUSH, 8);
mv.visitInsn(IADD);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getX", "()I", false);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 4);
mv.visitVarInsn(ILOAD, 2);
mv.visitIntInsn(BIPUSH, 16);
mv.visitInsn(IMUL);
mv.visitIntInsn(BIPUSH, 8);
mv.visitInsn(IADD);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/math/BlockPos", "getZ", "()I", false);
mv.visitInsn(ISUB);
mv.visitVarInsn(ISTORE, 5);
mv.visitIntInsn(SIPUSH, 128);
mv.visitVarInsn(ISTORE, 6);
mv.visitVarInsn(ILOAD, 4);
mv.visitIntInsn(BIPUSH, -128);
Label l0 = new Label();
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 4);
mv.visitIntInsn(SIPUSH, 128);
mv.visitJumpInsn(IF_ICMPGT, l0);
mv.visitVarInsn(ILOAD, 5);
mv.visitIntInsn(BIPUSH, -128);
mv.visitJumpInsn(IF_ICMPLT, l0);
mv.visitVarInsn(ILOAD, 5);
mv.visitIntInsn(SIPUSH, 128);
mv.visitJumpInsn(IF_ICMPGT, l0);
mv.visitInsn(ICONST_1);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_FULL, 7, new Object[] {"net/minecraft/world/World", Opcodes.INTEGER, Opcodes.INTEGER, "net/minecraft/util/math/BlockPos", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[] {});
mv.visitInsn(ICONST_0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 7);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isSideSolid", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitInsn(ICONST_0);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isSideSolid", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;Z)Z", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "isSideSolid", "(Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;Z)Z", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isValid", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ASTORE, 4);
mv.visitVarInsn(ALOAD, 4);
Label l1 = new Label();
mv.visitJumpInsn(IFNULL, l1);
mv.visitVarInsn(ALOAD, 4);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "isEmpty", "()Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"net/minecraft/world/chunk/Chunk"}, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getBlockState", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/block/state/IBlockState;", false);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/state/IBlockState", "isSideSolid", "(Lnet/minecraft/world/IBlockAccess;Lnet/minecraft/util/math/BlockPos;Lnet/minecraft/util/EnumFacing;)Z", true);
mv.visitInsn(IRETURN);
mv.visitMaxs(4, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPersistentChunks", "()Lcom/google/common/collect/ImmutableSetMultimap;", "()Lcom/google/common/collect/ImmutableSetMultimap<Lnet/minecraft/util/math/ChunkPos;Lnet/minecraftforge/common/ForgeChunkManager$Ticket;>;", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeChunkManager", "getPersistentChunksFor", "(Lnet/minecraft/world/World;)Lcom/google/common/collect/ImmutableSetMultimap;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPersistentChunkIterable", "(Ljava/util/Iterator;)Ljava/util/Iterator;", "(Ljava/util/Iterator<Lnet/minecraft/world/chunk/Chunk;>;)Ljava/util/Iterator<Lnet/minecraft/world/chunk/Chunk;>;", null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeChunkManager", "getPersistentChunksIterableFor", "(Lnet/minecraft/world/World;Ljava/util/Iterator;)Ljava/util/Iterator;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getBlockLightOpacity", "(Lnet/minecraft/util/math/BlockPos;)I", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "isValid", "(Lnet/minecraft/util/math/BlockPos;)Z", false);
Label l0 = new Label();
mv.visitJumpInsn(IFNE, l0);
mv.visitInsn(ICONST_0);
mv.visitInsn(IRETURN);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "getChunkFromBlockCoords", "(Lnet/minecraft/util/math/BlockPos;)Lnet/minecraft/world/chunk/Chunk;", false);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getBlockLightOpacity", "(Lnet/minecraft/util/math/BlockPos;)I", false);
mv.visitInsn(IRETURN);
mv.visitMaxs(2, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "countEntities", "(Lnet/minecraft/entity/EnumCreatureType;Z)I", null, null);
mv.visitCode();
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 3);
mv.visitInsn(ICONST_0);
mv.visitVarInsn(ISTORE, 4);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
mv.visitVarInsn(ILOAD, 4);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
Label l1 = new Label();
mv.visitJumpInsn(IF_ICMPGE, l1);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "loadedEntityList", "Ljava/util/List;");
mv.visitVarInsn(ILOAD, 4);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/entity/Entity");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ILOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/entity/Entity", "isCreatureType", "(Lnet/minecraft/entity/EnumCreatureType;Z)Z", false);
Label l2 = new Label();
mv.visitJumpInsn(IFEQ, l2);
mv.visitIincInsn(3, 1);
mv.visitLabel(l2);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitIincInsn(4, 1);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitVarInsn(ILOAD, 3);
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 5);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC + ACC_DEPRECATED, "markTileEntitiesInChunkForRemoval", "(Lnet/minecraft/world/chunk/Chunk;)V", null, null);
{
av0 = mv.visitAnnotation("Ljava/lang/Deprecated;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/Chunk", "getTileEntityMap", "()Ljava/util/Map;", false);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "values", "()Ljava/util/Collection;", true);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
mv.visitVarInsn(ASTORE, 2);
Label l0 = new Label();
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/util/Iterator"}, 0, null);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
Label l1 = new Label();
mv.visitJumpInsn(IFEQ, l1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
mv.visitTypeInsn(CHECKCAST, "net/minecraft/tileentity/TileEntity");
mv.visitVarInsn(ASTORE, 3);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 3);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/World", "markTileEntityForRemoval", "(Lnet/minecraft/tileentity/TileEntity;)V", false);
mv.visitJumpInsn(GOTO, l0);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(2, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PROTECTED, "initCapabilities", "()V", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/WorldProvider", "initCapabilities", "()Lnet/minecraftforge/common/capabilities/ICapabilityProvider;", false);
mv.visitVarInsn(ASTORE, 1);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 1);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCapabilities", "(Lnet/minecraft/world/World;Lnet/minecraftforge/common/capabilities/ICapabilityProvider;)Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "perWorldStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitLdcInsn(Type.getType("Lnet/minecraftforge/common/util/WorldCapabilityData;"));
mv.visitLdcInsn("capabilities");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/MapStorage", "getOrLoadData", "(Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/storage/WorldSavedData;", false);
mv.visitTypeInsn(CHECKCAST, "net/minecraftforge/common/util/WorldCapabilityData");
mv.visitVarInsn(ASTORE, 2);
mv.visitVarInsn(ALOAD, 2);
Label l0 = new Label();
mv.visitJumpInsn(IFNONNULL, l0);
mv.visitVarInsn(ALOAD, 0);
mv.visitTypeInsn(NEW, "net/minecraftforge/common/util/WorldCapabilityData");
mv.visitInsn(DUP);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/common/util/WorldCapabilityData", "<init>", "(Lnet/minecraftforge/common/util/INBTSerializable;)V", false);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "perWorldStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
mv.visitFieldInsn(GETFIELD, "net/minecraftforge/common/util/WorldCapabilityData", "mapName", "Ljava/lang/String;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/storage/MapStorage", "setData", "(Ljava/lang/String;Lnet/minecraft/world/storage/WorldSavedData;)V", false);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_APPEND,2, new Object[] {"net/minecraftforge/common/capabilities/ICapabilityProvider", "net/minecraftforge/common/util/WorldCapabilityData"}, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitVarInsn(ALOAD, 2);
mv.visitFieldInsn(PUTFIELD, "net/minecraft/world/World", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "provider", "Lnet/minecraft/world/WorldProvider;");
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/util/WorldCapabilityData", "setCapabilities", "(Lnet/minecraft/world/WorldProvider;Lnet/minecraftforge/common/util/INBTSerializable;)V", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitInsn(RETURN);
mv.visitMaxs(4, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "hasCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lnet/minecraft/util/EnumFacing;)Z", "(Lnet/minecraftforge/common/capabilities/Capability<*>;Lnet/minecraft/util/EnumFacing;)Z", null);
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
Label l0 = new Label();
mv.visitJumpInsn(IFNONNULL, l0);
mv.visitInsn(ICONST_0);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/capabilities/CapabilityDispatcher", "hasCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lnet/minecraft/util/EnumFacing;)Z", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {Opcodes.INTEGER});
mv.visitInsn(IRETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lnet/minecraft/util/EnumFacing;)Ljava/lang/Object;", "<T:Ljava/lang/Object;>(Lnet/minecraftforge/common/capabilities/Capability<TT;>;Lnet/minecraft/util/EnumFacing;)TT;", null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
{
av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
Label l0 = new Label();
mv.visitJumpInsn(IFNONNULL, l0);
mv.visitInsn(ACONST_NULL);
Label l1 = new Label();
mv.visitJumpInsn(GOTO, l1);
mv.visitLabel(l0);
mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
mv.visitVarInsn(ALOAD, 1);
mv.visitVarInsn(ALOAD, 2);
mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/capabilities/CapabilityDispatcher", "getCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lnet/minecraft/util/EnumFacing;)Ljava/lang/Object;", false);
mv.visitLabel(l1);
mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Object"});
mv.visitInsn(ARETURN);
mv.visitMaxs(3, 3);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getPerWorldStorage", "()Lnet/minecraft/world/storage/MapStorage;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "perWorldStorage", "Lnet/minecraft/world/storage/MapStorage;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "sendPacketToServer", "(Lnet/minecraft/network/Packet;)V", "(Lnet/minecraft/network/Packet<*>;)V", null);
mv.visitCode();
mv.visitTypeInsn(NEW, "java/lang/UnsupportedOperationException");
mv.visitInsn(DUP);
mv.visitLdcInsn("Can't send packets to server unless you're on the client.");
mv.visitMethodInsn(INVOKESPECIAL, "java/lang/UnsupportedOperationException", "<init>", "(Ljava/lang/String;)V", false);
mv.visitInsn(ATHROW);
mv.visitMaxs(3, 2);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "getLootTableManager", "()Lnet/minecraft/world/storage/loot/LootTableManager;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitFieldInsn(GETFIELD, "net/minecraft/world/World", "lootTable", "Lnet/minecraft/world/storage/loot/LootTableManager;");
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PUBLIC, "findNearestStructure", "(Ljava/lang/String;Lnet/minecraft/util/math/BlockPos;Z)Lnet/minecraft/util/math/BlockPos;", null, null);
{
av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
av0.visitEnd();
}
mv.visitCode();
mv.visitInsn(ACONST_NULL);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 4);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC + ACC_SYNTHETIC, "lambda$updateEntities$1", "(Lnet/minecraft/tileentity/TileEntity;)Ljava/lang/String;", null, null);
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/tileentity/TileEntity", "getKey", "(Ljava/lang/Class;)Lnet/minecraft/util/ResourceLocation;", false);
mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC + ACC_SYNTHETIC, "lambda$getBiomeForCoordsBody$0", "(Lnet/minecraft/util/math/BlockPos;)Ljava/lang/String;", null, new String[] { "java/lang/Exception" });
mv.visitCode();
mv.visitVarInsn(ALOAD, 0);
mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/crash/CrashReportCategory", "getCoordinateInfo", "(Lnet/minecraft/util/math/BlockPos;)Ljava/lang/String;", false);
mv.visitInsn(ARETURN);
mv.visitMaxs(1, 1);
mv.visitEnd();
}
{
mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
mv.visitCode();
mv.visitLdcInsn(new Double("2.0"));
mv.visitFieldInsn(PUTSTATIC, "net/minecraft/world/World", "MAX_ENTITY_RADIUS", "D");
mv.visitInsn(RETURN);
mv.visitMaxs(2, 0);
mv.visitEnd();
}
cw.visitEnd();

return cw.toByteArray();
}
}
