buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.12.2.000"
group = "com.fantasticsource.luminous" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Luminous"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

task coreJar(type: Jar) {
    from(sourceSets.main.output) {
        include "com/fantasticsource/luminous/asm/**"
    }
    setBaseName archivesBaseName + "Core"
    manifest {
        attributes([
                "FMLCorePlugin" : "com.fantasticsource.luminous.asm.LuminousCore",
                "Maven-Artifact": "${project.group}:${archivesBaseName}Core:${project.version}"
        ])
    }
}

jar {
    from(coreJar.archivePath.absolutePath) {}
    manifest {
        attributes([
                "ContainedDeps" : "${archivesBaseName}Core-${project.version}.jar",
                "Maven-Artifact": "${project.group}:${archivesBaseName}:${project.version}"
        ])
    }
    dependsOn coreJar
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    mappings = "snapshot_20171003"
    runDir = "run"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from "src/main"
    classifier "deobf"
}

artifacts {
    archives deobfJar
}
