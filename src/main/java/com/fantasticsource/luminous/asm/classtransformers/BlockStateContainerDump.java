package com.fantasticsource.luminous.asm.classtransformers;

import org.objectweb.asm.*;

public class BlockStateContainerDump implements Opcodes
{
    public static byte[] dump()
    {
        ClassWriter cw = new ClassWriter(0);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(52, ACC_PUBLIC + ACC_SUPER, "net/minecraft/block/state/BlockStateContainer", null, "java/lang/Object", null);

        cw.visitSource("BlockStateContainer.java", null);

        cw.visitInnerClass("net/minecraft/block/state/BlockStateContainer$Builder", "net/minecraft/block/state/BlockStateContainer", "Builder", ACC_PUBLIC + ACC_STATIC);

        cw.visitInnerClass("net/minecraft/block/state/BlockStateContainer$StateImplementation", "net/minecraft/block/state/BlockStateContainer", "a", ACC_PUBLIC + ACC_STATIC);

        cw.visitInnerClass("net/minecraft/block/state/BlockStateContainer$1", null, null, ACC_STATIC);

        cw.visitInnerClass("com/google/common/base/MoreObjects$ToStringHelper", "com/google/common/base/MoreObjects", "ToStringHelper", ACC_PUBLIC + ACC_FINAL + ACC_STATIC);

        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "field_185921_a", "Ljava/util/regex/Pattern;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL + ACC_STATIC, "field_177626_b", "Lcom/google/common/base/Function;", "Lcom/google/common/base/Function<Lnet/minecraft/block/properties/IProperty<*>;Ljava/lang/String;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_177627_c", "Lnet/minecraft/block/Block;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;", "Lcom/google/common/collect/ImmutableSortedMap<Ljava/lang/String;Lnet/minecraft/block/properties/IProperty<*>;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_177625_e", "Lcom/google/common/collect/ImmutableList;", "Lcom/google/common/collect/ImmutableList<Lnet/minecraft/block/state/IBlockState;>;", null);
            fv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "<init>", "(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;)V", "(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty<*>;)V", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(62, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/block/state/BlockStateContainer", "<init>", "(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;Lcom/google/common/collect/ImmutableMap;)V", false);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(63, l1);
            mv.visitInsn(RETURN);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l2, 0);
            mv.visitLocalVariable("blockIn", "Lnet/minecraft/block/Block;", null, l0, l2, 1);
            mv.visitLocalVariable("properties", "[Lnet/minecraft/block/properties/IProperty;", "[Lnet/minecraft/block/properties/IProperty<*>;", l0, l2, 2);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "createState", "(Lnet/minecraft/block/Block;Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableMap;)Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;", "(Lnet/minecraft/block/Block;Lcom/google/common/collect/ImmutableMap<Lnet/minecraft/block/properties/IProperty<*>;Ljava/lang/Comparable<*>;>;Lcom/google/common/collect/ImmutableMap<Lnet/minecraftforge/common/property/IUnlistedProperty<*>;Ljava/util/Optional<*>;>;)Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;", null);
            {
                av0 = mv.visitParameterAnnotation(2, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(67, l0);
            mv.visitTypeInsn(NEW, "net/minecraft/block/state/BlockStateContainer$StateImplementation");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/block/state/BlockStateContainer$StateImplementation", "<init>", "(Lnet/minecraft/block/Block;Lcom/google/common/collect/ImmutableMap;)V", false);
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitLocalVariable("block", "Lnet/minecraft/block/Block;", null, l0, l1, 1);
            mv.visitLocalVariable("properties", "Lcom/google/common/collect/ImmutableMap;", "Lcom/google/common/collect/ImmutableMap<Lnet/minecraft/block/properties/IProperty<*>;Ljava/lang/Comparable<*>;>;", l0, l1, 2);
            mv.visitLocalVariable("unlistedProperties", "Lcom/google/common/collect/ImmutableMap;", "Lcom/google/common/collect/ImmutableMap<Lnet/minecraftforge/common/property/IUnlistedProperty<*>;Ljava/util/Optional<*>;>;", l0, l1, 3);
            mv.visitMaxs(4, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "<init>", "(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty;Lcom/google/common/collect/ImmutableMap;)V", "(Lnet/minecraft/block/Block;[Lnet/minecraft/block/properties/IProperty<*>;Lcom/google/common/collect/ImmutableMap<Lnet/minecraftforge/common/property/IUnlistedProperty<*>;Ljava/util/Optional<*>;>;)V", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(71, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(72, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177627_c", "Lnet/minecraft/block/Block;");
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitLineNumber(73, l2);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Maps", "newHashMap", "()Ljava/util/HashMap;", false);
            mv.visitVarInsn(ASTORE, 4);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(75, l3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 7);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"net/minecraft/block/state/BlockStateContainer", "net/minecraft/block/Block", "[Lnet/minecraft/block/properties/IProperty;", "com/google/common/collect/ImmutableMap", "java/util/Map", "[Lnet/minecraft/block/properties/IProperty;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 6);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 8);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitLineNumber(77, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/block/state/BlockStateContainer", "func_185919_a", "(Lnet/minecraft/block/Block;Lnet/minecraft/block/properties/IProperty;)Ljava/lang/String;", false);
            mv.visitInsn(POP);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(78, l7);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/properties/IProperty", "func_177701_a", "()Ljava/lang/String;", true);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLineNumber(75, l8);
            mv.visitIincInsn(7, 1);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitLineNumber(81, l5);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/ImmutableSortedMap", "copyOf", "(Ljava/util/Map;)Lcom/google/common/collect/ImmutableSortedMap;", false);
            mv.visitFieldInsn(PUTFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(82, l9);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Maps", "newLinkedHashMap", "()Ljava/util/LinkedHashMap;", false);
            mv.visitVarInsn(ASTORE, 5);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLineNumber(83, l10);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 6);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitLineNumber(85, l11);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/block/state/BlockStateContainer", "func_177620_e", "()Ljava/util/List;", false);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/math/Cartesian", "func_179321_a", "(Ljava/lang/Iterable;)Ljava/lang/Iterable;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/lang/Iterable", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 7);
            Label l12 = new Label();
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/util/Map", "java/util/List", "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l13 = new Label();
            mv.visitJumpInsn(IFEQ, l13);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/util/List");
            mv.visitVarInsn(ASTORE, 8);
            Label l14 = new Label();
            mv.visitLabel(l14);
            mv.visitLineNumber(87, l14);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSortedMap", "values", "()Lcom/google/common/collect/ImmutableCollection;", false);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/MapPopulator", "func_179400_b", "(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map;", false);
            mv.visitVarInsn(ASTORE, 9);
            Label l15 = new Label();
            mv.visitLabel(l15);
            mv.visitLineNumber(88, l15);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/ImmutableMap", "copyOf", "(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;", false);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/state/BlockStateContainer", "createState", "(Lnet/minecraft/block/Block;Lcom/google/common/collect/ImmutableMap;Lcom/google/common/collect/ImmutableMap;)Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;", false);
            mv.visitVarInsn(ASTORE, 10);
            Label l16 = new Label();
            mv.visitLabel(l16);
            mv.visitLineNumber(89, l16);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            Label l17 = new Label();
            mv.visitLabel(l17);
            mv.visitLineNumber(90, l17);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            Label l18 = new Label();
            mv.visitLabel(l18);
            mv.visitLineNumber(91, l18);
            mv.visitJumpInsn(GOTO, l12);
            mv.visitLabel(l13);
            mv.visitLineNumber(93, l13);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 7);
            Label l19 = new Label();
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l20 = new Label();
            mv.visitJumpInsn(IFEQ, l20);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "net/minecraft/block/state/BlockStateContainer$StateImplementation");
            mv.visitVarInsn(ASTORE, 8);
            Label l21 = new Label();
            mv.visitLabel(l21);
            mv.visitLineNumber(95, l21);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/block/state/BlockStateContainer$StateImplementation", "func_177235_a", "(Ljava/util/Map;)V", false);
            Label l22 = new Label();
            mv.visitLabel(l22);
            mv.visitLineNumber(96, l22);
            mv.visitJumpInsn(GOTO, l19);
            mv.visitLabel(l20);
            mv.visitLineNumber(98, l20);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/ImmutableList", "copyOf", "(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;", false);
            mv.visitFieldInsn(PUTFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177625_e", "Lcom/google/common/collect/ImmutableList;");
            Label l23 = new Label();
            mv.visitLabel(l23);
            mv.visitLineNumber(99, l23);
            mv.visitInsn(RETURN);
            Label l24 = new Label();
            mv.visitLabel(l24);
            mv.visitLocalVariable("iproperty", "Lnet/minecraft/block/properties/IProperty;", "Lnet/minecraft/block/properties/IProperty<*>;", l6, l8, 8);
            mv.visitLocalVariable("map1", "Ljava/util/Map;", "Ljava/util/Map<Lnet/minecraft/block/properties/IProperty<*>;Ljava/lang/Comparable<*>;>;", l15, l18, 9);
            mv.visitLocalVariable("blockstatecontainer$stateimplementation", "Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;", null, l16, l18, 10);
            mv.visitLocalVariable("list", "Ljava/util/List;", "Ljava/util/List<Ljava/lang/Comparable<*>;>;", l14, l18, 8);
            mv.visitLocalVariable("blockstatecontainer$stateimplementation1", "Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;", null, l21, l22, 8);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l24, 0);
            mv.visitLocalVariable("blockIn", "Lnet/minecraft/block/Block;", null, l0, l24, 1);
            mv.visitLocalVariable("properties", "[Lnet/minecraft/block/properties/IProperty;", "[Lnet/minecraft/block/properties/IProperty<*>;", l0, l24, 2);
            mv.visitLocalVariable("unlistedProperties", "Lcom/google/common/collect/ImmutableMap;", "Lcom/google/common/collect/ImmutableMap<Lnet/minecraftforge/common/property/IUnlistedProperty<*>;Ljava/util/Optional<*>;>;", l0, l24, 3);
            mv.visitLocalVariable("map", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/String;Lnet/minecraft/block/properties/IProperty<*>;>;", l3, l24, 4);
            mv.visitLocalVariable("map2", "Ljava/util/Map;", "Ljava/util/Map<Ljava/util/Map<Lnet/minecraft/block/properties/IProperty<*>;Ljava/lang/Comparable<*>;>;Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;>;", l10, l24, 5);
            mv.visitLocalVariable("list1", "Ljava/util/List;", "Ljava/util/List<Lnet/minecraft/block/state/BlockStateContainer$StateImplementation;>;", l11, l24, 6);
            mv.visitMaxs(4, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, "func_185919_a", "(Lnet/minecraft/block/Block;Lnet/minecraft/block/properties/IProperty;)Ljava/lang/String;", "<T::Ljava/lang/Comparable<TT;>;>(Lnet/minecraft/block/Block;Lnet/minecraft/block/properties/IProperty<TT;>;)Ljava/lang/String;", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(103, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/properties/IProperty", "func_177701_a", "()Ljava/lang/String;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(105, l1);
            mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/state/BlockStateContainer", "field_185921_a", "Ljava/util/regex/Pattern;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Pattern", "matcher", "(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Matcher", "matches", "()Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(107, l3);
            mv.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
            mv.visitInsn(DUP);
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitLdcInsn("Block: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn(" has invalidly named property: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l2);
            mv.visitLineNumber(111, l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/String"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/properties/IProperty", "func_177700_c", "()Ljava/util/Collection;", true);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 3);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Comparable");
            mv.visitVarInsn(ASTORE, 4);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitLineNumber(113, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/properties/IProperty", "func_177702_a", "(Ljava/lang/Comparable;)Ljava/lang/String;", true);
            mv.visitVarInsn(ASTORE, 5);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(115, l7);
            mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/state/BlockStateContainer", "field_185921_a", "Ljava/util/regex/Pattern;");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Pattern", "matcher", "(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/regex/Matcher", "matches", "()Z", false);
            Label l8 = new Label();
            mv.visitJumpInsn(IFNE, l8);
            Label l9 = new Label();
            mv.visitLabel(l9);
            mv.visitLineNumber(117, l9);
            mv.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
            mv.visitInsn(DUP);
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitLdcInsn("Block: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn(" has property: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitLdcInsn(" with invalidly named value: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l8);
            mv.visitLineNumber(119, l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitLineNumber(121, l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ARETURN);
            Label l10 = new Label();
            mv.visitLabel(l10);
            mv.visitLocalVariable("s1", "Ljava/lang/String;", null, l7, l8, 5);
            mv.visitLocalVariable("t", "Ljava/lang/Comparable;", "TT;", l6, l8, 4);
            mv.visitLocalVariable("block", "Lnet/minecraft/block/Block;", null, l0, l10, 0);
            mv.visitLocalVariable("property", "Lnet/minecraft/block/properties/IProperty;", "Lnet/minecraft/block/properties/IProperty<TT;>;", l0, l10, 1);
            mv.visitLocalVariable("s", "Ljava/lang/String;", null, l1, l10, 2);
            mv.visitMaxs(4, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_177619_a", "()Lcom/google/common/collect/ImmutableList;", "()Lcom/google/common/collect/ImmutableList<Lnet/minecraft/block/state/IBlockState;>;", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(127, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177625_e", "Lcom/google/common/collect/ImmutableList;");
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_177620_e", "()Ljava/util/List;", "()Ljava/util/List<Ljava/lang/Iterable<Ljava/lang/Comparable<*>;>;>;", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(132, l0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 1);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(133, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSortedMap", "values", "()Lcom/google/common/collect/ImmutableCollection;", false);
            mv.visitVarInsn(ASTORE, 2);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitLineNumber(134, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableCollection", "iterator", "()Lcom/google/common/collect/UnmodifiableIterator;", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitLineNumber(136, l3);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/util/List", "com/google/common/collect/ImmutableCollection", "com/google/common/collect/UnmodifiableIterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/UnmodifiableIterator", "hasNext", "()Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitLineNumber(138, l5);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/UnmodifiableIterator", "next", "()Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "net/minecraft/block/properties/IProperty");
            mv.visitVarInsn(ASTORE, 4);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitLineNumber(139, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/block/properties/IProperty", "func_177700_c", "()Ljava/util/Collection;", true);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitLineNumber(140, l7);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitLineNumber(142, l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ARETURN);
            Label l8 = new Label();
            mv.visitLabel(l8);
            mv.visitLocalVariable("iproperty", "Lnet/minecraft/block/properties/IProperty;", "Lnet/minecraft/block/properties/IProperty<*>;", l6, l7, 4);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l8, 0);
            mv.visitLocalVariable("list", "Ljava/util/List;", "Ljava/util/List<Ljava/lang/Iterable<Ljava/lang/Comparable<*>;>;>;", l1, l8, 1);
            mv.visitLocalVariable("immutablecollection", "Lcom/google/common/collect/ImmutableCollection;", "Lcom/google/common/collect/ImmutableCollection<Lnet/minecraft/block/properties/IProperty<*>;>;", l2, l8, 2);
            mv.visitLocalVariable("unmodifiableiterator", "Lcom/google/common/collect/UnmodifiableIterator;", null, l3, l8, 3);
            mv.visitMaxs(2, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_177621_b", "()Lnet/minecraft/block/state/IBlockState;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(147, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177625_e", "Lcom/google/common/collect/ImmutableList;");
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableList", "get", "(I)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "net/minecraft/block/state/IBlockState");
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_177622_c", "()Lnet/minecraft/block/Block;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(152, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177627_c", "Lnet/minecraft/block/Block;");
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_177623_d", "()Ljava/util/Collection;", "()Ljava/util/Collection<Lnet/minecraft/block/properties/IProperty<*>;>;", null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(157, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSortedMap", "values", "()Lcom/google/common/collect/ImmutableCollection;", false);
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "toString", "()Ljava/lang/String;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(162, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/base/MoreObjects", "toStringHelper", "(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;", false);
            mv.visitLdcInsn("block");
            mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/Block", "field_149771_c", "Lnet/minecraft/util/registry/RegistryNamespacedDefaultedByKey;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177627_c", "Lnet/minecraft/block/Block;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/util/registry/RegistryNamespacedDefaultedByKey", "func_177774_c", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/base/MoreObjects$ToStringHelper", "add", "(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;", false);
            mv.visitLdcInsn("properties");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSortedMap", "values", "()Lcom/google/common/collect/ImmutableCollection;", false);
            mv.visitFieldInsn(GETSTATIC, "net/minecraft/block/state/BlockStateContainer", "field_177626_b", "Lcom/google/common/base/Function;");
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Iterables", "transform", "(Ljava/lang/Iterable;Lcom/google/common/base/Function;)Ljava/lang/Iterable;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/base/MoreObjects$ToStringHelper", "add", "(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/base/MoreObjects$ToStringHelper", "toString", "()Ljava/lang/String;", false);
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitMaxs(4, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_185920_a", "(Ljava/lang/String;)Lnet/minecraft/block/properties/IProperty;", "(Ljava/lang/String;)Lnet/minecraft/block/properties/IProperty<*>;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(168, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "net/minecraft/block/state/BlockStateContainer", "field_177624_d", "Lcom/google/common/collect/ImmutableSortedMap;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSortedMap", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "net/minecraft/block/properties/IProperty");
            mv.visitInsn(ARETURN);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLocalVariable("this", "Lnet/minecraft/block/state/BlockStateContainer;", null, l0, l1, 0);
            mv.visitLocalVariable("propertyName", "Ljava/lang/String;", null, l0, l1, 1);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitLineNumber(47, l0);
            mv.visitLdcInsn("^[a-z0-9_]+$");
            mv.visitMethodInsn(INVOKESTATIC, "java/util/regex/Pattern", "compile", "(Ljava/lang/String;)Ljava/util/regex/Pattern;", false);
            mv.visitFieldInsn(PUTSTATIC, "net/minecraft/block/state/BlockStateContainer", "field_185921_a", "Ljava/util/regex/Pattern;");
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitLineNumber(48, l1);
            mv.visitTypeInsn(NEW, "net/minecraft/block/state/BlockStateContainer$1");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/block/state/BlockStateContainer$1", "<init>", "()V", false);
            mv.visitFieldInsn(PUTSTATIC, "net/minecraft/block/state/BlockStateContainer", "field_177626_b", "Lcom/google/common/base/Function;");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 0);
            mv.visitEnd();
        }
        cw.visitEnd();

        return cw.toByteArray();
    }
}
