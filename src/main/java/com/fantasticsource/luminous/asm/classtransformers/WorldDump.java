package com.fantasticsource.luminous.asm.classtransformers;

import org.objectweb.asm.*;

public class WorldDump implements Opcodes
{
    public static byte[] dump()
    {
        ClassWriter cw = new ClassWriter(0);
        FieldVisitor fv;
        MethodVisitor mv;
        AnnotationVisitor av0;

        cw.visit(52, ACC_PUBLIC + ACC_SUPER + ACC_ABSTRACT, "amu", null, "java/lang/Object", new String[]{"amy", "net/minecraftforge/common/capabilities/ICapabilityProvider"});

        cw.visitInnerClass("amu$4", null, null, 0);

        cw.visitInnerClass("amu$3", null, null, 0);

        cw.visitInnerClass("amu$2", null, null, 0);

        cw.visitInnerClass("amu$1", null, null, 0);

        cw.visitInnerClass("et$b", "et", "b", ACC_PUBLIC + ACC_FINAL + ACC_STATIC);

        cw.visitInnerClass("et$a", "et", "a", ACC_PUBLIC + ACC_STATIC);

        cw.visitInnerClass("net/minecraftforge/common/ForgeChunkManager$Ticket", "net/minecraftforge/common/ForgeChunkManager", "Ticket", ACC_PUBLIC + ACC_STATIC);

        cw.visitInnerClass("net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "net/minecraftforge/event/world/BlockEvent", "NeighborNotifyEvent", ACC_PUBLIC + ACC_STATIC);

        cw.visitInnerClass("bhc$a", "bhc", "a", ACC_PUBLIC + ACC_FINAL + ACC_STATIC + ACC_ENUM);

        cw.visitInnerClass("axw$a", "axw", "a", ACC_PUBLIC + ACC_FINAL + ACC_STATIC + ACC_ENUM);

        cw.visitInnerClass("java/lang/invoke/MethodHandles$Lookup", "java/lang/invoke/MethodHandles", "Lookup", ACC_PUBLIC + ACC_FINAL + ACC_STATIC);

        {
            fv = cw.visitField(ACC_PUBLIC + ACC_STATIC, "MAX_ENTITY_RADIUS", "D", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "field_181546_a", "I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72999_e", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_72996_f", "Ljava/util/List;", "Ljava/util/List<Lvg;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "field_72997_g", "Ljava/util/List;", "Ljava/util/List<Lvg;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_147482_g", "Ljava/util/List;", "Ljava/util/List<Lavj;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_175730_i", "Ljava/util/List;", "Ljava/util/List<Lavj;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_147484_a", "Ljava/util/List;", "Ljava/util/List<Lavj;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_147483_b", "Ljava/util/List;", "Ljava/util/List<Lavj;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_73010_i", "Ljava/util/List;", "Ljava/util/List<Laed;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_73007_j", "Ljava/util/List;", "Ljava/util/List<Lvg;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "field_175729_l", "Lrg;", "Lrg<Lvg;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_73001_c", "J", null, new Long(16777215L));
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "field_73008_k", "I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_73005_l", "I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "field_73006_m", "I", null, new Integer(1013904223));
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "field_73003_n", "F", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "field_73004_o", "F", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "field_73018_p", "F", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "field_73017_q", "F", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "field_73016_r", "I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_73012_v", "Ljava/util/Random;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_73011_w", "Laym;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_184152_t", "Lzf;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_73021_x", "Ljava/util/List;", "Ljava/util/List<Lamw;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_73020_y", "Laxr;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED + ACC_FINAL, "field_73019_z", "Lbfe;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72986_A", "Lbfd;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72987_B", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72988_C", "Lbfm;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "field_72982_D", "Lzq;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_184151_B", "Lbfv;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_191951_C", "Lns;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_193036_D", "Lnt;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_72984_F", "Lrl;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_83016_L", "Ljava/util/Calendar;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_96442_D", "Lbhk;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC + ACC_FINAL, "field_72995_K", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72985_G", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "field_72992_H", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "field_147481_N", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE + ACC_FINAL, "field_175728_M", "Laxn;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "field_72994_J", "[I", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "restoringBlockSnapshots", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "captureBlockSnapshots", "Z", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PUBLIC, "capturedBlockSnapshots", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Lnet/minecraftforge/common/util/BlockSnapshot;>;", null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PRIVATE, "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;", null, null);
            fv.visitEnd();
        }
        {
            fv = cw.visitField(ACC_PROTECTED, "perWorldStorage", "Lbfm;", null, null);
            fv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "<init>", "(Lbfe;Lbfd;Laym;Lrl;Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_181546_a", "I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_175730_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73007_j", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "rg");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "rg", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_175729_l", "Lrg;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(new Long(16777215L));
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73001_c", "J");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "java/util/Random");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "()I", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73005_l", "I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(new Integer(1013904223));
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73006_m", "I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "java/util/Random");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/Random", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "zf");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "zf", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_184152_t", "Lzf;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitLdcInsn(new Integer(32768));
            mv.visitIntInsn(NEWARRAY, T_INT);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_0);
            mv.visitFieldInsn(PUTFIELD, "amu", "restoringBlockSnapshots", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_0);
            mv.visitFieldInsn(PUTFIELD, "amu", "captureBlockSnapshots", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "java/util/ArrayList");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_1);
            mv.visitTypeInsn(ANEWARRAY, "amw");
            mv.visitInsn(DUP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_184152_t", "Lzf;");
            mv.visitInsn(AASTORE);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "([Ljava/lang/Object;)Ljava/util/ArrayList;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "java/util/Calendar", "getInstance", "()Ljava/util/Calendar;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_83016_L", "Ljava/util/Calendar;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "bhk");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "bhk", "<init>", "()V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_96442_D", "Lbhk;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72985_G", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72992_H", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73019_z", "Lbfe;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72995_K", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_177501_r", "()Laxn;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "bfm");
            mv.visitInsn(DUP);
            mv.visitInsn(ACONST_NULL);
            mv.visitMethodInsn(INVOKESPECIAL, "bfm", "<init>", "(Lbfe;)V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "perWorldStorage", "Lbfm;");
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175643_b", "()Lamu;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180494_b", "(Let;)Lanh;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getBiomeForCoords", "(Let;)Lanh;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getBiomeForCoordsBody", "(Let;)Lanh;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_177499_m", "()Lanl;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177411_a", "(Let;Lanl;)Lanh;", false);
            mv.visitLabel(l1);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "et", "axw"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitLdcInsn("Getting biome");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitLdcInsn("Coordinates of biome request");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Location");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInvokeDynamicInsn("call", "(Let;)Lnet/minecraft/crash/ICrashReportDetail;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"), new Object[]{Type.getType("()Ljava/lang/Object;"), new Handle(Opcodes.H_INVOKESTATIC, "amu", "lambda$getBiomeForCoordsBody$0", "(Let;)Ljava/lang/String;"), Type.getType("()Ljava/lang/String;")});
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_189529_a", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_177499_m", "()Lanl;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "anm", "field_76772_c", "Lanh;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "anl", "func_180300_a", "(Let;Lanh;)Lanh;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72959_q", "()Lanl;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_177499_m", "()Lanl;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED + ACC_ABSTRACT, "func_72970_h", "()Laxr;", null, null);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72963_a", "(Lamx;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76091_d", "(Z)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_73046_m", "()Lnet/minecraft/server/MinecraftServer;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72974_f", "()V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitIntInsn(BIPUSH, 64);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175652_B", "(Let;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(6, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184141_c", "(Let;)Lawt;", null, null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_181545_F", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"et"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175623_d", "(Let;)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(5, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175701_a", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_189509_E", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitIntInsn(SIPUSH, 256);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175623_d", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isAir", "(Lawt;Lamy;Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175668_a", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175668_a", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Let;I)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175663_a", "(Let;IZ)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Let;IZ)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(8, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Let;Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175663_a", "(Let;Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Let;Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(8, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Lbbg;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175663_a", "(Lbbg;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175663_a", "(Lbbg;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78897_a", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78895_b", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78896_c", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78893_d", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78894_e", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bbg", "field_78892_f", "I");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(8, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_175663_a", "(IIIIIIZ)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 5);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(SIPUSH, 256);
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ISTORE, 1);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ISTORE, 8);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 4);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ISTORE, 9);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 6);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFNE, l5);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(8, 1);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 10);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED + ACC_ABSTRACT, "func_175680_a", "(IIZ)Z", null, null);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getChunkFromBlockCoords", "(Let;)Laxw;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(4, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getChunkFromChunkCoords", "(II)Laxw;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73020_y", "Laxr;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "axr", "func_186025_d", "(II)Laxw;", true);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190526_b", "(II)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73020_y", "Laxr;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "axr", "func_191062_e", "(II)Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180501_a", "(Let;Lawt;I)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76067_t", "()Lamz;", false);
            mv.visitFieldInsn(GETSTATIC, "amz", "field_180272_g", "Lamz;");
            mv.visitJumpInsn(IF_ACMPNE, l1);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_185334_h", "()Let;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "captureBlockSnapshots", "Z");
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/util/BlockSnapshot", "getBlockSnapshot", "(Lamu;Let;I)Lnet/minecraftforge/common/util/BlockSnapshot;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", false);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"axw", "net/minecraftforge/common/util/BlockSnapshot"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getLightValue", "(Lamy;Let;)I", true);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getLightOpacity", "(Lamy;Let;)I", true);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177436_a", "(Let;Lawt;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 9);
            mv.visitVarInsn(ALOAD, 9);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNONNULL, l3);
            mv.visitVarInsn(ALOAD, 5);
            Label l4 = new Label();
            mv.visitJumpInsn(IFNULL, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capturedBlockSnapshots", "Ljava/util/ArrayList;");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "remove", "(Ljava/lang/Object;)Z", false);
            mv.visitInsn(POP);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "et", "awt", Opcodes.INTEGER, "axw", "net/minecraftforge/common/util/BlockSnapshot", "awt", Opcodes.INTEGER, Opcodes.INTEGER, "awt"}, 0, new Object[]{});
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getLightOpacity", "(Lamy;Let;)I", true);
            mv.visitVarInsn(ILOAD, 8);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPNE, l5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getLightValue", "(Lamy;Let;)I", true);
            mv.visitVarInsn(ILOAD, 7);
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ICMPEQ, l6);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("checkLight");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175664_x", "(Let;)Z", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 5);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNONNULL, l7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "markAndNotifyBlock", "(Let;Laxw;Lawt;Lawt;I)V", false);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(6, 10);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "markAndNotifyBlock", "(Let;Laxw;Lawt;Lawt;I)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_2);
            mv.visitInsn(IAND);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(IAND);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"aow"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNULL, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_150802_k", "()Z", false);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184138_a", "(Let;Lawt;Lawt;I)V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IAND);
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175722_b", "(Let;Laow;Z)V", false);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "hasComparatorInputOverride", "()Z", true);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175666_e", "(Let;Laow;)V", false);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            mv.visitJumpInsn(IFNE, l4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(IAND);
            mv.visitJumpInsn(IFNE, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190522_c", "(Let;Laow;)V", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 7);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175698_g", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150350_a", "Laow;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176223_P", "()Lawt;", false);
            mv.visitInsn(ICONST_3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180501_a", "(Let;Lawt;I)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175655_b", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isAir", "(Lawt;Lamy;Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"awt", "aow"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitIntInsn(SIPUSH, 2001);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "aow", "func_176210_f", "(Lawt;)I", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180498_a", "(ILet;I)V", false);
            mv.visitVarInsn(ILOAD, 2);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176226_b", "(Lamu;Let;Lawt;I)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150350_a", "Laow;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176223_P", "()Lawt;", false);
            mv.visitInsn(ICONST_3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180501_a", "(Let;Lawt;I)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180501_a", "(Let;Lawt;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180501_a", "(Let;Lawt;I)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184138_a", "(Let;Lawt;Lawt;I)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_184376_a", "(Lamu;Let;Lawt;Lawt;I)V", true);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(6, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175722_b", "(Let;Laow;Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76067_t", "()Lamz;", false);
            mv.visitFieldInsn(GETSTATIC, "amz", "field_180272_g", "Lamz;");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175685_c", "(Let;Laow;Z)V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72975_g", "(IIII)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_191066_m", "()Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ISTORE, 5);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitJumpInsn(IF_ICMPGT, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180500_c", "(Lana;Let;)Z", false);
            mv.visitInsn(POP);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175704_b", "(IIIIII)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(7, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175704_b", "(Let;Let;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175704_b", "(IIIIII)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(7, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175704_b", "(IIIIII)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 7);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_147585_a", "(IIIIII)V", true);
            mv.visitIincInsn(7, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(7, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190522_c", "(Let;Laow;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190529_b", "(Let;Laow;Let;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175685_c", "(Let;Laow;Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitLdcInsn(Type.getType("Lfa;"));
            mv.visitMethodInsn(INVOKESTATIC, "java/util/EnumSet", "allOf", "(Ljava/lang/Class;)Ljava/util/EnumSet;", false);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onNeighborNotify", "(Lamu;Let;Lawt;Ljava/util/EnumSet;Z)Lnet/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "isCanceled", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(RETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitVarInsn(ILOAD, 3);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190522_c", "(Let;Laow;)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175695_a", "(Let;Laow;Lfa;)V", null, null);
            mv.visitCode();
            mv.visitLdcInsn(Type.getType("Lfa;"));
            mv.visitMethodInsn(INVOKESTATIC, "java/util/EnumSet", "allOf", "(Ljava/lang/Class;)Ljava/util/EnumSet;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/EnumSet", "remove", "(Ljava/lang/Object;)Z", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onNeighborNotify", "(Lamu;Let;Lawt;Ljava/util/EnumSet;Z)Lnet/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/world/BlockEvent$NeighborNotifyEvent", "isCanceled", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(RETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/EnumSet"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "WEST", "Lfa;");
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "EAST", "Lfa;");
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "DOWN", "Lfa;");
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "UP", "Lfa;");
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "NORTH", "Lfa;");
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETSTATIC, "fa", "SOUTH", "Lfa;");
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190524_a", "(Let;Laow;Let;)V", false);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190524_a", "(Let;Laow;Let;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "neighborChanged", "(Lamu;Let;Laow;Let;)V", true);
            mv.visitLabel(l1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 5, new Object[]{"amu", "et", "aow", "et", "awt"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Exception while updating neighbours");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitLdcInsn("Block being updated");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Source block type");
            mv.visitTypeInsn(NEW, "amu$1");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESPECIAL, "amu$1", "<init>", "(Lamu;Laow;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_189529_a", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "c", "func_175750_a", "(Lc;Let;Lawt;)V", false);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(6, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190529_b", "(Let;Laow;Let;)V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "observedNeighborChange", "(Lawt;Lamu;Let;Laow;Let;)V", false);
            mv.visitLabel(l1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 5, new Object[]{"amu", "et", "aow", "et", "awt"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Exception while updating neighbours");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitLdcInsn("Block being updated");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Source block type");
            mv.visitTypeInsn(NEW, "amu$2");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKESPECIAL, "amu$2", "<init>", "(Lamu;Laow;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_189529_a", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "c", "func_175750_a", "(Lc;Let;Lawt;)V", false);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(6, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175691_a", "(Let;Laow;)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175678_i", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177444_d", "(Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175710_j", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_181545_F", "()I", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175678_i", "(Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_181545_F", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175678_i", "(Let;)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"et"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"et"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149717_k", "(Lawt;Lamy;Let;)I", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFLE, l4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitMethodInsn(INVOKEVIRTUAL, "bcz", "func_76224_d", "()Z", false);
            mv.visitJumpInsn(IFNE, l4);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175721_c", "(Let;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFGE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitIntInsn(SIPUSH, 256);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l1);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitIntInsn(SIPUSH, 255);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177443_a", "(Let;I)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175671_l", "(Let;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175721_c", "(Let;Z)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitLdcInsn(new Integer(-30000000));
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ILOAD, 2);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "useNeighborBrightness", "()Z", true);
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175721_c", "(Let;Z)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 3);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l2);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"amu", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 3);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 3);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 3);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l5);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "et", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l6 = new Label();
            mv.visitJumpInsn(IFGE, l6);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitIntInsn(SIPUSH, 256);
            Label l7 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l7);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitIntInsn(SIPUSH, 255);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73008_k", "I");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177443_a", "(Let;I)I", false);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72800_K", "(Let;)Let;", null, null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72800_K", "(II)I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(6, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72800_K", "(II)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 1);
            mv.visitLdcInsn(new Integer(-30000000));
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IAND);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IAND);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76611_b", "(II)I", false);
            mv.visitVarInsn(ISTORE, 3);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_181545_F", "()I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_DEPRECATED, "func_82734_g", "(II)I", null, null);
            {
                av0 = mv.visitAnnotation("Ljava/lang/Deprecated;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 1);
            mv.visitLdcInsn(new Integer(-30000000));
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177442_v", "()I", false);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_181545_F", "()I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175705_a", "(Lana;Let;)I", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_191066_m", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            mv.visitJumpInsn(IF_ACMPNE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFGE, l1);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175701_a", "(Let;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "ana", "field_77198_c", "I");
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "ana", "field_77198_c", "I");
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "useNeighborBrightness", "()Z", true);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 3);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l5);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 3);
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l6);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 3);
            Label l7 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l7);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 3);
            Label l8 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l8);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "ana", "et"}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177413_a", "(Lana;Let;)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175642_b", "(Lana;Let;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ILOAD, 3);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitIntInsn(SIPUSH, 256);
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "ana", "field_77198_c", "I");
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177413_a", "(Lana;Let;)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175653_a", "(Lana;Let;I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175701_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177431_a", "(Lana;Let;I)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175679_n", "(Let;)V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175679_n", "(Let;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_174959_b", "(Let;)V", true);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175626_b", "(Let;I)I", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175705_a", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "BLOCK", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175705_a", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 2);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitIntInsn(BIPUSH, 20);
            mv.visitInsn(ISHL);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175724_o", "(Let;)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_177497_p", "()[F", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175671_l", "(Let;)I", false);
            mv.visitInsn(FALOAD);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180495_p", "(Let;)Lawt;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150350_a", "Laow;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176223_P", "()Lawt;", false);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177435_g", "(Let;)Lawt;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72935_r", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "isDaytime", "()Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72933_a", "(Lbhe;Lbhe;)Lbhc;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72933_a", "(Lbhe;Lbhe;ZZZ)Lbhc;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(6, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72933_a", "(Lbhe;Lbhe;Z)Lbhc;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72933_a", "(Lbhe;Lbhe;ZZZ)Lbhc;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(6, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72933_a", "(Lbhe;Lbhe;ZZZ)Lbhc;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 13);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 14);
            mv.visitVarInsn(ILOAD, 4);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getCollisionBoundingBox", "(Lamy;Let;)Lbhb;", true);
            mv.visitFieldInsn(GETSTATIC, "aow", "field_185506_k", "Lbhb;");
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 15, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow"}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 14);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176209_a", "(Lawt;Z)Z", false);
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "collisionRayTrace", "(Lamu;Let;Lbhe;Lbhe;)Lbhc;", true);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitJumpInsn(IFNULL, l3);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitIntInsn(SIPUSH, 200);
            mv.visitVarInsn(ISTORE, 16);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"bhc", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitIincInsn(16, -1);
            Label l5 = new Label();
            mv.visitJumpInsn(IFLT, l5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNE, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            mv.visitJumpInsn(IFNE, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l7 = new Label();
            mv.visitJumpInsn(IFEQ, l7);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 6);
            Label l8 = new Label();
            mv.visitJumpInsn(IF_ICMPNE, l8);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitJumpInsn(IF_ICMPNE, l8);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitJumpInsn(IF_ICMPNE, l8);
            mv.visitVarInsn(ILOAD, 5);
            Label l9 = new Label();
            mv.visitJumpInsn(IFEQ, l9);
            mv.visitVarInsn(ALOAD, 15);
            Label l10 = new Label();
            mv.visitJumpInsn(GOTO, l10);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bhc"});
            mv.visitInsn(ARETURN);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 17);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 18);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 19);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 20);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 22);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 24);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 9);
            Label l11 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l11);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 20);
            Label l12 = new Label();
            mv.visitJumpInsn(GOTO, l12);
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_FULL, 23, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 9);
            Label l13 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l13);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitJumpInsn(GOTO, l12);
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 17);
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 10);
            Label l14 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l14);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 22);
            Label l15 = new Label();
            mv.visitJumpInsn(GOTO, l15);
            mv.visitLabel(l14);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 10);
            Label l16 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l16);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 22);
            mv.visitJumpInsn(GOTO, l15);
            mv.visitLabel(l16);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 18);
            mv.visitLabel(l15);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 11);
            Label l17 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l17);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 24);
            Label l18 = new Label();
            mv.visitJumpInsn(GOTO, l18);
            mv.visitLabel(l17);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 11);
            Label l19 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l19);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitInsn(I2D);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 24);
            mv.visitJumpInsn(GOTO, l18);
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 19);
            mv.visitLabel(l18);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 26);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 28);
            mv.visitLdcInsn(new Double("999.0"));
            mv.visitVarInsn(DSTORE, 30);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 32);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 34);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 36);
            mv.visitVarInsn(ILOAD, 17);
            Label l20 = new Label();
            mv.visitJumpInsn(IFEQ, l20);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DLOAD, 32);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 26);
            mv.visitLabel(l20);
            mv.visitFrame(Opcodes.F_FULL, 29, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 18);
            Label l21 = new Label();
            mv.visitJumpInsn(IFEQ, l21);
            mv.visitVarInsn(DLOAD, 22);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DLOAD, 34);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 28);
            mv.visitLabel(l21);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 19);
            Label l22 = new Label();
            mv.visitJumpInsn(IFEQ, l22);
            mv.visitVarInsn(DLOAD, 24);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DLOAD, 36);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 30);
            mv.visitLabel(l22);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 26);
            mv.visitLdcInsn(new Double("-0.0"));
            mv.visitInsn(DCMPL);
            Label l23 = new Label();
            mv.visitJumpInsn(IFNE, l23);
            mv.visitLdcInsn(new Double("-1.0E-4"));
            mv.visitVarInsn(DSTORE, 26);
            mv.visitLabel(l23);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 28);
            mv.visitLdcInsn(new Double("-0.0"));
            mv.visitInsn(DCMPL);
            Label l24 = new Label();
            mv.visitJumpInsn(IFNE, l24);
            mv.visitLdcInsn(new Double("-1.0E-4"));
            mv.visitVarInsn(DSTORE, 28);
            mv.visitLabel(l24);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 30);
            mv.visitLdcInsn(new Double("-0.0"));
            mv.visitInsn(DCMPL);
            Label l25 = new Label();
            mv.visitJumpInsn(IFNE, l25);
            mv.visitLdcInsn(new Double("-1.0E-4"));
            mv.visitVarInsn(DSTORE, 30);
            mv.visitLabel(l25);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 26);
            mv.visitVarInsn(DLOAD, 28);
            mv.visitInsn(DCMPG);
            Label l26 = new Label();
            mv.visitJumpInsn(IFGE, l26);
            mv.visitVarInsn(DLOAD, 26);
            mv.visitVarInsn(DLOAD, 30);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l26);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 9);
            Label l27 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l27);
            mv.visitFieldInsn(GETSTATIC, "fa", "WEST", "Lfa;");
            Label l28 = new Label();
            mv.visitJumpInsn(GOTO, l28);
            mv.visitLabel(l27);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "fa", "EAST", "Lfa;");
            mv.visitLabel(l28);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"fa"});
            mv.visitVarInsn(ASTORE, 38);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitVarInsn(DLOAD, 34);
            mv.visitVarInsn(DLOAD, 26);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitVarInsn(DLOAD, 36);
            mv.visitVarInsn(DLOAD, 26);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitVarInsn(ASTORE, 1);
            Label l29 = new Label();
            mv.visitJumpInsn(GOTO, l29);
            mv.visitLabel(l26);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 28);
            mv.visitVarInsn(DLOAD, 30);
            mv.visitInsn(DCMPG);
            Label l30 = new Label();
            mv.visitJumpInsn(IFGE, l30);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 10);
            Label l31 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l31);
            mv.visitFieldInsn(GETSTATIC, "fa", "DOWN", "Lfa;");
            Label l32 = new Label();
            mv.visitJumpInsn(GOTO, l32);
            mv.visitLabel(l31);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "fa", "UP", "Lfa;");
            mv.visitLabel(l32);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"fa"});
            mv.visitVarInsn(ASTORE, 38);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitVarInsn(DLOAD, 32);
            mv.visitVarInsn(DLOAD, 28);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DLOAD, 22);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitVarInsn(DLOAD, 36);
            mv.visitVarInsn(DLOAD, 28);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitJumpInsn(GOTO, l29);
            mv.visitLabel(l30);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 11);
            Label l33 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l33);
            mv.visitFieldInsn(GETSTATIC, "fa", "NORTH", "Lfa;");
            Label l34 = new Label();
            mv.visitJumpInsn(GOTO, l34);
            mv.visitLabel(l33);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "fa", "SOUTH", "Lfa;");
            mv.visitLabel(l34);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"fa"});
            mv.visitVarInsn(ASTORE, 38);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitVarInsn(DLOAD, 32);
            mv.visitVarInsn(DLOAD, 30);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitVarInsn(DLOAD, 34);
            mv.visitVarInsn(DLOAD, 30);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DLOAD, 24);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitLabel(l29);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"fa"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ALOAD, 38);
            mv.visitFieldInsn(GETSTATIC, "fa", "EAST", "Lfa;");
            Label l35 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l35);
            mv.visitInsn(ICONST_1);
            Label l36 = new Label();
            mv.visitJumpInsn(GOTO, l36);
            mv.visitLabel(l35);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l36);
            mv.visitFrame(Opcodes.F_FULL, 30, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "fa"}, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER});
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ALOAD, 38);
            mv.visitFieldInsn(GETSTATIC, "fa", "UP", "Lfa;");
            Label l37 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l37);
            mv.visitInsn(ICONST_1);
            Label l38 = new Label();
            mv.visitJumpInsn(GOTO, l38);
            mv.visitLabel(l37);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l38);
            mv.visitFrame(Opcodes.F_FULL, 30, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "fa"}, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER});
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ALOAD, 38);
            mv.visitFieldInsn(GETSTATIC, "fa", "SOUTH", "Lfa;");
            Label l39 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l39);
            mv.visitInsn(ICONST_1);
            Label l40 = new Label();
            mv.visitJumpInsn(GOTO, l40);
            mv.visitLabel(l39);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l40);
            mv.visitFrame(Opcodes.F_FULL, 30, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "fa"}, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER});
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 39);
            mv.visitVarInsn(ALOAD, 39);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 40);
            mv.visitVarInsn(ILOAD, 4);
            Label l41 = new Label();
            mv.visitJumpInsn(IFEQ, l41);
            mv.visitVarInsn(ALOAD, 39);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitFieldInsn(GETSTATIC, "bcz", "field_151567_E", "Lbcz;");
            mv.visitJumpInsn(IF_ACMPEQ, l41);
            mv.visitVarInsn(ALOAD, 39);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getCollisionBoundingBox", "(Lamy;Let;)Lbhb;", true);
            mv.visitFieldInsn(GETSTATIC, "aow", "field_185506_k", "Lbhb;");
            Label l42 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l42);
            mv.visitLabel(l41);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"awt", "aow"}, 0, null);
            mv.visitVarInsn(ALOAD, 40);
            mv.visitVarInsn(ALOAD, 39);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176209_a", "(Lawt;Z)Z", false);
            Label l43 = new Label();
            mv.visitJumpInsn(IFEQ, l43);
            mv.visitVarInsn(ALOAD, 39);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "collisionRayTrace", "(Lamu;Let;Lbhe;Lbhe;)Lbhc;", true);
            mv.visitVarInsn(ASTORE, 41);
            mv.visitVarInsn(ALOAD, 41);
            Label l44 = new Label();
            mv.visitJumpInsn(IFNULL, l44);
            mv.visitVarInsn(ALOAD, 41);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l44);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l42);
            mv.visitLabel(l43);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitTypeInsn(NEW, "bhc");
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETSTATIC, "bhc$a", "MISS", "Lbhc$a;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 38);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKESPECIAL, "bhc", "<init>", "(Lbhc$a;Lbhe;Lfa;Let;)V", false);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitLabel(l42);
            mv.visitFrame(Opcodes.F_FULL, 17, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", "awt", "aow", "bhc", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            Label l45 = new Label();
            mv.visitJumpInsn(IFEQ, l45);
            mv.visitVarInsn(ALOAD, 15);
            Label l46 = new Label();
            mv.visitJumpInsn(GOTO, l46);
            mv.visitLabel(l45);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitLabel(l46);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bhc"});
            mv.visitInsn(ARETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 6, new Object[]{"amu", "bhe", "bhe", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(12, 42);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184133_a", "(Laed;Let;Lqe;Lqg;FF)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(I2D);
            mv.visitLdcInsn(new Double("0.5"));
            mv.visitInsn(DADD);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitInsn(I2D);
            mv.visitLdcInsn(new Double("0.5"));
            mv.visitInsn(DADD);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(I2D);
            mv.visitLdcInsn(new Double("0.5"));
            mv.visitInsn(DADD);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184133_a", "(Laed;DDDLqe;Lqg;FF)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(12, 7);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184133_a", "(Laed;DDDLqe;Lqg;FF)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onPlaySoundAtEntity", "(Lvg;Lqe;Lqg;FF)Lnet/minecraftforge/event/entity/PlaySoundAtEntityEvent;", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "isCanceled", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getSound", "()Lqe;", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNONNULL, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"net/minecraftforge/event/entity/PlaySoundAtEntityEvent"}, 0, null);
            mv.visitInsn(RETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getSound", "()Lqe;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getCategory", "()Lqg;", false);
            mv.visitVarInsn(ASTORE, 9);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getVolume", "()F", false);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/event/entity/PlaySoundAtEntityEvent", "getPitch", "()F", false);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 13);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 13);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_184375_a", "(Laed;Lqe;Lqg;DDDFF)V", true);
            mv.visitIincInsn(13, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(12, 14);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184133_a", "(DDDLqe;Lqg;FFZ)V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 12);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184149_a", "(Let;Lqe;)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 3);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_184377_a", "(Lqe;Let;)V", true);
            mv.visitIincInsn(3, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "func_175688_a", "(Lfj;DDDDDD[I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fj", "func_179348_c", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fj", "func_179344_e", "()Z", false);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitVarInsn(DLOAD, 8);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitVarInsn(DLOAD, 12);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175688_a", "(IZDDDDDD[I)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(16, 15);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "func_190523_a", "(IDDDDDD[I)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 15);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 15);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 15);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitVarInsn(DLOAD, 8);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitVarInsn(DLOAD, 12);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_180442_a", "(IZZDDDDDD[I)V", true);
            mv.visitIincInsn(15, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(17, 16);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_VARARGS, "func_175688_a", "(Lfj;ZDDDDDD[I)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fj", "func_179348_c", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fj", "func_179344_e", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ILOAD, 2);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "fj", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 2, new Object[]{"amu", Opcodes.INTEGER});
            mv.visitInsn(ICONST_1);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "fj", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 2, new Object[]{"amu", Opcodes.INTEGER});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "fj", Opcodes.INTEGER, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, "[I"}, 3, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER});
            mv.visitVarInsn(DLOAD, 3);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitVarInsn(DLOAD, 11);
            mv.visitVarInsn(DLOAD, 13);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175688_a", "(IZDDDDDD[I)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(16, 16);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_VARARGS, "func_175688_a", "(IZDDDDDD[I)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 16);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 16);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitVarInsn(DLOAD, 11);
            mv.visitVarInsn(DLOAD, 13);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_180442_a", "(IZDDDDDD[I)V", true);
            mv.visitIincInsn(16, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(16, 17);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72942_c", "(Lvg;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73007_j", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72838_d", "(Lvg;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNULL, l1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "acl");
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "restoringBlockSnapshots", "Z");
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_98038_p", "Z");
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "aed");
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFNE, l3);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "aed");
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72854_c", "()V", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
            mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lvg;Lamu;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitJumpInsn(IFNE, l5);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76612_a", "(Lvg;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72923_a", "(Lvg;)V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72923_a", "(Lvg;)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_72703_a", "(Lvg;)V", true);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "onAddedToWorld", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72847_b", "(Lvg;)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_72709_b", "(Lvg;)V", true);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "onRemovedFromWorld", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72900_e", "(Lvg;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184207_aI", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184226_ay", "()V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184218_aH", "()Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184210_p", "()V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70106_y", "()V", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "aed");
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72854_c", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72847_b", "(Lvg;)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72973_f", "(Lvg;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184174_b", "(Z)V", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70106_y", "()V", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "aed");
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72854_c", "()V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76622_b", "(Lvg;)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72847_b", "(Lvg;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72954_a", "(Lamw;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_184144_a", "(Lvg;Lbhb;ZLjava/util/List;)Z", "(Lvg;Lbhb;ZLjava/util/List<Lbhb;>;)Z", null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(3, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, null);
            Label l3 = new Label();
            Label l4 = new Label();
            mv.visitTryCatchBlock(l3, l4, l2, null);
            Label l5 = new Label();
            Label l6 = new Label();
            mv.visitTryCatchBlock(l5, l6, l2, null);
            Label l7 = new Label();
            mv.visitTryCatchBlock(l2, l7, l2, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175723_af", "()Laxn;", false);
            mv.visitVarInsn(ASTORE, 11);
            mv.visitVarInsn(ALOAD, 1);
            Label l8 = new Label();
            mv.visitJumpInsn(IFNULL, l8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_174832_aS", "()Z", false);
            mv.visitJumpInsn(IFEQ, l8);
            mv.visitInsn(ICONST_1);
            Label l9 = new Label();
            mv.visitJumpInsn(GOTO, l9);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_FULL, 12, new Object[]{"amu", "vg", "bhb", Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "axn"}, 0, new Object[]{});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 12);
            mv.visitVarInsn(ALOAD, 1);
            Label l10 = new Label();
            mv.visitJumpInsn(IFNULL, l10);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_191503_g", "(Lvg;)Z", false);
            mv.visitJumpInsn(IFEQ, l10);
            mv.visitInsn(ICONST_1);
            Label l11 = new Label();
            mv.visitJumpInsn(GOTO, l11);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 13);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150348_b", "Laow;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176223_P", "()Lawt;", false);
            mv.visitVarInsn(ASTORE, 14);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCollisionBoxes", "(Lamu;Lvg;Lbhb;Ljava/util/List;)Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, "awt", "et$b"}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 16);
            Label l12 = new Label();
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitJumpInsn(IF_ICMPGE, l6);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ISTORE, 17);
            Label l13 = new Label();
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitVarInsn(ILOAD, 10);
            Label l14 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l14);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ILOAD, 5);
            Label l15 = new Label();
            mv.visitJumpInsn(IF_ICMPEQ, l15);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            Label l16 = new Label();
            mv.visitJumpInsn(IF_ICMPNE, l16);
            mv.visitLabel(l15);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            Label l17 = new Label();
            mv.visitJumpInsn(GOTO, l17);
            mv.visitLabel(l16);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l17);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 18);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitVarInsn(ILOAD, 9);
            Label l18 = new Label();
            mv.visitJumpInsn(IF_ICMPEQ, l18);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            Label l19 = new Label();
            mv.visitJumpInsn(IF_ICMPNE, l19);
            mv.visitLabel(l18);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitInsn(ICONST_1);
            Label l20 = new Label();
            mv.visitJumpInsn(GOTO, l20);
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l20);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 19);
            mv.visitVarInsn(ILOAD, 18);
            Label l21 = new Label();
            mv.visitJumpInsn(IFEQ, l21);
            mv.visitVarInsn(ILOAD, 19);
            Label l22 = new Label();
            mv.visitJumpInsn(IFNE, l22);
            mv.visitLabel(l21);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitIntInsn(BIPUSH, 64);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l22);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 20);
            Label l23 = new Label();
            mv.visitLabel(l23);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitJumpInsn(IF_ICMPGE, l22);
            mv.visitVarInsn(ILOAD, 18);
            Label l24 = new Label();
            mv.visitJumpInsn(IFNE, l24);
            mv.visitVarInsn(ILOAD, 19);
            Label l25 = new Label();
            mv.visitJumpInsn(IFEQ, l25);
            mv.visitLabel(l24);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(ISUB);
            mv.visitJumpInsn(IF_ICMPEQ, l5);
            mv.visitLabel(l25);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitLdcInsn(new Integer(-30000000));
            Label l26 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l26);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitLdcInsn(new Integer(30000000));
            mv.visitJumpInsn(IF_ICMPGE, l26);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitLdcInsn(new Integer(-30000000));
            mv.visitJumpInsn(IF_ICMPLT, l26);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitLdcInsn(new Integer(30000000));
            Label l27 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l27);
            mv.visitLabel(l26);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 21);
            mv.visitVarInsn(ILOAD, 21);
            mv.visitVarInsn(ISTORE, 22);
            mv.visitLabel(l1);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitVarInsn(ILOAD, 22);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitJumpInsn(IFNULL, l27);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitJumpInsn(IF_ICMPNE, l27);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 13);
            Label l28 = new Label();
            mv.visitJumpInsn(IFNE, l28);
            mv.visitInsn(ICONST_1);
            Label l29 = new Label();
            mv.visitJumpInsn(GOTO, l29);
            mv.visitLabel(l28);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"vg"});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l29);
            mv.visitFrame(Opcodes.F_FULL, 21, new Object[]{"amu", "vg", "bhb", Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "axn", Opcodes.INTEGER, Opcodes.INTEGER, "awt", "et$b", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[]{"vg", Opcodes.INTEGER});
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_174821_h", "(Z)V", false);
            mv.visitLabel(l27);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ILOAD, 3);
            Label l30 = new Label();
            mv.visitJumpInsn(IFNE, l30);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177743_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFNE, l30);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitJumpInsn(IFEQ, l30);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitVarInsn(ASTORE, 21);
            Label l31 = new Label();
            mv.visitJumpInsn(GOTO, l31);
            mv.visitLabel(l30);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 21);
            mv.visitLabel(l31);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"awt"}, 0, null);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "addCollisionBoxToList", "(Lamu;Let;Lbhb;Ljava/util/List;Lvg;Z)V", true);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCollisionBoxes", "(Lamu;Lvg;Lbhb;Ljava/util/List;)Z", false);
            mv.visitJumpInsn(IFNE, l5);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 22);
            mv.visitVarInsn(ILOAD, 22);
            mv.visitVarInsn(ISTORE, 23);
            mv.visitLabel(l4);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(20, 1);
            mv.visitJumpInsn(GOTO, l23);
            mv.visitLabel(l22);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitIincInsn(17, 1);
            mv.visitJumpInsn(GOTO, l13);
            mv.visitLabel(l14);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(16, 1);
            mv.visitJumpInsn(GOTO, l12);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            Label l32 = new Label();
            mv.visitJumpInsn(GOTO, l32);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 24);
            mv.visitLabel(l7);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitVarInsn(ALOAD, 24);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l32);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
            Label l33 = new Label();
            mv.visitJumpInsn(IFNE, l33);
            mv.visitInsn(ICONST_1);
            Label l34 = new Label();
            mv.visitJumpInsn(GOTO, l34);
            mv.visitLabel(l33);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l34);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(7, 25);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184144_a", "(Lvg;Lbhb;)Ljava/util/List;", "(Lvg;Lbhb;)Ljava/util/List<Lbhb;>;", null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_184144_a", "(Lvg;Lbhb;ZLjava/util/List;)Z", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 1);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNULL, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn(new Double("0.25"));
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhb", "func_186662_g", "(D)Lbhb;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72839_b", "(Lvg;Lbhb;)Ljava/util/List;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/util/List", "java/util/List", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            mv.visitJumpInsn(IF_ICMPGE, l0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184223_x", "(Lvg;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70046_E", "()Lbhb;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNULL, l3);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhb", "func_189973_a", "(Lbhb;)Z", false);
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"vg", "bhb"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70114_g", "(Lvg;)Lbhb;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitJumpInsn(IFNULL, l2);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhb", "func_189973_a", "(Lbhb;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
            mv.visitTypeInsn(NEW, "net/minecraftforge/event/world/GetCollisionBoxesEvent");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/world/GetCollisionBoxesEvent", "<init>", "(Lamu;Lvg;Lbhb;Ljava/util/List;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(7, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72848_b", "(Lamw;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_191503_g", "(Lvg;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177726_b", "()D", false);
            mv.visitVarInsn(DSTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177736_c", "()D", false);
            mv.visitVarInsn(DSTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177728_d", "()D", false);
            mv.visitVarInsn(DSTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177733_e", "()D", false);
            mv.visitVarInsn(DSTORE, 8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_174832_aS", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 6);
            mv.visitVarInsn(DLOAD, 8);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 8);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 6, new Object[]{"amu", "vg", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, new Object[]{});
            mv.visitVarInsn(DLOAD, 2);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DSUB);
            mv.visitVarInsn(DSTORE, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 6);
            mv.visitVarInsn(DLOAD, 8);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 8);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitVarInsn(DLOAD, 2);
            mv.visitInsn(DCMPL);
            Label l2 = new Label();
            mv.visitJumpInsn(IFLE, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitVarInsn(DLOAD, 6);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitVarInsn(DLOAD, 4);
            mv.visitInsn(DCMPL);
            mv.visitJumpInsn(IFLE, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitVarInsn(DLOAD, 8);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitInsn(ICONST_1);
            Label l3 = new Label();
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 10);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184143_b", "(Lbhb;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_184144_a", "(Lvg;Lbhb;ZLjava/util/List;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72967_a", "(F)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getSunBrightnessFactor", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("11.0"));
            mv.visitInsn(FMUL);
            mv.visitInsn(F2I);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSunBrightnessFactor", "(F)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76134_b", "(F)F", false);
            mv.visitInsn(FCONST_2);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitVarInsn(FSTORE, 3);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(F2D);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitLdcInsn(new Float("5.0"));
            mv.visitInsn(FMUL);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitInsn(DSUB);
            mv.visitInsn(DMUL);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(F2D);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72819_i", "(F)F", false);
            mv.visitLdcInsn(new Float("5.0"));
            mv.visitInsn(FMUL);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitInsn(DSUB);
            mv.visitInsn(DMUL);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(8, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72971_b", "(F)F", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getSunBrightness", "(F)F", false);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSunBrightnessBody", "(F)F", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76134_b", "(F)F", false);
            mv.visitInsn(FCONST_2);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.2"));
            mv.visitInsn(FADD);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitVarInsn(FSTORE, 3);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(F2D);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitLdcInsn(new Float("5.0"));
            mv.visitInsn(FMUL);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitInsn(DSUB);
            mv.visitInsn(DMUL);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(F2D);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72819_i", "(F)F", false);
            mv.visitLdcInsn(new Float("5.0"));
            mv.visitInsn(FMUL);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitInsn(DSUB);
            mv.visitInsn(DMUL);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitLdcInsn(new Float("0.8"));
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.2"));
            mv.visitInsn(FADD);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(8, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72833_a", "(Lvg;F)Lbhe;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getSkyColor", "(Lvg;F)Lbhe;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getSkyColorBody", "(Lvg;F)Lbhe;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76134_b", "(F)F", false);
            mv.visitInsn(FCONST_2);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/client/ForgeHooksClient", "getSkyBlendColour", "(Lamu;Let;)I", false);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(SIPUSH, 255);
            mv.visitInsn(IAND);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("255.0"));
            mv.visitInsn(FDIV);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(SIPUSH, 255);
            mv.visitInsn(IAND);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("255.0"));
            mv.visitInsn(FDIV);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitIntInsn(SIPUSH, 255);
            mv.visitInsn(IAND);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("255.0"));
            mv.visitInsn(FDIV);
            mv.visitVarInsn(FSTORE, 12);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitVarInsn(FSTORE, 13);
            mv.visitVarInsn(FLOAD, 13);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitLdcInsn(new Float("0.3"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitLdcInsn(new Float("0.59"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitLdcInsn(new Float("0.11"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitLdcInsn(new Float("0.6"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 14);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 13);
            mv.visitLdcInsn(new Float("0.75"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 14);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 14);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 14);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 12);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 14, new Object[]{"amu", "vg", Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et", Opcodes.INTEGER, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72819_i", "(F)F", false);
            mv.visitVarInsn(FSTORE, 14);
            mv.visitVarInsn(FLOAD, 14);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCMPL);
            Label l1 = new Label();
            mv.visitJumpInsn(IFLE, l1);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitLdcInsn(new Float("0.3"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitLdcInsn(new Float("0.59"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitLdcInsn(new Float("0.11"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitLdcInsn(new Float("0.2"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 14);
            mv.visitLdcInsn(new Float("0.75"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 16);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 12);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73016_r", "I");
            Label l2 = new Label();
            mv.visitJumpInsn(IFLE, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73016_r", "I");
            mv.visitInsn(I2F);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FCONST_1);
            mv.visitInsn(FCMPL);
            Label l3 = new Label();
            mv.visitJumpInsn(IFLE, l3);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitLdcInsn(new Float("0.45"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.8"));
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.8"));
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 11);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 12);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(F2D);
            mv.visitVarInsn(FLOAD, 11);
            mv.visitInsn(F2D);
            mv.visitVarInsn(FLOAD, 12);
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(8, 17);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72826_c", "(F)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72820_D", "()J", false);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_76563_a", "(JF)F", false);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(4, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72853_d", "()I", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72820_D", "()J", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_76559_b", "(J)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_130001_d", "()F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getCurrentMoonPhaseFactor", "()F", false);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCurrentMoonPhaseFactorBody", "()F", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "aym", "field_111203_a", "[F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72820_D", "()J", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_76559_b", "(J)I", false);
            mv.visitInsn(FALOAD);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(4, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72929_e", "(F)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72824_f", "(F)Lbhe;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getCloudColor", "(F)Lbhe;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCloudColorBody", "(F)Lbhe;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76134_b", "(F)F", false);
            mv.visitInsn(FCONST_2);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitVarInsn(FSTORE, 3);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FSTORE, 5);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FSTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitVarInsn(FSTORE, 7);
            mv.visitVarInsn(FLOAD, 7);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitLdcInsn(new Float("0.3"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitLdcInsn(new Float("0.59"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitLdcInsn(new Float("0.11"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitLdcInsn(new Float("0.6"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 8);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 7);
            mv.visitLdcInsn(new Float("0.95"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 9);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 5);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 6);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"amu", Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[]{});
            mv.visitVarInsn(FLOAD, 4);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitLdcInsn(new Float("0.9"));
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.1"));
            mv.visitInsn(FADD);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitLdcInsn(new Float("0.9"));
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.1"));
            mv.visitInsn(FADD);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 5);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitLdcInsn(new Float("0.85"));
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.15"));
            mv.visitInsn(FADD);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72819_i", "(F)F", false);
            mv.visitVarInsn(FSTORE, 8);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCMPL);
            Label l1 = new Label();
            mv.visitJumpInsn(IFLE, l1);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitLdcInsn(new Float("0.3"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitLdcInsn(new Float("0.59"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitLdcInsn(new Float("0.11"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitLdcInsn(new Float("0.2"));
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FSTORE, 9);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitLdcInsn(new Float("0.95"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 10);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 5);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FMUL);
            mv.visitVarInsn(FLOAD, 9);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 10);
            mv.visitInsn(FSUB);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(FSTORE, 6);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitInsn(F2D);
            mv.visitVarInsn(FLOAD, 5);
            mv.visitInsn(F2D);
            mv.visitVarInsn(FLOAD, 6);
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(8, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72948_g", "(F)Lbhe;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(FLOAD, 2);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_76562_b", "(FF)Lbhe;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175725_q", "(Let;)Let;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177440_h", "(Let;)Let;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175672_r", "(Let;)Let;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76625_h", "()I", false);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitVarInsn(ASTORE, 3);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"axw", "et"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFLT, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177435_g", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitMethodInsn(INVOKEVIRTUAL, "bcz", "func_76230_c", "()Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isLeaves", "(Lawt;Lamy;Let;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isFoliage", "(Lamy;Let;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"et"}, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(5, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72880_h", "(F)F", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getStarBrightness", "(F)F", false);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getStarBrightnessBody", "(F)F", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72826_c", "(F)F", false);
            mv.visitVarInsn(FSTORE, 2);
            mv.visitInsn(FCONST_1);
            mv.visitVarInsn(FLOAD, 2);
            mv.visitLdcInsn(new Float("6.2831855"));
            mv.visitInsn(FMUL);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76134_b", "(F)F", false);
            mv.visitInsn(FCONST_2);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.25"));
            mv.visitInsn(FADD);
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitVarInsn(FSTORE, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitVarInsn(FLOAD, 3);
            mv.visitInsn(FMUL);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FMUL);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(3, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184145_b", "(Let;Laow;)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175684_a", "(Let;Laow;I)V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175654_a", "(Let;Laow;II)V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180497_b", "(Let;Laow;II)V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72939_s", "()V", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            Label l3 = new Label();
            Label l4 = new Label();
            mv.visitTryCatchBlock(l3, l4, l2, "java/lang/Throwable");
            Label l5 = new Label();
            Label l6 = new Label();
            Label l7 = new Label();
            mv.visitTryCatchBlock(l5, l6, l7, "java/lang/Throwable");
            Label l8 = new Label();
            Label l9 = new Label();
            Label l10 = new Label();
            mv.visitTryCatchBlock(l8, l9, l10, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("entities");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("global");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 1);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73007_j", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l12 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73007_j", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "updateBlocked", "Z");
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitLabel(l1);
            Label l13 = new Label();
            mv.visitJumpInsn(GOTO, l13);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"vg"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70173_aa", "I");
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70173_aa", "I");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70071_h_", "()V", false);
            mv.visitLabel(l4);
            Label l14 = new Label();
            mv.visitJumpInsn(GOTO, l14);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitLdcInsn("Ticking entity");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitLdcInsn("Entity being ticked");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 2);
            Label l15 = new Label();
            mv.visitJumpInsn(IFNONNULL, l15);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Entity");
            mv.visitLdcInsn("~~NULL~~");
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            Label l16 = new Label();
            mv.visitJumpInsn(GOTO, l16);
            mv.visitLabel(l15);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/lang/Throwable", "b", "c"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_85029_a", "(Lc;)V", false);
            mv.visitLabel(l16);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringEntities", "Z");
            Label l17 = new Label();
            mv.visitJumpInsn(IFEQ, l17);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
            mv.visitLdcInsn("{}");
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_71502_e", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72900_e", "(Lvg;)V", false);
            mv.visitJumpInsn(GOTO, l14);
            mv.visitLabel(l17);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l14);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            mv.visitJumpInsn(IFEQ, l13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73007_j", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitIincInsn(1, -1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(I)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(1, 1);
            mv.visitJumpInsn(GOTO, l11);
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("remove");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76318_c", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 1);
            Label l18 = new Label();
            mv.visitLabel(l18);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l19 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l19);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            Label l20 = new Label();
            mv.visitJumpInsn(IFEQ, l20);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFEQ, l20);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76622_b", "(Lvg;)V", false);
            mv.visitLabel(l20);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(1, 1);
            mv.visitJumpInsn(GOTO, l18);
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 1);
            Label l21 = new Label();
            mv.visitLabel(l21);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l22 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l22);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72847_b", "(Lvg;)V", false);
            mv.visitIincInsn(1, 1);
            mv.visitJumpInsn(GOTO, l21);
            mv.visitLabel(l22);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184147_l", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("regular");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76318_c", "(Ljava/lang/String;)V", false);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 1);
            Label l23 = new Label();
            mv.visitLabel(l23);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l24 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l24);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184187_bx", "()Lvg;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            Label l25 = new Label();
            mv.visitJumpInsn(IFNULL, l25);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            Label l26 = new Label();
            mv.visitJumpInsn(IFNE, l26);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184196_w", "(Lvg;)Z", false);
            mv.visitJumpInsn(IFEQ, l26);
            Label l27 = new Label();
            mv.visitJumpInsn(GOTO, l27);
            mv.visitLabel(l26);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"vg", "vg"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184210_p", "()V", false);
            mv.visitLabel(l25);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("tick");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            Label l28 = new Label();
            mv.visitJumpInsn(IFNE, l28);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitTypeInsn(INSTANCEOF, "oq");
            mv.visitJumpInsn(IFNE, l28);
            mv.visitLabel(l5);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackStart", "(Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72870_g", "(Lvg;)V", false);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackEnd", "(Ljava/lang/Object;)V", false);
            mv.visitLabel(l6);
            mv.visitJumpInsn(GOTO, l28);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitLdcInsn("Ticking entity");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Entity being ticked");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_85029_a", "(Lc;)V", false);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringEntities", "Z");
            Label l29 = new Label();
            mv.visitJumpInsn(IFEQ, l29);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
            mv.visitLdcInsn("{}");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_71502_e", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72900_e", "(Lvg;)V", false);
            mv.visitJumpInsn(GOTO, l28);
            mv.visitLabel(l29);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/lang/Throwable", "b", "c"}, 0, null);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l28);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("remove");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            Label l30 = new Label();
            mv.visitJumpInsn(IFEQ, l30);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            Label l31 = new Label();
            mv.visitJumpInsn(IFEQ, l31);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFEQ, l31);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76622_b", "(Lvg;)V", false);
            mv.visitLabel(l31);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitIincInsn(1, -1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(I)Ljava/lang/Object;", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72847_b", "(Lvg;)V", false);
            mv.visitLabel(l30);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitLabel(l27);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(1, 1);
            mv.visitJumpInsn(GOTO, l23);
            mv.visitLabel(l24);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("blockEntities");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76318_c", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_147481_N", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
            Label l32 = new Label();
            mv.visitJumpInsn(IFNE, l32);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 1);
            Label l33 = new Label();
            mv.visitLabel(l33);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l34 = new Label();
            mv.visitJumpInsn(IFEQ, l34);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "onChunkUnload", "()V", false);
            mv.visitJumpInsn(GOTO, l33);
            mv.visitLabel(l34);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitTypeInsn(NEW, "java/util/IdentityHashMap");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/util/IdentityHashMap", "<init>", "()V", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "newSetFromMap", "(Ljava/util/Map;)Ljava/util/Set;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "addAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175730_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "removeAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
            mv.visitLabel(l32);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175730_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 1);
            Label l35 = new Label();
            mv.visitLabel(l35);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l36 = new Label();
            mv.visitJumpInsn(IFEQ, l36);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145837_r", "()Z", false);
            Label l37 = new Label();
            mv.visitJumpInsn(IFNE, l37);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145830_o", "()Z", false);
            mv.visitJumpInsn(IFEQ, l37);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;Z)Z", false);
            mv.visitJumpInsn(IFEQ, l37);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177743_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l37);
            mv.visitLabel(l8);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInvokeDynamicInsn("get", "(Lavj;)Ljava/util/function/Supplier;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"), new Object[]{Type.getType("()Ljava/lang/Object;"), new Handle(Opcodes.H_INVOKESTATIC, "amu", "lambda$updateEntities$1", "(Lavj;)Ljava/lang/String;"), Type.getType("()Ljava/lang/String;")});
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_194340_a", "(Ljava/util/function/Supplier;)V", false);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "TILE_ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackStart", "(Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitTypeInsn(CHECKCAST, "nx");
            mv.visitMethodInsn(INVOKEINTERFACE, "nx", "func_73660_a", "()V", true);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/server/timings/TimeTracker", "TILE_ENTITY_UPDATE", "Lnet/minecraftforge/server/timings/TimeTracker;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/server/timings/TimeTracker", "trackEnd", "(Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitLabel(l9);
            mv.visitJumpInsn(GOTO, l37);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_FULL, 4, new Object[]{"amu", "java/util/Iterator", "avj", "et"}, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitLdcInsn("Ticking block entity");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Block entity being ticked");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145828_a", "(Lc;)V", false);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/ForgeModContainer", "removeErroringTileEntities", "Z");
            Label l38 = new Label();
            mv.visitJumpInsn(IFEQ, l38);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/fml/common/FMLLog", "log", "Lorg/apache/logging/log4j/Logger;");
            mv.visitLdcInsn("{}");
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_71502_e", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "org/apache/logging/log4j/Logger", "fatal", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145843_s", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175713_t", "(Let;)V", false);
            mv.visitJumpInsn(GOTO, l37);
            mv.visitLabel(l38);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/lang/Throwable", "b", "c"}, 0, null);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l37);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "java/util/Iterator", "avj"}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145837_r", "()Z", false);
            Label l39 = new Label();
            mv.visitJumpInsn(IFEQ, l39);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l39);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "axw$a", "CHECK", "Laxw$a;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177424_a", "(Let;Laxw$a;)Lavj;", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitJumpInsn(IF_ACMPNE, l39);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177425_e", "(Let;)V", false);
            mv.visitLabel(l39);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitJumpInsn(GOTO, l35);
            mv.visitLabel(l36);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_0);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_147481_N", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("pendingBlockEntities");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76318_c", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "isEmpty", "()Z", true);
            Label l40 = new Label();
            mv.visitJumpInsn(IFNE, l40);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l41 = new Label();
            mv.visitLabel(l41);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l42 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l42);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145837_r", "()Z", false);
            Label l43 = new Label();
            mv.visitJumpInsn(IFNE, l43);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "contains", "(Ljava/lang/Object;)Z", true);
            Label l44 = new Label();
            mv.visitJumpInsn(IFNE, l44);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175700_a", "(Lavj;)Z", false);
            mv.visitInsn(POP);
            mv.visitLabel(l44);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"avj"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l43);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177435_g", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177426_a", "(Let;Lavj;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(ICONST_3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184138_a", "(Let;Lawt;Lawt;I)V", false);
            mv.visitLabel(l43);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l41);
            mv.visitLabel(l42);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "clear", "()V", true);
            mv.visitLabel(l40);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 7);
            mv.visitEnd();
        }

        dump2(cw); //Had to split this into parts due to "code too large" for single method

        cw.visitEnd();

        return cw.toByteArray();
    }

    protected static void dump2(ClassWriter cw)
    {
        MethodVisitor mv;
        AnnotationVisitor av0;

        {
            mv = cw.visitMethod(ACC_PROTECTED, "func_184147_l", "()V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175700_a", "(Lavj;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145831_w", "()Lamu;", false);
            mv.visitVarInsn(ALOAD, 0);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145834_a", "(Lamu;)V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147481_N", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "nx");
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175730_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "onLoad", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ICONST_2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184138_a", "(Let;Lawt;Lawt;I)V", false);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_147448_a", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lavj;>;)V", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147481_N", "Z");
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145831_w", "()Lamu;", false);
            mv.visitVarInsn(ALOAD, 0);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145834_a", "(Lamu;)V", false);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "addAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175700_a", "(Lavj;)Z", false);
            mv.visitInsn(POP);
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72870_g", "(Lvg;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72866_a", "(Lvg;Z)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72866_a", "(Lvg;Z)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitTypeInsn(INSTANCEOF, "aed");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getPersistentChunks", "()Lcom/google/common/collect/ImmutableSetMultimap;", false);
            mv.visitTypeInsn(NEW, "amn");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitMethodInsn(INVOKESPECIAL, "amn", "<init>", "(II)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "com/google/common/collect/ImmutableSetMultimap", "containsKey", "(Ljava/lang/Object;)Z", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ILOAD, 5);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitInsn(ICONST_0);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ILOAD, 2);
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(ISUB);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(IADD);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(IADD);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitInsn(ICONST_1);
            Label l5 = new Label();
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ILOAD, 7);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNE, l6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "canEntityUpdate", "(Lvg;)Z", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(RETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "vg", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70142_S", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70137_T", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70136_U", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70177_z", "F");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70126_B", "F");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70125_A", "F");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70127_C", "F");
            mv.visitVarInsn(ILOAD, 2);
            Label l7 = new Label();
            mv.visitJumpInsn(IFEQ, l7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            mv.visitJumpInsn(IFEQ, l7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70173_aa", "I");
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70173_aa", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184218_aH", "()Z", false);
            Label l8 = new Label();
            mv.visitJumpInsn(IFEQ, l8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70098_U", "()V", false);
            mv.visitJumpInsn(GOTO, l7);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "updateBlocked", "Z");
            mv.visitJumpInsn(IFNE, l7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_70071_h_", "()V", false);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitLdcInsn("chunkCheck");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "startSection", "(Ljava/lang/String;)V", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l9 = new Label();
            mv.visitJumpInsn(IFNE, l9);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
            Label l10 = new Label();
            mv.visitJumpInsn(IFEQ, l10);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70142_S", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70165_t", "D");
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l11 = new Label();
            mv.visitJumpInsn(IFNE, l11);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
            Label l12 = new Label();
            mv.visitJumpInsn(IFEQ, l12);
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70137_T", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70163_u", "D");
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l13 = new Label();
            mv.visitJumpInsn(IFNE, l13);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
            Label l14 = new Label();
            mv.visitJumpInsn(IFEQ, l14);
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70136_U", "D");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70161_v", "D");
            mv.visitLabel(l14);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70125_A", "F");
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l15 = new Label();
            mv.visitJumpInsn(IFNE, l15);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70125_A", "F");
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
            Label l16 = new Label();
            mv.visitJumpInsn(IFEQ, l16);
            mv.visitLabel(l15);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70127_C", "F");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70125_A", "F");
            mv.visitLabel(l16);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70177_z", "F");
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isNaN", "(D)Z", false);
            Label l17 = new Label();
            mv.visitJumpInsn(IFNE, l17);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70177_z", "F");
            mv.visitInsn(F2D);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "isInfinite", "(D)Z", false);
            Label l18 = new Label();
            mv.visitJumpInsn(IFEQ, l18);
            mv.visitLabel(l17);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70126_B", "F");
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70177_z", "F");
            mv.visitLabel(l18);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            Label l19 = new Label();
            mv.visitJumpInsn(IFEQ, l19);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IF_ICMPNE, l19);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70162_ai", "I");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitJumpInsn(IF_ICMPNE, l19);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitVarInsn(ILOAD, 5);
            Label l20 = new Label();
            mv.visitJumpInsn(IF_ICMPEQ, l20);
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            Label l21 = new Label();
            mv.visitJumpInsn(IFEQ, l21);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFEQ, l21);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70176_ah", "I");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70164_aj", "I");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70162_ai", "I");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76608_a", "(Lvg;I)V", false);
            mv.visitLabel(l21);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184189_br", "()Z", false);
            Label l22 = new Label();
            mv.visitJumpInsn(IFNE, l22);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            mv.visitJumpInsn(IFNE, l22);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70175_ag", "Z");
            mv.visitJumpInsn(GOTO, l20);
            mv.visitLabel(l22);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76612_a", "(Lvg;)V", false);
            mv.visitLabel(l20);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72984_F", "Lrl;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "rl", "func_76319_b", "()V", false);
            mv.visitVarInsn(ILOAD, 2);
            Label l23 = new Label();
            mv.visitJumpInsn(IFEQ, l23);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70175_ag", "Z");
            mv.visitJumpInsn(IFEQ, l23);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184188_bt", "()Ljava/util/List;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 6);
            Label l24 = new Label();
            mv.visitLabel(l24);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            mv.visitJumpInsn(IFEQ, l23);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            Label l25 = new Label();
            mv.visitJumpInsn(IFNE, l25);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184187_bx", "()Lvg;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitJumpInsn(IF_ACMPNE, l25);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72870_g", "(Lvg;)V", false);
            Label l26 = new Label();
            mv.visitJumpInsn(GOTO, l26);
            mv.visitLabel(l25);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"vg"}, 0, null);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184210_p", "()V", false);
            mv.visitLabel(l26);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitJumpInsn(GOTO, l24);
            mv.visitLabel(l23);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(8, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72855_b", "(Lbhb;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72855_b", "(Lbhb;Lvg;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72855_b", "(Lbhb;Lvg;)Z", null, null);
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72839_b", "(Lvg;Lbhb;)Ljava/util/List;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/util/List", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70128_L", "Z");
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70156_m", "Z");
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNULL, l3);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_184223_x", "(Lvg;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"vg"}, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(4, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72829_c", "(Lbhb;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ISTORE, 9);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "bhb", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$b", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 3);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 10);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 5);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 11);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 7);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitFieldInsn(GETSTATIC, "bcz", "field_151579_a", "Lbcz;");
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l6);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(11, 1);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 13);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72953_d", "(Lbhb;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ISTORE, 9);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "bhb", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$b", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 3);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 10);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 5);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 11);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 7);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isAABBInsideLiquid", "(Lamu;Let;Lbhb;)Ljava/lang/Boolean;", false);
            mv.visitVarInsn(ASTORE, 13);
            mv.visitVarInsn(ALOAD, 13);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNULL, l6);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNE, l7);
            Label l8 = new Label();
            mv.visitJumpInsn(GOTO, l8);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"awt", "java/lang/Boolean"}, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitMethodInsn(INVOKEVIRTUAL, "bcz", "func_76224_d", "()Z", false);
            mv.visitJumpInsn(IFEQ, l8);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(11, 1);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 14);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_147470_e", "(Lbhb;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ISTORE, 9);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "bhb", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$b", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 3);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l2);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 10);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 5);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 11);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 7);
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150480_ab", "Laqq;");
            Label l7 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l7);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150356_k", "Laqe;");
            mv.visitJumpInsn(IF_ACMPEQ, l7);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150353_l", "Lauf;");
            Label l8 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l8);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"aow"}, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(III)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isBurning", "(Lamy;Let;)Z", false);
            Label l9 = new Label();
            mv.visitJumpInsn(IFEQ, l9);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(11, 1);
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(8, 13);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72918_a", "(Lbhb;Lbcz;Lvg;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175663_a", "(IIIIIIZ)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "bhb", "bcz", "vg", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitFieldInsn(GETSTATIC, "bhe", "field_186680_a", "Lbhe;");
            mv.visitVarInsn(ASTORE, 11);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 13);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 14, new Object[]{"amu", "bhb", "bcz", "vg", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "bhe", "et$b", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 5);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l2);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 14);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ILOAD, 7);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ISTORE, 15);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 15);
            mv.visitVarInsn(ILOAD, 9);
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l6);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ILOAD, 15);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 16);
            mv.visitVarInsn(ALOAD, 16);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 17);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 16);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitInsn(I2D);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isEntityInsideMaterial", "(Lamy;Let;Lawt;Lvg;DLbcz;Z)Ljava/lang/Boolean;", false);
            mv.visitVarInsn(ASTORE, 18);
            mv.visitVarInsn(ALOAD, 18);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNULL, l7);
            mv.visitVarInsn(ALOAD, 18);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            mv.visitInsn(ICONST_1);
            mv.visitJumpInsn(IF_ICMPNE, l7);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176197_a", "(Lamu;Let;Lvg;Lbhe;)Lbhe;", false);
            mv.visitVarInsn(ASTORE, 11);
            Label l8 = new Label();
            mv.visitJumpInsn(GOTO, l8);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"awt", "aow", "java/lang/Boolean"}, 0, null);
            mv.visitVarInsn(ALOAD, 18);
            Label l9 = new Label();
            mv.visitJumpInsn(IFNULL, l9);
            mv.visitVarInsn(ALOAD, 18);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            mv.visitJumpInsn(IFNE, l9);
            mv.visitJumpInsn(GOTO, l8);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 16);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitVarInsn(ALOAD, 2);
            mv.visitJumpInsn(IF_ACMPNE, l8);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IADD);
            mv.visitInsn(I2F);
            mv.visitVarInsn(ALOAD, 16);
            mv.visitFieldInsn(GETSTATIC, "aru", "field_176367_b", "Laxi;");
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177229_b", "(Laxj;)Ljava/lang/Comparable;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            mv.visitMethodInsn(INVOKESTATIC, "aru", "func_149801_b", "(I)F", false);
            mv.visitInsn(FSUB);
            mv.visitInsn(F2D);
            mv.visitVarInsn(DSTORE, 19);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitInsn(I2D);
            mv.visitVarInsn(DLOAD, 19);
            mv.visitInsn(DCMPL);
            mv.visitJumpInsn(IFLT, l8);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176197_a", "(Lamu;Let;Lvg;Lbhe;)Lbhe;", false);
            mv.visitVarInsn(ASTORE, 11);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitIincInsn(15, 1);
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(14, 1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(13, 1);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhe", "lengthVector", "()D", false);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPL);
            Label l10 = new Label();
            mv.visitJumpInsn(IFLE, l10);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_96092_aw", "()Z", false);
            mv.visitJumpInsn(IFEQ, l10);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhe", "func_72432_b", "()Lbhe;", false);
            mv.visitVarInsn(ASTORE, 11);
            mv.visitLdcInsn(new Double("0.014"));
            mv.visitVarInsn(DSTORE, 13);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70159_w", "D");
            mv.visitVarInsn(ALOAD, 11);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72450_a", "D");
            mv.visitLdcInsn(new Double("0.014"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70159_w", "D");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70181_x", "D");
            mv.visitVarInsn(ALOAD, 11);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72448_b", "D");
            mv.visitLdcInsn(new Double("0.014"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70181_x", "D");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(DUP);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70179_y", "D");
            mv.visitVarInsn(ALOAD, 11);
            mv.visitFieldInsn(GETFIELD, "bhe", "field_72449_c", "D");
            mv.visitLdcInsn(new Double("0.014"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitFieldInsn(PUTFIELD, "vg", "field_70179_y", "D");
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(9, 21);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72875_a", "(Lbhb;Lbcz;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitMethodInsn(INVOKESTATIC, "et$b", "func_185346_s", "()Let$b;", false);
            mv.visitVarInsn(ASTORE, 9);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ISTORE, 10);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 11, new Object[]{"amu", "bhb", "bcz", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$b", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 4);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 11);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 6);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 12);
            Label l4 = new Label();
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 8);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_189535_a", "(III)Let$b;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 13);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isAABBInsideMaterial", "(Lamu;Let;Lbhb;Lbcz;)Ljava/lang/Boolean;", false);
            mv.visitVarInsn(ASTORE, 14);
            mv.visitVarInsn(ALOAD, 14);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNULL, l6);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNE, l7);
            Label l8 = new Label();
            mv.visitJumpInsn(GOTO, l8);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"awt", "java/lang/Boolean"}, 0, null);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 13);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitVarInsn(ALOAD, 2);
            mv.visitJumpInsn(IF_ACMPNE, l8);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(12, 1);
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(11, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$b", "func_185344_t", "()V", false);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 15);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72876_a", "(Lvg;DDDFZ)Lnet/minecraft/world/Explosion;", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72885_a", "(Lvg;DDDFZZ)Lnet/minecraft/world/Explosion;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(11, 10);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72885_a", "(Lvg;DDDFZZ)Lnet/minecraft/world/Explosion;", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitTypeInsn(NEW, "net/minecraft/world/Explosion");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitVarInsn(FLOAD, 8);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/Explosion", "<init>", "(Lamu;Lvg;DDDFZZ)V", false);
            mv.visitVarInsn(ASTORE, 11);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "onExplosionStart", "(Lamu;Lnet/minecraft/world/Explosion;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"net/minecraft/world/Explosion"}, 0, null);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/Explosion", "doExplosionA", "()V", false);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/Explosion", "doExplosionB", "(Z)V", false);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(13, 12);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72842_a", "(Lbhe;Lbhb;)F", null, null);
            mv.visitCode();
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 3);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 5);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitInsn(DMUL);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DADD);
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 7);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "floor", "(D)D", false);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitInsn(DMUL);
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 9);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DCONST_1);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "floor", "(D)D", false);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DMUL);
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitInsn(DDIV);
            mv.visitVarInsn(DSTORE, 11);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPL);
            mv.visitJumpInsn(IFLT, l0);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPL);
            mv.visitJumpInsn(IFLT, l0);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 13);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 14);
            mv.visitInsn(FCONST_0);
            mv.visitVarInsn(FSTORE, 15);
            Label l1 = new Label();
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_FULL, 11, new Object[]{"amu", "bhe", "bhb", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.FLOAT}, 0, new Object[]{});
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(FCONST_1);
            mv.visitInsn(FCMPG);
            Label l2 = new Label();
            mv.visitJumpInsn(IFGT, l2);
            mv.visitInsn(FCONST_0);
            mv.visitVarInsn(FSTORE, 16);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(FCONST_1);
            mv.visitInsn(FCMPG);
            Label l4 = new Label();
            mv.visitJumpInsn(IFGT, l4);
            mv.visitInsn(FCONST_0);
            mv.visitVarInsn(FSTORE, 17);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(FLOAD, 17);
            mv.visitInsn(FCONST_1);
            mv.visitInsn(FCMPG);
            Label l6 = new Label();
            mv.visitJumpInsn(IFGT, l6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(F2D);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 18);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72337_e", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72338_b", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(F2D);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitInsn(DSUB);
            mv.visitVarInsn(FLOAD, 17);
            mv.visitInsn(F2D);
            mv.visitInsn(DMUL);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DSTORE, 22);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "bhe");
            mv.visitInsn(DUP);
            mv.visitVarInsn(DLOAD, 18);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitInsn(DADD);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(DLOAD, 22);
            mv.visitVarInsn(DLOAD, 11);
            mv.visitInsn(DADD);
            mv.visitMethodInsn(INVOKESPECIAL, "bhe", "<init>", "(DDD)V", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72933_a", "(Lbhe;Lbhe;)Lbhc;", false);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNONNULL, l7);
            mv.visitIincInsn(13, 1);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, null);
            mv.visitIincInsn(14, 1);
            mv.visitVarInsn(FLOAD, 17);
            mv.visitInsn(F2D);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DADD);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 17);
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_FULL, 12, new Object[]{"amu", "bhe", "bhb", Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.DOUBLE, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.FLOAT, Opcodes.FLOAT}, 0, new Object[]{});
            mv.visitVarInsn(FLOAD, 16);
            mv.visitInsn(F2D);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitInsn(DADD);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 16);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(FLOAD, 15);
            mv.visitInsn(F2D);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitInsn(DADD);
            mv.visitInsn(D2F);
            mv.visitVarInsn(FSTORE, 15);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitInsn(I2F);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitInsn(I2F);
            mv.visitInsn(FDIV);
            mv.visitInsn(FRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(11, 24);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175719_a", "(Laed;Let;Lfa;)Z", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177972_a", "(Lfa;)Let;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150480_ab", "Laqq;");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitIntInsn(SIPUSH, 1009);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180498_a", "(Laed;ILet;I)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175698_g", "(Let;)Z", false);
            mv.visitInsn(POP);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72981_t", "()Ljava/lang/String;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            mv.visitLdcInsn("All: ");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(I)Ljava/lang/StringBuilder;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72827_u", "()Ljava/lang/String;", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73020_y", "Laxr;");
            mv.visitMethodInsn(INVOKEINTERFACE, "axr", "func_73148_d", "()Ljava/lang/String;", true);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175625_s", "(Let;)Lavj;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147481_N", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_189508_F", "(Let;)Lavj;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"avj"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNONNULL, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "axw$a", "IMMEDIATE", "Laxw$a;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177424_a", "(Let;Laxw$a;)Lavj;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNONNULL, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_189508_F", "(Let;)Lavj;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_189508_F", "(Let;)Lavj;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145837_r", "()Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "equals", "(Ljava/lang/Object;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175690_a", "(Let;Lavj;)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_185334_h", "()Let;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitJumpInsn(IFNULL, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145837_r", "()Z", false);
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147481_N", "Z");
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174878_a", "(Let;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145831_w", "()Lamu;", false);
            mv.visitVarInsn(ALOAD, 0);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145834_a", "(Lamu;)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 3);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_174877_v", "()Let;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "equals", "(Ljava/lang/Object;)Z", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145843_s", "()V", false);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "remove", "()V", true);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            Label l6 = new Label();
            mv.visitJumpInsn(IFNULL, l6);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177426_a", "(Let;Lavj;)V", false);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"axw"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175700_a", "(Lavj;)Z", false);
            mv.visitInsn(POP);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175713_t", "(Let;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175625_s", "(Let;)Lavj;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNULL, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147481_N", "Z");
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "avj", "func_145843_s", "()V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitTypeInsn(INSTANCEOF, "nx");
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"avj"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNULL, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147484_a", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147482_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175730_i", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "remove", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177425_e", "(Let;)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175666_e", "(Let;Laow;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_147457_a", "(Lavj;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_147483_b", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175665_u", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getCollisionBoundingBox", "(Lamy;Let;)Lbhb;", true);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETSTATIC, "aow", "field_185506_k", "Lbhb;");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhb", "func_72320_b", "()D", false);
            mv.visitInsn(DCONST_1);
            mv.visitInsn(DCMPL);
            mv.visitJumpInsn(IFLT, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"bhb"}, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175677_d", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_189509_E", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73020_y", "Laxr;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(ICONST_4);
            mv.visitInsn(ISHR);
            mv.visitMethodInsn(INVOKEINTERFACE, "axr", "func_186026_b", "(II)Laxw;", true);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNULL, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76621_g", "()Z", false);
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149721_r", "(Lawt;Lamy;Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"axw"}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72966_v", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72967_a", "(F)I", false);
            mv.visitVarInsn(ISTORE, 1);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73008_k", "I");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73008_k", "I");
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72891_a", "(ZZ)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72985_G", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72992_H", "Z");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "setAllowedSpawnTypes", "(ZZ)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72835_b", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72979_l", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "func_72947_a", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "calculateInitialWeather", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "calculateInitialWeatherBody", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76059_o", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(FCONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73004_o", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76061_m", "()Z", false);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(FCONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73017_q", "F");
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "func_72979_l", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "updateWeather", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "updateWeatherBody", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_191066_m", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72995_K", "Z");
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_82736_K", "()Lamr;", false);
            mv.visitLdcInsn("doWeatherCycle");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amr", "func_82766_b", "(Ljava/lang/String;)Z", false);
            mv.visitVarInsn(ISTORE, 1);
            mv.visitVarInsn(ILOAD, 1);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_176133_A", "()I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            Label l2 = new Label();
            mv.visitJumpInsn(IFLE, l2);
            mv.visitIincInsn(2, -1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_176142_i", "(I)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76061_m", "()Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitInsn(ICONST_1);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER}, 1, new Object[]{"bfd"});
            mv.visitInsn(ICONST_2);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[]{"bfd", Opcodes.INTEGER});
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76090_f", "(I)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76059_o", "()Z", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitInsn(ICONST_1);
            Label l6 = new Label();
            mv.visitJumpInsn(GOTO, l6);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bfd"});
            mv.visitInsn(ICONST_2);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[]{"bfd", Opcodes.INTEGER});
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76080_g", "(I)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76071_n", "()I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitVarInsn(ILOAD, 3);
            Label l7 = new Label();
            mv.visitJumpInsn(IFGT, l7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76061_m", "()Z", false);
            Label l8 = new Label();
            mv.visitJumpInsn(IFEQ, l8);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitIntInsn(SIPUSH, 12000);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
            mv.visitIntInsn(SIPUSH, 3600);
            mv.visitInsn(IADD);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76090_f", "(I)V", false);
            Label l9 = new Label();
            mv.visitJumpInsn(GOTO, l9);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitLdcInsn(new Integer(168000));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
            mv.visitIntInsn(SIPUSH, 12000);
            mv.visitInsn(IADD);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76090_f", "(I)V", false);
            mv.visitJumpInsn(GOTO, l9);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(3, -1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76090_f", "(I)V", false);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IFGT, l9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76061_m", "()Z", false);
            Label l10 = new Label();
            mv.visitJumpInsn(IFNE, l10);
            mv.visitInsn(ICONST_1);
            Label l11 = new Label();
            mv.visitJumpInsn(GOTO, l11);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bfd"});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_FULL, 4, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[]{"bfd", Opcodes.INTEGER});
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76069_a", "(Z)V", false);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76083_p", "()I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ILOAD, 4);
            Label l12 = new Label();
            mv.visitJumpInsn(IFGT, l12);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76059_o", "()Z", false);
            Label l13 = new Label();
            mv.visitJumpInsn(IFEQ, l13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitIntInsn(SIPUSH, 12000);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
            mv.visitIntInsn(SIPUSH, 12000);
            mv.visitInsn(IADD);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76080_g", "(I)V", false);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitLdcInsn(new Integer(168000));
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "nextInt", "(I)I", false);
            mv.visitIntInsn(SIPUSH, 12000);
            mv.visitInsn(IADD);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76080_g", "(I)V", false);
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(4, -1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76080_g", "(I)V", false);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitJumpInsn(IFGT, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76059_o", "()Z", false);
            Label l14 = new Label();
            mv.visitJumpInsn(IFNE, l14);
            mv.visitInsn(ICONST_1);
            Label l15 = new Label();
            mv.visitJumpInsn(GOTO, l15);
            mv.visitLabel(l14);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bfd"});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l15);
            mv.visitFrame(Opcodes.F_FULL, 5, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 2, new Object[]{"bfd", Opcodes.INTEGER});
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76084_b", "(Z)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73017_q", "F");
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73018_p", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76061_m", "()Z", false);
            Label l16 = new Label();
            mv.visitJumpInsn(IFEQ, l16);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73017_q", "F");
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.01"));
            mv.visitInsn(DADD);
            mv.visitInsn(D2F);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73017_q", "F");
            Label l17 = new Label();
            mv.visitJumpInsn(GOTO, l17);
            mv.visitLabel(l16);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73017_q", "F");
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.01"));
            mv.visitInsn(DSUB);
            mv.visitInsn(D2F);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73017_q", "F");
            mv.visitLabel(l17);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73017_q", "F");
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73017_q", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73004_o", "F");
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73003_n", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76059_o", "()Z", false);
            Label l18 = new Label();
            mv.visitJumpInsn(IFEQ, l18);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73004_o", "F");
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.01"));
            mv.visitInsn(DADD);
            mv.visitInsn(D2F);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73004_o", "F");
            Label l19 = new Label();
            mv.visitJumpInsn(GOTO, l19);
            mv.visitLabel(l18);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73004_o", "F");
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.01"));
            mv.visitInsn(DSUB);
            mv.visitInsn(D2F);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73004_o", "F");
            mv.visitLabel(l19);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73004_o", "F");
            mv.visitInsn(FCONST_0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76131_a", "(FFF)F", false); //TODO This incorrectly had func_76125_a; another override of MathHelper.clamp()
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73004_o", "F");
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "func_147467_a", "(IILaxw;)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76594_o", "()V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "func_147456_g", "()V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_189507_a", "(Let;Lawt;Ljava/util/Random;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72999_e", "Z");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_180650_b", "(Lamu;Let;Lawt;Ljava/util/Random;)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ICONST_0);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_72999_e", "Z");
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175675_v", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175670_e", "(Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175662_w", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175670_e", "(Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175670_e", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "canBlockFreeze", "(Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "canBlockFreezeBody", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180494_b", "(Let;)Lanh;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "anh", "func_180626_a", "(Let;)F", false);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitLdcInsn(new Float("0.15"));
            mv.visitInsn(FCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"anh", Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFLT, l1);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitIntInsn(SIPUSH, 256);
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "BLOCK", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitIntInsn(BIPUSH, 10);
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150355_j", "Lauf;");
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150358_i", "Laqe;");
            mv.visitJumpInsn(IF_ACMPNE, l1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"awt", "aow"}, 0, null);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitFieldInsn(GETSTATIC, "aru", "field_176367_b", "Laxi;");
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177229_b", "(Laxj;)Ljava/lang/Comparable;", true);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            mv.visitJumpInsn(IFNE, l1);
            mv.visitVarInsn(ILOAD, 2);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175696_F", "(Let;)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175696_F", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175696_F", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175696_F", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitInsn(ICONST_1);
            Label l5 = new Label();
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitJumpInsn(IFNE, l1);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_175696_F", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitFieldInsn(GETSTATIC, "bcz", "field_151586_h", "Lbcz;");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175708_f", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "canSnowAt", "(Let;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "canSnowAtBody", "(Let;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180494_b", "(Let;)Lanh;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "anh", "func_180626_a", "(Let;)F", false);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitLdcInsn(new Float("0.15"));
            mv.visitInsn(FCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLT, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"anh", Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFLT, l2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitIntInsn(SIPUSH, 256);
            mv.visitJumpInsn(IF_ICMPGE, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "BLOCK", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitIntInsn(BIPUSH, 10);
            mv.visitJumpInsn(IF_ICMPGE, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "isAir", "(Lawt;Lamy;Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150431_aC", "Laow;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176196_c", "(Lamu;Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175664_x", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "func_191066_m", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180500_c", "(Lana;Let;)Z", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETSTATIC, "ana", "BLOCK", "Lana;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180500_c", "(Lana;Let;)Z", false);
            mv.visitInsn(IOR);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE, "func_175638_a", "(Let;Lana;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175678_i", "(Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETSTATIC, "ana", "SKY", "Lana;");
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l1);
            mv.visitInsn(ICONST_0);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"awt"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149750_m", "(Lawt;Lamy;Let;)I", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149717_k", "(Lawt;Lamy;Let;)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_1);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIntInsn(BIPUSH, 15);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIntInsn(BIPUSH, 14);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitMethodInsn(INVOKESTATIC, "fa", "values", "()[Lfa;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 8);
            Label l6 = new Label();
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ILOAD, 7);
            Label l7 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l7);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 9);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177972_a", "(Lfa;)Let;", false);
            mv.visitVarInsn(ASTORE, 10);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ILOAD, 4);
            Label l8 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l8);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"fa", "et", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIntInsn(BIPUSH, 14);
            Label l9 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l9);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitIincInsn(8, 1);
            mv.visitJumpInsn(GOTO, l6);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 12);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180500_c", "(Lana;Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175663_a", "(Let;IZ)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitIntInsn(BIPUSH, 18);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175663_a", "(Let;IZ)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitIntInsn(BIPUSH, 17);
            Label l2 = new Label();
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitVarInsn(ISTORE, 3);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175638_a", "(Let;Lana;)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ISTORE, 9);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitVarInsn(ISTORE, 10);
            mv.visitTypeInsn(NEW, "et$a");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "et$a", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 21);
            mv.visitTypeInsn(NEW, "et$a");
            mv.visitInsn(DUP);
            mv.visitMethodInsn(INVOKESPECIAL, "et$a", "<init>", "()V", false);
            mv.visitVarInsn(ASTORE, 22);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 6);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIincInsn(5, 1);
            mv.visitLdcInsn(new Integer(133152));
            mv.visitInsn(IASTORE);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_FULL, 23, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a"}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIincInsn(5, 1);
            mv.visitLdcInsn(new Integer(133152));
            mv.visitVarInsn(ILOAD, 6);
            mv.visitIntInsn(BIPUSH, 18);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitInsn(IASTORE);
            Label l5 = new Label();
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            Label l6 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIincInsn(4, 1);
            mv.visitInsn(IALOAD);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 12);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 13);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 12);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 14);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 18);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IAND);
            mv.visitVarInsn(ISTORE, 23);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$a", "func_189535_a", "(III)Let$a;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 24);
            mv.visitVarInsn(ILOAD, 24);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitJumpInsn(IF_ICMPNE, l5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175653_a", "(Lana;Let;I)V", false);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitJumpInsn(IFLE, l5);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 15);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 16);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 17);
            mv.visitVarInsn(ILOAD, 15);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IF_ICMPGE, l5);
            mv.visitMethodInsn(INVOKESTATIC, "fa", "values", "()[Lfa;", false);
            mv.visitVarInsn(ASTORE, 26);
            mv.visitVarInsn(ALOAD, 26);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 27);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 28);
            Label l7 = new Label();
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_FULL, 29, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, "[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 28);
            mv.visitVarInsn(ILOAD, 27);
            Label l8 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l8);
            mv.visitVarInsn(ALOAD, 26);
            mv.visitVarInsn(ILOAD, 28);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 29);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ALOAD, 29);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetX", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 18);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ALOAD, 29);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetY", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 19);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ALOAD, 29);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetZ", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 20);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitVarInsn(ILOAD, 18);
            mv.visitVarInsn(ILOAD, 19);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$a", "func_189535_a", "(III)Let$a;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 30);
            mv.visitInsn(ICONST_1);
            mv.visitVarInsn(ALOAD, 30);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 30);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149717_k", "(Lawt;Lamy;Let;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 25);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 24);
            mv.visitVarInsn(ILOAD, 24);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitVarInsn(ILOAD, 25);
            mv.visitInsn(ISUB);
            Label l9 = new Label();
            mv.visitJumpInsn(IF_ICMPNE, l9);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitInsn(ARRAYLENGTH);
            mv.visitJumpInsn(IF_ICMPGE, l9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIincInsn(5, 1);
            mv.visitVarInsn(ILOAD, 18);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 19);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitIntInsn(BIPUSH, 12);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitVarInsn(ILOAD, 25);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 18);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitInsn(IASTORE);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_FULL, 29, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitIincInsn(28, 1);
            mv.visitJumpInsn(GOTO, l7);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_FULL, 25, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_FULL, 23, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a"}, 0, new Object[]{});
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ILOAD, 5);
            Label l10 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l10);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIincInsn(4, 1);
            mv.visitInsn(IALOAD);
            mv.visitVarInsn(ISTORE, 11);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 12);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 13);
            mv.visitVarInsn(ILOAD, 11);
            mv.visitIntInsn(BIPUSH, 12);
            mv.visitInsn(ISHR);
            mv.visitIntInsn(BIPUSH, 63);
            mv.visitInsn(IAND);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 14);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$a", "func_189535_a", "(III)Let$a;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ISTORE, 23);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESPECIAL, "amu", "func_175638_a", "(Let;Lana;)I", false);
            mv.visitVarInsn(ISTORE, 24);
            mv.visitVarInsn(ILOAD, 24);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitJumpInsn(IF_ICMPEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 21);
            mv.visitVarInsn(ILOAD, 24);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175653_a", "(Lana;Let;I)V", false);
            mv.visitVarInsn(ILOAD, 24);
            mv.visitVarInsn(ILOAD, 23);
            mv.visitJumpInsn(IF_ICMPLE, l4);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 15);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 16);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ISUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(I)I", false);
            mv.visitVarInsn(ISTORE, 17);
            mv.visitVarInsn(ILOAD, 15);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 17);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitInsn(ARRAYLENGTH);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitInsn(ISUB);
            mv.visitJumpInsn(IF_ICMPGE, l4);
            mv.visitMethodInsn(INVOKESTATIC, "fa", "values", "()[Lfa;", false);
            mv.visitVarInsn(ASTORE, 25);
            mv.visitVarInsn(ALOAD, 25);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 26);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 27);
            Label l11 = new Label();
            mv.visitLabel(l11);
            mv.visitFrame(Opcodes.F_FULL, 28, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER, "[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 27);
            mv.visitVarInsn(ILOAD, 26);
            Label l12 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l12);
            mv.visitVarInsn(ALOAD, 25);
            mv.visitVarInsn(ILOAD, 27);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 28);
            mv.visitVarInsn(ILOAD, 12);
            mv.visitVarInsn(ALOAD, 28);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetX", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 18);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ALOAD, 28);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetY", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 19);
            mv.visitVarInsn(ILOAD, 14);
            mv.visitVarInsn(ALOAD, 28);
            mv.visitMethodInsn(INVOKEVIRTUAL, "fa", "getFrontOffsetZ", "()I", false);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ISTORE, 20);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitVarInsn(ILOAD, 18);
            mv.visitVarInsn(ILOAD, 19);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et$a", "func_189535_a", "(III)Let$a;", false);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 22);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175642_b", "(Lana;Let;)I", false);
            mv.visitVarInsn(ILOAD, 24);
            Label l13 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72994_J", "[I");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIincInsn(5, 1);
            mv.visitVarInsn(ILOAD, 18);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 19);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitIntInsn(BIPUSH, 6);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitVarInsn(ILOAD, 20);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ISUB);
            mv.visitIntInsn(BIPUSH, 32);
            mv.visitInsn(IADD);
            mv.visitIntInsn(BIPUSH, 12);
            mv.visitInsn(ISHL);
            mv.visitInsn(IOR);
            mv.visitInsn(IASTORE);
            mv.visitLabel(l13);
            mv.visitFrame(Opcodes.F_FULL, 28, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER, "[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitIincInsn(27, 1);
            mv.visitJumpInsn(GOTO, l11);
            mv.visitLabel(l12);
            mv.visitFrame(Opcodes.F_FULL, 25, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_FULL, 23, new Object[]{"amu", "ana", "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "et$a", "et$a"}, 0, new Object[]{});
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 31);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72955_a", "(Z)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72920_a", "(Laxw;Z)Ljava/util/List;", "(Laxw;Z)Ljava/util/List<Lanf;>;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72920_a", "(Lbbg;Z)Ljava/util/List;", "(Lbbg;Z)Ljava/util/List<Lanf;>;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72839_b", "(Lvg;Lbhb;)Ljava/util/List;", "(Lvg;Lbhb;)Ljava/util/List<Lvg;>;", null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_180132_d", "Lcom/google/common/base/Predicate;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175674_a", "(Lvg;Lbhb;Lcom/google/common/base/Predicate;)Ljava/util/List;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175674_a", "(Lvg;Lbhb;Lcom/google/common/base/Predicate;)Ljava/util/List;", "(Lvg;Lbhb;Lcom/google/common/base/Predicate<-Lvg;>;)Ljava/util/List<Lvg;>;", null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(2, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DADD);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DADD);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 8);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ISTORE, 9);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "vg", "bhb", "com/google/common/base/Predicate", "java/util/List", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 6);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l1);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 10);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 8);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177414_a", "(Lvg;Lbhb;Ljava/util/List;Lcom/google/common/base/Predicate;)V", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(5, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175644_a", "(Ljava/lang/Class;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lvg;>(Ljava/lang/Class<+TT;>;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
            mv.visitCode();
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/util/List", "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175661_b", "(Ljava/lang/Class;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lvg;>(Ljava/lang/Class<+TT;>;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
            mv.visitCode();
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/util/List", "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175647_a", "(Ljava/lang/Class;Lbhb;)Ljava/util/List;", "<T:Lvg;>(Ljava/lang/Class<+TT;>;Lbhb;)Ljava/util/List<TT;>;", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_180132_d", "Lcom/google/common/base/Predicate;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175647_a", "(Ljava/lang/Class;Lbhb;Lcom/google/common/base/Predicate;)Ljava/util/List;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175647_a", "(Ljava/lang/Class;Lbhb;Lcom/google/common/base/Predicate;)Ljava/util/List;", "<T:Lvg;>(Ljava/lang/Class<+TT;>;Lbhb;Lcom/google/common/base/Predicate<-TT;>;)Ljava/util/List<TT;>;", null);
            {
                av0 = mv.visitParameterAnnotation(2, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72340_a", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72336_d", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DADD);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72339_c", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DSUB);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(GETFIELD, "bhb", "field_72334_f", "D");
            mv.visitFieldInsn(GETSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(DADD);
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76123_f", "(D)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Lists", "newArrayList", "()Ljava/util/ArrayList;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ISTORE, 9);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 10, new Object[]{"amu", "java/lang/Class", "bhb", "com/google/common/base/Predicate", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "java/util/List", Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 5);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitVarInsn(ISTORE, 10);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitVarInsn(ILOAD, 7);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175680_a", "(IIZ)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ILOAD, 10);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177430_a", "(Ljava/lang/Class;Lbhb;Ljava/util/List;Lcom/google/common/base/Predicate;)V", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(10, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(5, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72857_a", "(Ljava/lang/Class;Lbhb;Lvg;)Lvg;", "<T:Lvg;>(Ljava/lang/Class<+TT;>;Lbhb;TT;)TT;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175647_a", "(Ljava/lang/Class;Lbhb;)Ljava/util/List;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitLdcInsn(new Double("1.7976931348623157E308"));
            mv.visitVarInsn(DSTORE, 6);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 8);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 8, new Object[]{"amu", "java/lang/Class", "bhb", "vg", "java/util/List", "vg", Opcodes.DOUBLE, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 8);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitVarInsn(ILOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 9);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 3);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_180132_d", "Lcom/google/common/base/Predicate;");
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "func_174818_b", "(Lvg;)D", false);
            mv.visitVarInsn(DSTORE, 10);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitVarInsn(DLOAD, 6);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGT, l2);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitVarInsn(DSTORE, 6);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(8, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(4, 12);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_73045_a", "(I)Lvg;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175729_l", "Lrg;");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "rg", "func_76041_a", "(I)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72910_y", "()Ljava/util/List;", "()Ljava/util/List<Lvg;>;", null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175646_b", "(Let;Lavj;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76630_e", "()V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "countEntities", "(Ljava/lang/Class;)I", "(Ljava/lang/Class<*>;)I", null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 3);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, "java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitTypeInsn(INSTANCEOF, "vq");
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitTypeInsn(CHECKCAST, "vq");
            mv.visitMethodInsn(INVOKEVIRTUAL, "vq", "func_104002_bU", "()Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNE, l3);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"vg"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Class", "isAssignableFrom", "(Ljava/lang/Class;)Z", false);
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitIincInsn(2, 1);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175650_b", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lvg;>;)V", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
            mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lvg;Lamu;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72923_a", "(Lvg;)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175681_c", "(Ljava/util/Collection;)V", "(Ljava/util/Collection<Lvg;>;)V", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72997_g", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "addAll", "(Ljava/util/Collection;)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190527_a", "(Laow;Let;ZLfa;Lvg;)Z", null, null);
            {
                av0 = mv.visitParameterAnnotation(4, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ILOAD, 3);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitInsn(ACONST_NULL);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"awt"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176223_P", "()Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getCollisionBoundingBox", "(Lamy;Let;)Lbhb;", true);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"bhb"});
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitFieldInsn(GETSTATIC, "aow", "field_185506_k", "Lbhb;");
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ACMPEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bhb", "func_186670_a", "(Let;)Lbhb;", false);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72855_b", "(Lbhb;Lvg;)Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"bhb"}, 0, null);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_185904_a", "()Lbcz;", true); //TODO Was missing obf method name
            mv.visitFieldInsn(GETSTATIC, "bcz", "field_151594_q", "Lbcz;");
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ACMPNE, l3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETSTATIC, "aox", "field_150467_bQ", "Laow;");
            mv.visitJumpInsn(IF_ACMPNE, l3);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176200_f", "(Lamy;Let;)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_176198_a", "(Lamu;Let;Lfa;)Z", false);
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitInsn(ICONST_1);
            Label l5 = new Label();
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_181545_F", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_181546_a", "I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_181544_b", "(I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_181546_a", "I");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175627_a", "(Let;Lfa;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getStrongPower", "(Lamy;Let;Lfa;)I", true);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175624_G", "()Lamz;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76067_t", "()Lamz;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175627_a", "(Let;)I", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "DOWN", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "UP", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "NORTH", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "SOUTH", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l3);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "WEST", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l4 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l4);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "EAST", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;Lfa;)I", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "max", "(II)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 15);
            Label l5 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l5);
            mv.visitVarInsn(ILOAD, 2);
            Label l6 = new Label();
            mv.visitJumpInsn(GOTO, l6);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175709_b", "(Let;Lfa;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175651_c", "(Let;Lfa;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "shouldCheckWeakPower", "(Lawt;Lamy;Let;Lfa;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175627_a", "(Let;)I", false);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"awt"}, 0, null);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "getWeakPower", "(Lamy;Let;Lfa;)I", true);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175640_z", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177977_b", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "DOWN", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177984_a", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "UP", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFLE, l1);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177978_c", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "NORTH", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFLE, l2);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177968_d", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "SOUTH", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFLE, l3);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177976_e", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "WEST", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFLE, l4);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177974_f", "()Let;", false);
            mv.visitFieldInsn(GETSTATIC, "fa", "EAST", "Lfa;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFLE, l5);
            mv.visitInsn(ICONST_1);
            Label l6 = new Label();
            mv.visitJumpInsn(GOTO, l6);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isBlockIndirectlyGettingPowered", "(Let;)I", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitMethodInsn(INVOKESTATIC, "fa", "values", "()[Lfa;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 6, new Object[]{"amu", "et", Opcodes.INTEGER, "[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 4);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177972_a", "(Lfa;)Let;", false);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175651_c", "(Let;Lfa;)I", false);
            mv.visitVarInsn(ISTORE, 7);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitIntInsn(BIPUSH, 15);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l2);
            mv.visitIntInsn(BIPUSH, 15);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"fa", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ILOAD, 2);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l3);
            mv.visitVarInsn(ILOAD, 7);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72890_a", "(Lvg;D)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitVarInsn(DLOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190525_a", "(DDDDZ)Laed;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(10, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184136_b", "(Lvg;D)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitVarInsn(DLOAD, 2);
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190525_a", "(DDDDZ)Laed;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(10, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190525_a", "(DDDDZ)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 9);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_188444_d", "Lcom/google/common/base/Predicate;");
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_180132_d", "Lcom/google/common/base/Predicate;");
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/google/common/base/Predicate"});
            mv.visitVarInsn(ASTORE, 10);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(DLOAD, 1);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_190525_a", "(DDDDLcom/google/common/base/Predicate;)Laed;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(10, 11);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190525_a", "(DDDDLcom/google/common/base/Predicate;)Laed;", "(DDDDLcom/google/common/base/Predicate<Lvg;>;)Laed;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitLdcInsn(new Double("-1.0"));
            mv.visitVarInsn(DSTORE, 10);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 13);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.DOUBLE, "aed", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 13);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 13);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 14);
            mv.visitVarInsn(ALOAD, 9);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitVarInsn(DLOAD, 1);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_174818_b", "(DDD)D", false);
            mv.visitVarInsn(DSTORE, 15);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPG);
            Label l3 = new Label();
            mv.visitJumpInsn(IFLT, l3);
            mv.visitVarInsn(DLOAD, 15);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DMUL);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"aed", Opcodes.DOUBLE}, 0, null);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitLdcInsn(new Double("-1.0"));
            mv.visitInsn(DCMPL);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(DLOAD, 15);
            mv.visitVarInsn(DLOAD, 10);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 15);
            mv.visitVarInsn(DSTORE, 10);
            mv.visitVarInsn(ALOAD, 14);
            mv.visitVarInsn(ASTORE, 12);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(13, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(7, 17);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175636_b", "(DDDD)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 9);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 9);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 9);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 10);
            mv.visitFieldInsn(GETSTATIC, "vk", "field_180132_d", "Lcom/google/common/base/Predicate;");
            mv.visitVarInsn(ALOAD, 10);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 10);
            mv.visitVarInsn(DLOAD, 1);
            mv.visitVarInsn(DLOAD, 3);
            mv.visitVarInsn(DLOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_174818_b", "(DDD)D", false);
            mv.visitVarInsn(DSTORE, 11);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPG);
            Label l3 = new Label();
            mv.visitJumpInsn(IFLT, l3);
            mv.visitVarInsn(DLOAD, 11);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DMUL);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"aed", Opcodes.DOUBLE}, 0, null);
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            mv.visitIincInsn(9, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(7, 13);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184139_a", "(Lvg;DD)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70163_u", "D");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Function");
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Predicate");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184139_a", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Laed;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(13, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184139_a", "(Let;DD)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitInsn(F2D);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitInsn(F2D);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(I2F);
            mv.visitLdcInsn(new Float("0.5"));
            mv.visitInsn(FADD);
            mv.visitInsn(F2D);
            mv.visitVarInsn(DLOAD, 2);
            mv.visitVarInsn(DLOAD, 4);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Function");
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "com/google/common/base/Predicate");
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_184139_a", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Laed;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(13, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184139_a", "(DDDDDLcom/google/common/base/Function;Lcom/google/common/base/Predicate;)Laed;", "(DDDDDLcom/google/common/base/Function<Laed;Ljava/lang/Double;>;Lcom/google/common/base/Predicate<Laed;>;)Laed;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(5, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(6, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitLdcInsn(new Double("-1.0"));
            mv.visitVarInsn(DSTORE, 13);
            mv.visitInsn(ACONST_NULL);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 16);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{Opcodes.DOUBLE, "aed", Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 16);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 16);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 17);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitFieldInsn(GETFIELD, "aed", "field_71075_bZ", "Laeb;");
            mv.visitFieldInsn(GETFIELD, "aeb", "field_75102_a", "Z");
            Label l2 = new Label();
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_70089_S", "()Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_175149_v", "()Z", false);
            mv.visitJumpInsn(IFNE, l2);
            mv.visitVarInsn(ALOAD, 12);
            Label l3 = new Label();
            mv.visitJumpInsn(IFNULL, l3);
            mv.visitVarInsn(ALOAD, 12);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Predicate", "apply", "(Ljava/lang/Object;)Z", true);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"aed"}, 0, null);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(DLOAD, 1);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitFieldInsn(GETFIELD, "aed", "field_70163_u", "D");
            mv.visitVarInsn(DLOAD, 5);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_174818_b", "(DDD)D", false);
            mv.visitVarInsn(DSTORE, 18);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_70093_af", "()Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitLdcInsn(new Double("0.800000011920929"));
            mv.visitInsn(DMUL);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.DOUBLE, Opcodes.DOUBLE}, 0, null);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_82150_aj", "()Z", false);
            Label l5 = new Label();
            mv.visitJumpInsn(IFEQ, l5);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_82243_bO", "()F", false);
            mv.visitVarInsn(FSTORE, 22);
            mv.visitVarInsn(FLOAD, 22);
            mv.visitLdcInsn(new Float("0.1"));
            mv.visitInsn(FCMPG);
            Label l6 = new Label();
            mv.visitJumpInsn(IFGE, l6);
            mv.visitLdcInsn(new Float("0.1"));
            mv.visitVarInsn(FSTORE, 22);
            mv.visitLabel(l6);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.FLOAT}, 0, null);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitLdcInsn(new Float("0.7"));
            mv.visitVarInsn(FLOAD, 22);
            mv.visitInsn(FMUL);
            mv.visitInsn(F2D);
            mv.visitInsn(DMUL);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 11);
            Label l7 = new Label();
            mv.visitJumpInsn(IFNULL, l7);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(ALOAD, 11);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitMethodInsn(INVOKEINTERFACE, "com/google/common/base/Function", "apply", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
            mv.visitInsn(DCONST_1);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Double", "valueOf", "(D)Ljava/lang/Double;", false);
            mv.visitMethodInsn(INVOKESTATIC, "com/google/common/base/MoreObjects", "firstNonNull", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", false);
            mv.visitTypeInsn(CHECKCAST, "java/lang/Double");
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Double", "doubleValue", "()D", false);
            mv.visitInsn(DMUL);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitLabel(l7);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeHooks", "getPlayerVisibilityDistance", "(Laed;DD)D", false);
            mv.visitVarInsn(DSTORE, 20);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPG);
            Label l8 = new Label();
            mv.visitJumpInsn(IFLT, l8);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitFieldInsn(GETFIELD, "aed", "field_70163_u", "D");
            mv.visitVarInsn(DLOAD, 3);
            mv.visitInsn(DSUB);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Math", "abs", "(D)D", false);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitVarInsn(DLOAD, 9);
            mv.visitInsn(DMUL);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l8);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 7);
            mv.visitInsn(DCONST_0);
            mv.visitInsn(DCMPG);
            Label l9 = new Label();
            mv.visitJumpInsn(IFLT, l9);
            mv.visitVarInsn(DLOAD, 18);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitVarInsn(DLOAD, 20);
            mv.visitInsn(DMUL);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l9);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 13);
            mv.visitLdcInsn(new Double("-1.0"));
            mv.visitInsn(DCMPL);
            Label l10 = new Label();
            mv.visitJumpInsn(IFEQ, l10);
            mv.visitVarInsn(DLOAD, 18);
            mv.visitVarInsn(DLOAD, 13);
            mv.visitInsn(DCMPG);
            mv.visitJumpInsn(IFGE, l2);
            mv.visitLabel(l10);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(DLOAD, 18);
            mv.visitVarInsn(DSTORE, 13);
            mv.visitVarInsn(ALOAD, 17);
            mv.visitVarInsn(ASTORE, 15);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitIincInsn(16, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 15);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(7, 23);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72924_a", "(Ljava/lang/String;)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_70005_c_", "()Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_152378_a", "(Ljava/util/UUID;)Laed;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73010_i", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aed", "func_110124_au", "()Ljava/util/UUID;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/UUID", "equals", "(Ljava/lang/Object;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(2, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72882_A", "()V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72906_B", "()V", null, new String[]{"amv"});
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73019_z", "Lbfe;");
            mv.visitMethodInsn(INVOKEINTERFACE, "bfe", "func_75762_c", "()V", true);
            mv.visitInsn(RETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_82738_a", "(J)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(LLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_82572_b", "(J)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72905_C", "()J", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getSeed", "()J", false);
            mv.visitInsn(LRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_82737_E", "()J", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_82573_f", "()J", false);
            mv.visitInsn(LRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72820_D", "()J", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getWorldTime", "()J", false);
            mv.visitInsn(LRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72877_b", "(J)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(LLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "setWorldTime", "(J)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175694_M", "()Let;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getSpawnPoint", "()Let;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175723_af", "()Laxn;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177743_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "et");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175723_af", "()Laxn;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177731_f", "()D", false);
            mv.visitInsn(DCONST_0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175723_af", "()Laxn;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axn", "func_177721_g", "()D", false);
            mv.visitMethodInsn(INVOKESPECIAL, "et", "<init>", "(DDD)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72800_K", "(Let;)Let;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"et"}, 0, null);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(9, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175652_B", "(Let;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "setSpawnPoint", "(Let;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72897_h", "(Lvg;)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70165_t", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 2);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitFieldInsn(GETFIELD, "vg", "field_70161_v", "D");
            mv.visitLdcInsn(new Double("16.0"));
            mv.visitInsn(DDIV);
            mv.visitMethodInsn(INVOKESTATIC, "rk", "func_76141_d", "(D)I", false);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitInsn(ICONST_2);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitIntInsn(BIPUSH, -2);
            mv.visitVarInsn(ISTORE, 5);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 6, new Object[]{"amu", "vg", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(ICONST_2);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l1);
            mv.visitIntInsn(BIPUSH, -2);
            mv.visitVarInsn(ISTORE, 6);
            Label l2 = new Label();
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(ICONST_2);
            Label l3 = new Label();
            mv.visitJumpInsn(IF_ICMPGT, l3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 6);
            mv.visitInsn(IADD);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromChunkCoords", "(II)Laxw;", false);
            mv.visitInsn(POP);
            mv.visitIincInsn(6, 1);
            mv.visitJumpInsn(GOTO, l2);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "contains", "(Ljava/lang/Object;)Z", true);
            Label l4 = new Label();
            mv.visitJumpInsn(IFNE, l4);
            mv.visitFieldInsn(GETSTATIC, "net/minecraftforge/common/MinecraftForge", "EVENT_BUS", "Lnet/minecraftforge/fml/common/eventhandler/EventBus;");
            mv.visitTypeInsn(NEW, "net/minecraftforge/event/entity/EntityJoinWorldEvent");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/event/entity/EntityJoinWorldEvent", "<init>", "(Lvg;Lamu;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/fml/common/eventhandler/EventBus", "post", "(Lnet/minecraftforge/fml/common/eventhandler/Event;)Z", false);
            mv.visitJumpInsn(IFNE, l4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "add", "(Ljava/lang/Object;)Z", true);
            mv.visitInsn(POP);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 7);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175660_a", "(Laed;Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "canMineBlock", "(Laed;Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "canMineBlockBody", "(Laed;Let;)Z", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_1);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72960_a", "(Lvg;B)V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72863_F", "()Laxr;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73020_y", "Laxr;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175641_c", "(Let;Laow;II)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "onBlockEventReceived", "(Lamu;Let;II)Z", true);
            mv.visitInsn(POP);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72860_G", "()Lbfe;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73019_z", "Lbfe;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72912_H", "()Lbfd;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_82736_K", "()Lamr;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_82574_x", "()Lamr;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72854_c", "()V", null, null);
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72819_i", "(F)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73018_p", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73017_q", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73018_p", "F");
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitInsn(FMUL);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_147442_i", "(F)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73018_p", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73017_q", "F");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72867_j", "(F)F", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73003_n", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73004_o", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73003_n", "F");
            mv.visitInsn(FSUB);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitInsn(FMUL);
            mv.visitInsn(FADD);
            mv.visitInsn(FRETURN);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72894_k", "(F)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73003_n", "F");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(FLOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73004_o", "F");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72911_I", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72819_i", "(F)F", false);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.9"));
            mv.visitInsn(DCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72896_J", "()Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(FCONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72867_j", "(F)F", false);
            mv.visitInsn(F2D);
            mv.visitLdcInsn(new Double("0.2"));
            mv.visitInsn(DCMPL);
            Label l0 = new Label();
            mv.visitJumpInsn(IFLE, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175727_C", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72896_J", "()Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175678_i", "(Let;)Z", false);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNE, l1);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175725_q", "(Let;)Let;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177956_o", "()I", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IF_ICMPLE, l2);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180494_b", "(Let;)Lanh;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "anh", "func_76746_c", "()Z", false);
            Label l3 = new Label();
            mv.visitJumpInsn(IFEQ, l3);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"anh"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175708_f", "(Let;Z)Z", false);
            Label l4 = new Label();
            mv.visitJumpInsn(IFEQ, l4);
            mv.visitInsn(ICONST_0);
            Label l5 = new Label();
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "anh", "func_76738_d", "()Z", false);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180502_D", "(Let;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "isBlockHighHumidity", "(Let;)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175693_T", "()Lbfm;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72988_C", "Lbfm;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72823_a", "(Ljava/lang/String;Lbet;)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72988_C", "Lbfm;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfm", "func_75745_a", "(Ljava/lang/String;Lbet;)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72943_a", "(Ljava/lang/Class;Ljava/lang/String;)Lbet;", "(Ljava/lang/Class<+Lbet;>;Ljava/lang/String;)Lbet;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72988_C", "Lbfm;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfm", "func_75742_a", "(Ljava/lang/Class;Ljava/lang/String;)Lbet;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72841_b", "(Ljava/lang/String;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72988_C", "Lbfm;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfm", "func_75743_a", "(Ljava/lang/String;)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175669_a", "(ILet;I)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_180440_a", "(ILet;I)V", true);
            mv.visitIincInsn(4, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180498_a", "(ILet;I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitInsn(ACONST_NULL);
            mv.visitTypeInsn(CHECKCAST, "aed");
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180498_a", "(Laed;ILet;I)V", false);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_180498_a", "(Laed;ILet;I)V", null, null);
            {
                av0 = mv.visitParameterAnnotation(0, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            mv.visitLabel(l0);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            Label l3 = new Label();
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 5);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_180439_a", "(Laed;ILet;I)V", true);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l3);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitLdcInsn("Playing level event");
            mv.visitMethodInsn(INVOKESTATIC, "b", "func_85055_a", "(Ljava/lang/Throwable;Ljava/lang/String;)Lb;", false);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitLdcInsn("Level event being played");
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85058_a", "(Ljava/lang/String;)Lc;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Block coordinates");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKESTATIC, "c", "func_180522_a", "(Let;)Ljava/lang/String;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Event source");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Event type");
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitLdcInsn("Event data");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            mv.visitTypeInsn(NEW, "f");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKESPECIAL, "f", "<init>", "(Lb;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(5, 8);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72800_K", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getHeight", "()I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72940_L", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getActualHeight", "()I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72843_D", "(III)Ljava/util/Random;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ILOAD, 1);
            mv.visitInsn(I2L);
            mv.visitLdcInsn(new Long(341873128712L));
            mv.visitInsn(LMUL);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitInsn(I2L);
            mv.visitLdcInsn(new Long(132897987541L));
            mv.visitInsn(LMUL);
            mv.visitInsn(LADD);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72912_H", "()Lbfd;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76063_b", "()J", false);
            mv.visitInsn(LADD);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(I2L);
            mv.visitInsn(LADD);
            mv.visitVarInsn(LSTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitVarInsn(LLOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Random", "setSeed", "(J)V", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73012_v", "Ljava/util/Random;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(6, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72914_a", "(Lb;)Lc;", null, null);
            mv.visitCode();
            Label l0 = new Label();
            Label l1 = new Label();
            Label l2 = new Label();
            mv.visitTryCatchBlock(l0, l1, l2, "java/lang/Throwable");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitLdcInsn("Affected level");
            mv.visitInsn(ICONST_1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "b", "func_85057_a", "(Ljava/lang/String;I)Lc;", false);
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("Level name");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            Label l3 = new Label();
            mv.visitJumpInsn(IFNONNULL, l3);
            mv.visitLdcInsn("????");
            Label l4 = new Label();
            mv.visitJumpInsn(GOTO, l4);
            mv.visitLabel(l3);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "b", "c"}, 2, new Object[]{"c", "java/lang/String"});
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_76065_j", "()Ljava/lang/String;", false);
            mv.visitLabel(l4);
            mv.visitFrame(Opcodes.F_FULL, 3, new Object[]{"amu", "b", "c"}, 3, new Object[]{"c", "java/lang/String", "java/lang/Object"});
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71507_a", "(Ljava/lang/String;Ljava/lang/Object;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("All players");
            mv.visitTypeInsn(NEW, "amu$3");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "amu$3", "<init>", "(Lamu;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_189529_a", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("Chunk stats");
            mv.visitTypeInsn(NEW, "amu$4");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESPECIAL, "amu$4", "<init>", "(Lamu;)V", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_189529_a", "(Ljava/lang/String;Lnet/minecraft/crash/ICrashReportDetail;)V", false);
            mv.visitLabel(l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72986_A", "Lbfd;");
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_85118_a", "(Lc;)V", false);
            mv.visitLabel(l1);
            Label l5 = new Label();
            mv.visitJumpInsn(GOTO, l5);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitLdcInsn("Level Data Unobtainable");
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "c", "func_71499_a", "(Ljava/lang/String;Ljava/lang/Throwable;)V", false);
            mv.visitLabel(l5);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(5, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72919_O", "()D", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "getHorizon", "()D", false);
            mv.visitInsn(DRETURN);
            mv.visitMaxs(2, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175715_c", "(ILet;I)V", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73021_x", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "amw");
            mv.visitVarInsn(ASTORE, 5);
            mv.visitVarInsn(ALOAD, 5);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitMethodInsn(INVOKEINTERFACE, "amw", "func_180441_b", "(ILet;I)V", true);
            mv.visitIincInsn(4, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 6);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_83015_S", "()Ljava/util/Calendar;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_82737_E", "()J", false);
            mv.visitLdcInsn(new Long(600L));
            mv.visitInsn(LREM);
            mv.visitInsn(LCONST_0);
            mv.visitInsn(LCMP);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_83016_L", "Ljava/util/Calendar;");
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraft/server/MinecraftServer", "func_130071_aq", "()J", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/Calendar", "setTimeInMillis", "(J)V", false);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_83016_L", "Ljava/util/Calendar;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(4, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_92088_a", "(DDDDDDLfy;)V", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(6, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(RETURN);
            mv.visitMaxs(0, 14);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_96441_U", "()Lbhk;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_96442_D", "Lbhk;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175666_e", "(Let;Laow;)V", null, null);
            mv.visitCode();
            mv.visitFieldInsn(GETSTATIC, "fa", "field_82609_l", "[Lfa;");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitInsn(ARRAYLENGTH);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 5);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"[Lfa;", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitVarInsn(ILOAD, 4);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitInsn(AALOAD);
            mv.visitVarInsn(ASTORE, 6);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177972_a", "(Lfa;)Let;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "onNeighborChange", "(Lamy;Let;Let;)V", false);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "func_149721_r", "(Lawt;Lamy;Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 6);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177972_a", "(Lfa;)Let;", false);
            mv.visitVarInsn(ASTORE, 7);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ASTORE, 8);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "getWeakChanges", "(Lamy;Let;)Z", false);
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitVarInsn(ALOAD, 8);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "func_177230_c", "()Laow;", true);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 7);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "aow", "onNeighborChange", "(Lamy;Let;Let;)V", false);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(5, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 9);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175649_E", "(Let;)Lua;", null, null);
            mv.visitCode();
            mv.visitInsn(LCONST_0);
            mv.visitVarInsn(LSTORE, 2);
            mv.visitInsn(FCONST_0);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175668_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFEQ, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_130001_d", "()F", false);
            mv.visitVarInsn(FSTORE, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177416_w", "()J", false);
            mv.visitVarInsn(LSTORE, 2);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.LONG, Opcodes.FLOAT}, 0, null);
            mv.visitTypeInsn(NEW, "ua");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175659_aa", "()Ltz;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72820_D", "()J", false);
            mv.visitVarInsn(LLOAD, 2);
            mv.visitVarInsn(FLOAD, 4);
            mv.visitMethodInsn(INVOKESPECIAL, "ua", "<init>", "(Ltz;JJF)V", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(8, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175659_aa", "()Ltz;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_72912_H", "()Lbfd;", false);
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfd", "func_176130_y", "()Ltz;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175657_ab", "()I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73008_k", "I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175692_b", "(I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73008_k", "I");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175658_ac", "()I", null, null);
            {
                av0 = mv.visitAnnotation("Lnet/minecraftforge/fml/relauncher/SideOnly;", true);
                av0.visitEnum("value", "Lnet/minecraftforge/fml/relauncher/Side;", "CLIENT");
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73016_r", "I");
            mv.visitInsn(IRETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175702_c", "(I)V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitFieldInsn(PUTFIELD, "amu", "field_73016_r", "I");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175714_ae", "()Lzq;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72982_D", "Lzq;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_175723_af", "()Laxn;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_175728_M", "Laxn;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_72916_c", "(II)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175694_M", "()Let;", false);
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ILOAD, 1);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(IMUL);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177958_n", "()I", false);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 4);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitIntInsn(BIPUSH, 16);
            mv.visitInsn(IMUL);
            mv.visitIntInsn(BIPUSH, 8);
            mv.visitInsn(IADD);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "et", "func_177952_p", "()I", false);
            mv.visitInsn(ISUB);
            mv.visitVarInsn(ISTORE, 5);
            mv.visitIntInsn(SIPUSH, 128);
            mv.visitVarInsn(ISTORE, 6);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIntInsn(BIPUSH, -128);
            Label l0 = new Label();
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitIntInsn(SIPUSH, 128);
            mv.visitJumpInsn(IF_ICMPGT, l0);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIntInsn(BIPUSH, -128);
            mv.visitJumpInsn(IF_ICMPLT, l0);
            mv.visitVarInsn(ILOAD, 5);
            mv.visitIntInsn(SIPUSH, 128);
            mv.visitJumpInsn(IF_ICMPGT, l0);
            mv.visitInsn(ICONST_1);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_FULL, 7, new Object[]{"amu", Opcodes.INTEGER, Opcodes.INTEGER, "et", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            mv.visitInsn(ICONST_0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 7);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isSideSolid", "(Let;Lfa;)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitInsn(ICONST_0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "isSideSolid", "(Let;Lfa;Z)Z", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "isSideSolid", "(Let;Lfa;Z)Z", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175701_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ASTORE, 4);
            mv.visitVarInsn(ALOAD, 4);
            Label l1 = new Label();
            mv.visitJumpInsn(IFNULL, l1);
            mv.visitVarInsn(ALOAD, 4);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_76621_g", "()Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"axw"}, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_180495_p", "(Let;)Lawt;", false);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "awt", "isSideSolid", "(Lamy;Let;Lfa;)Z", true);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(4, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPersistentChunks", "()Lcom/google/common/collect/ImmutableSetMultimap;", "()Lcom/google/common/collect/ImmutableSetMultimap<Lamn;Lnet/minecraftforge/common/ForgeChunkManager$Ticket;>;", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeChunkManager", "getPersistentChunksFor", "(Lamu;)Lcom/google/common/collect/ImmutableSetMultimap;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPersistentChunkIterable", "(Ljava/util/Iterator;)Ljava/util/Iterator;", "(Ljava/util/Iterator<Laxw;>;)Ljava/util/Iterator<Laxw;>;", null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/common/ForgeChunkManager", "getPersistentChunksIterableFor", "(Lamu;Ljava/util/Iterator;)Ljava/util/Iterator;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getBlockLightOpacity", "(Let;)I", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_175701_a", "(Let;)Z", false);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNE, l0);
            mv.visitInsn(ICONST_0);
            mv.visitInsn(IRETURN);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "getChunkFromBlockCoords", "(Let;)Laxw;", false);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177437_b", "(Let;)I", false);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(2, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "countEntities", "(Lvr;Z)I", null, null);
            mv.visitCode();
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 3);
            mv.visitInsn(ICONST_0);
            mv.visitVarInsn(ISTORE, 4);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            mv.visitVarInsn(ILOAD, 4);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IF_ICMPGE, l1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_72996_f", "Ljava/util/List;");
            mv.visitVarInsn(ILOAD, 4);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "vg");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ILOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "vg", "isCreatureType", "(Lvr;Z)Z", false);
            Label l2 = new Label();
            mv.visitJumpInsn(IFEQ, l2);
            mv.visitIincInsn(3, 1);
            mv.visitLabel(l2);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitIincInsn(4, 1);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitVarInsn(ILOAD, 3);
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 5);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC + ACC_DEPRECATED, "markTileEntitiesInChunkForRemoval", "(Laxw;)V", null, null);
            {
                av0 = mv.visitAnnotation("Ljava/lang/Deprecated;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKEVIRTUAL, "axw", "func_177434_r", "()Ljava/util/Map;", false);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "values", "()Ljava/util/Collection;", true);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Collection", "iterator", "()Ljava/util/Iterator;", true);
            mv.visitVarInsn(ASTORE, 2);
            Label l0 = new Label();
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/Iterator"}, 0, null);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
            Label l1 = new Label();
            mv.visitJumpInsn(IFEQ, l1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
            mv.visitTypeInsn(CHECKCAST, "avj");
            mv.visitVarInsn(ASTORE, 3);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 3);
            mv.visitMethodInsn(INVOKEVIRTUAL, "amu", "func_147457_a", "(Lavj;)V", false);
            mv.visitJumpInsn(GOTO, l0);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PROTECTED, "initCapabilities", "()V", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "aym", "initCapabilities", "()Lnet/minecraftforge/common/capabilities/ICapabilityProvider;", false);
            mv.visitVarInsn(ASTORE, 1);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 1);
            mv.visitMethodInsn(INVOKESTATIC, "net/minecraftforge/event/ForgeEventFactory", "gatherCapabilities", "(Lamu;Lnet/minecraftforge/common/capabilities/ICapabilityProvider;)Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "perWorldStorage", "Lbfm;");
            mv.visitLdcInsn(Type.getType("Lnet/minecraftforge/common/util/WorldCapabilityData;"));
            mv.visitLdcInsn("capabilities");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfm", "func_75742_a", "(Ljava/lang/Class;Ljava/lang/String;)Lbet;", false);
            mv.visitTypeInsn(CHECKCAST, "net/minecraftforge/common/util/WorldCapabilityData");
            mv.visitVarInsn(ASTORE, 2);
            mv.visitVarInsn(ALOAD, 2);
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitTypeInsn(NEW, "net/minecraftforge/common/util/WorldCapabilityData");
            mv.visitInsn(DUP);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            mv.visitMethodInsn(INVOKESPECIAL, "net/minecraftforge/common/util/WorldCapabilityData", "<init>", "(Lnet/minecraftforge/common/util/INBTSerializable;)V", false);
            mv.visitFieldInsn(PUTFIELD, "amu", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "perWorldStorage", "Lbfm;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
            mv.visitFieldInsn(GETFIELD, "net/minecraftforge/common/util/WorldCapabilityData", "field_76190_i", "Ljava/lang/String;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "bfm", "func_75745_a", "(Ljava/lang/String;Lbet;)V", false);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"net/minecraftforge/common/capabilities/ICapabilityProvider", "net/minecraftforge/common/util/WorldCapabilityData"}, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitFieldInsn(PUTFIELD, "amu", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilityData", "Lnet/minecraftforge/common/util/WorldCapabilityData;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_73011_w", "Laym;");
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/util/WorldCapabilityData", "setCapabilities", "(Laym;Lnet/minecraftforge/common/util/INBTSerializable;)V", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitInsn(RETURN);
            mv.visitMaxs(4, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "hasCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lfa;)Z", "(Lnet/minecraftforge/common/capabilities/Capability<*>;Lfa;)Z", null);
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitInsn(ICONST_0);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/capabilities/CapabilityDispatcher", "hasCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lfa;)Z", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            mv.visitInsn(IRETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lfa;)Ljava/lang/Object;", "<T:Ljava/lang/Object;>(Lnet/minecraftforge/common/capabilities/Capability<TT;>;Lfa;)TT;", null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            {
                av0 = mv.visitParameterAnnotation(1, "Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            Label l0 = new Label();
            mv.visitJumpInsn(IFNONNULL, l0);
            mv.visitInsn(ACONST_NULL);
            Label l1 = new Label();
            mv.visitJumpInsn(GOTO, l1);
            mv.visitLabel(l0);
            mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "capabilities", "Lnet/minecraftforge/common/capabilities/CapabilityDispatcher;");
            mv.visitVarInsn(ALOAD, 1);
            mv.visitVarInsn(ALOAD, 2);
            mv.visitMethodInsn(INVOKEVIRTUAL, "net/minecraftforge/common/capabilities/CapabilityDispatcher", "getCapability", "(Lnet/minecraftforge/common/capabilities/Capability;Lfa;)Ljava/lang/Object;", false);
            mv.visitLabel(l1);
            mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Object"});
            mv.visitInsn(ARETURN);
            mv.visitMaxs(3, 3);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "getPerWorldStorage", "()Lbfm;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "perWorldStorage", "Lbfm;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184135_a", "(Lht;)V", "(Lht<*>;)V", null);
            mv.visitCode();
            mv.visitTypeInsn(NEW, "java/lang/UnsupportedOperationException");
            mv.visitInsn(DUP);
            mv.visitLdcInsn("Can't send packets to server unless you're on the client.");
            mv.visitMethodInsn(INVOKESPECIAL, "java/lang/UnsupportedOperationException", "<init>", "(Ljava/lang/String;)V", false);
            mv.visitInsn(ATHROW);
            mv.visitMaxs(3, 2);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_184146_ak", "()Lbfv;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitFieldInsn(GETFIELD, "amu", "field_184151_B", "Lbfv;");
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PUBLIC, "func_190528_a", "(Ljava/lang/String;Let;Z)Let;", null, null);
            {
                av0 = mv.visitAnnotation("Ljavax/annotation/Nullable;", true);
                av0.visitEnd();
            }
            mv.visitCode();
            mv.visitInsn(ACONST_NULL);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 4);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC + ACC_SYNTHETIC, "lambda$updateEntities$1", "(Lavj;)Ljava/lang/String;", null, null);
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Object", "getClass", "()Ljava/lang/Class;", false);
            mv.visitMethodInsn(INVOKESTATIC, "avj", "func_190559_a", "(Ljava/lang/Class;)Lnf;", false);
            mv.visitMethodInsn(INVOKESTATIC, "java/lang/String", "valueOf", "(Ljava/lang/Object;)Ljava/lang/String;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_PRIVATE + ACC_STATIC + ACC_SYNTHETIC, "lambda$getBiomeForCoordsBody$0", "(Let;)Ljava/lang/String;", null, new String[]{"java/lang/Exception"});
            mv.visitCode();
            mv.visitVarInsn(ALOAD, 0);
            mv.visitMethodInsn(INVOKESTATIC, "c", "func_180522_a", "(Let;)Ljava/lang/String;", false);
            mv.visitInsn(ARETURN);
            mv.visitMaxs(1, 1);
            mv.visitEnd();
        }
        {
            mv = cw.visitMethod(ACC_STATIC, "<clinit>", "()V", null, null);
            mv.visitCode();
            mv.visitLdcInsn(new Double("2.0"));
            mv.visitFieldInsn(PUTSTATIC, "amu", "MAX_ENTITY_RADIUS", "D");
            mv.visitInsn(RETURN);
            mv.visitMaxs(2, 0);
            mv.visitEnd();
        }
    }
}
